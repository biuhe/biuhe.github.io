<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Biu&#39;s Blog</title>
  
  
  <link href="http://blog.heyb.top/atom.xml" rel="self"/>
  
  <link href="http://blog.heyb.top/"/>
  <updated>2023-07-16T15:08:43.940Z</updated>
  <id>http://blog.heyb.top/</id>
  
  <author>
    <name>He Yongbiao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>「Stable-Diffusion」Stable-Diffusion-WebUI-For-Linux-安装教程</title>
    <link href="http://blog.heyb.top/2023/07/08/stable-diffusion-webui-for-linux-installation-tutorial.html"/>
    <id>http://blog.heyb.top/2023/07/08/stable-diffusion-webui-for-linux-installation-tutorial.html</id>
    <published>2023-07-08T14:40:34.000Z</published>
    <updated>2023-07-16T15:08:43.940Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>之前我们讲解了如何在Mac 上搭建 Stable-Diffusion-WebUI，但是因为仅能使用CPU的原因，生成图片特别慢。</p><p>本文讲解如何在一台有GPU的Linux服务器上部署。</p><h2 id="配置服务器"><a class="markdownIt-Anchor" href="#配置服务器"></a> 配置服务器</h2><p>首先我们在云服务器商申请购买一台服务器，GPU建议使用 12GB 以上显存的。</p><p>系统镜像我这里选择的是公共镜像CentOS-64位-CentOS 8.4 64位。一定要选择后台自动安装GPU驱动，避免自己手动安装GPU驱动。然后等待一会等系统安装好驱动后再进行安装stable-diffusion-webui</p><p>带宽计费方式可以选择按使用流量计费，带宽值建议拉到 100Mbps，因为安装时需要下载的依赖和模型非常多，非常大，后续我们可以再动态调配带宽。</p><h2 id="查看显卡驱动"><a class="markdownIt-Anchor" href="#查看显卡驱动"></a> 查看显卡驱动</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure><p>如果显示了一个表格，里面有NVIDIA、Driver Version、CUDA version等信息，则代表GPU驱动已经安装完成。</p><p><code>nvcc -V</code> 也可以查看版本信息，在腾讯云中如果返回 <code>nvcc: command not found</code> 则需要配置一下环境变量。</p><p>进入环境配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入环境配置</span></span><br><span class="line">vim ~/.bash_profile</span><br></pre></td></tr></table></figure><p>添加 cuda 环境设置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在PATH 中添加 /usr/local/cuda/bin，如</span></span><br><span class="line">PATH=$PATH:/usr/local/cuda/bin</span><br><span class="line"></span><br><span class="line">export PATH</span><br></pre></td></tr></table></figure><p>然后按 <code>Esc</code> 退出，输入 <code>:wq</code> 保存 <code>bash_profile</code>， 然后在输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure><h2 id="安装-anaconda"><a class="markdownIt-Anchor" href="#安装-anaconda"></a> 安装 Anaconda</h2><p>官方仓库下载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://repo.anaconda.com/archive/Anaconda3-2023.03-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><p>通过清华镜像仓库下载</p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/">清华大学开源软件镜像站 Anaconda Archive</a> 可以查看现在最新版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2023.03-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><p>如果遇到不能下载的，则在 <code>wget </code>后添加参数 <code>wget -U NoSuchBrowser</code>，完整如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -U NoSuchBrowser https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2023.03-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><p>下载后安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh Anaconda3-2023.03-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><p>提示enter按回车，提示yes or no的地方全部输入yes即可，安装完成后执行 “bash”命令，重新载入bash终端，确保conda命令可用。安装后还可以配置 Conda 镜像（参考文章：<a href="https://mirror.tuna.tsinghua.edu.cn/help/anaconda/">anaconda 镜像站使用帮助</a>）</p><p>验证安装，可以看到输出信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda info</span><br></pre></td></tr></table></figure><h2 id="安装-pytorch"><a class="markdownIt-Anchor" href="#安装-pytorch"></a> 安装 PyTorch</h2><p>pytorch需要安装到anaconda的虚拟环境中，所以使用conda时需要先有一个虚拟环境并进入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">若还没有虚拟环境需要创建一个，&lt;env_name&gt;是环境名称，python选择指定的版本，sd需要的python&gt;3.10 <span class="comment">#conda create -n &lt;env_name&gt; python=x.xx.x</span></span></span><br><span class="line">conda create -n sd python=3.10.11</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动虚拟环境，activate就是启动，sd是环境名称</span></span><br><span class="line">conda activate sd</span><br></pre></td></tr></table></figure><p>去pytorch官网配置自己服务器所需要的pytorch：<a href="https://pytorch.org/get-started/locally/">Start Locally | PyTorch</a></p><p>Pytorch build选择stable稳定版，操作系统是linux，由于上面安装了anaconda所以package选择conda，语言python，服务器上 CUDA是12.0所以选择了CUDA11.8</p><p>选择完成之后下面会有提示的执行代码（Run this Command:），执行pytorch的安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install pytorch torchvision torchaudio pytorch-cuda=11.8 -c pytorch -c nvidia</span><br></pre></td></tr></table></figure><p>如果出现提示需要升级conda版本的就输入，没有的话就跳过这步。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda update -n base -c defaults conda</span><br></pre></td></tr></table></figure><p>验证安装结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">首先要启动我们的sd虚拟环境，因为我们所有与stable diffusion有关的配置环境都是建立在这个虚拟环境之下的python，pytorch等都是如此</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入虚拟环境</span></span><br><span class="line">conda activate sd</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入python环境</span></span><br><span class="line">python</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">导入torch</span></span><br><span class="line">import torch</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看torch的版本</span></span><br><span class="line">torch.__version__  #各有两条下划线</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看cuda版本</span></span><br><span class="line">torch.version.cuda</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看GPU是否运行</span></span><br><span class="line">torch.cuda.is_available()</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">退出</span></span><br><span class="line">exit()</span><br></pre></td></tr></table></figure><h2 id="安装-stable-diffusion-web-ui"><a class="markdownIt-Anchor" href="#安装-stable-diffusion-web-ui"></a> 安装 Stable Diffusion-Web-UI</h2><h3 id="依赖安装"><a class="markdownIt-Anchor" href="#依赖安装"></a> 依赖安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install mesa-libGL -y</span><br><span class="line">sudo yum install git -y</span><br></pre></td></tr></table></figure><h3 id="下载-web-ui"><a class="markdownIt-Anchor" href="#下载-web-ui"></a> 下载 web-ui</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(wget -qO- https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/webui.sh)</span><br></pre></td></tr></table></figure><p>或者通过 git 命令下载（此处使用了镜像源）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.moeyy.xyz/https://github.com/AUTOMATIC1111/stable-diffusion-webui.git</span><br></pre></td></tr></table></figure><p>如果提示错误 <code>OpenSSL SSL_read: Connection was reset, errno 10054</code></p><p>则需要关闭 <code>git</code> 的 <code>https</code> 证书验证，然后重新执行下载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.sslVerify false</span><br></pre></td></tr></table></figure><h3 id="预先配置"><a class="markdownIt-Anchor" href="#预先配置"></a> 预先配置</h3><p>下载完成之后我们进行一些预先的配置，防止后面配置失败。</p><h4 id="配置-pip"><a class="markdownIt-Anchor" href="#配置-pip"></a> 配置 pip</h4><p>设置 pip 源，这里设置的是腾讯云内源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip config set global.index-url http://mirrors.cloud.tencent.com/pypi/simple</span><br><span class="line">pip config set global.trusted-host mirrors.cloud.tencent.com</span><br></pre></td></tr></table></figure><p>更新 pip 版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade pip</span><br></pre></td></tr></table></figure><h4 id="配置-sd"><a class="markdownIt-Anchor" href="#配置-sd"></a> 配置 SD</h4><p>链接换源。打开 <code>stable-diffusion-webui/modules/launch.until.py</code> 文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">torch_command = os.environ.get(<span class="string">&#x27;TORCH_COMMAND&#x27;</span>, <span class="string">&quot;pip install torch==2.0.1 torchvision==0.15.2&quot;</span>)</span><br></pre></td></tr></table></figure><p>每个<a href="https://github.com/">https://github.com/</a>  （就在上一步的下面几行，每一个网址都要改）链接前面添加<a href="https://ghproxy.com/%EF%BC%8C%E6%9B%BF%E6%8D%A2%E4%B8%BA%E4%BB%A5%E4%B8%8B%E5%86%85%E5%AE%B9">https://ghproxy.com/，替换为以下内容</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">gfpgan_package = os.environ.get(<span class="string">&#x27;GFPGAN_PACKAGE&#x27;</span>, <span class="string">&quot;https://ghproxy.com/https://github.com/TencentARC/GFPGAN/archive/8d2447a2d918f8eba5a4a01463fd48e45126a379.zip&quot;</span>)</span><br><span class="line">clip_package = os.environ.get(<span class="string">&#x27;CLIP_PACKAGE&#x27;</span>, <span class="string">&quot;https://ghproxy.com/https://github.com/openai/CLIP/archive/d50d76daa670286dd6cacf3bcd80b5e4823fc8e1.zip&quot;</span>)</span><br><span class="line">openclip_package = os.environ.get(<span class="string">&#x27;OPENCLIP_PACKAGE&#x27;</span>, <span class="string">&quot;https://ghproxy.com/https://github.com/mlfoundations/open_clip/archive/bb6e834e9c70d9c27d0dc3ecedeebeaeb1ffad6b.zip&quot;</span>)</span><br><span class="line">stable_diffusion_repo = os.environ.get(<span class="string">&#x27;STABLE_DIFFUSION_REPO&#x27;</span>, <span class="string">&quot;https://ghproxy.com/https://github.com/Stability-AI/stablediffusion.git&quot;</span>)</span><br><span class="line">taming_transformers_repo = os.environ.get(<span class="string">&#x27;TAMING_TRANSFORMERS_REPO&#x27;</span>, <span class="string">&quot;https://ghproxy.com/https://github.com/CompVis/taming-transformers.git&quot;</span>)</span><br><span class="line">k_diffusion_repo = os.environ.get(<span class="string">&#x27;K_DIFFUSION_REPO&#x27;</span>, <span class="string">&#x27;https://ghproxy.com/https://github.com/crowsonkb/k-diffusion.git&#x27;</span>)</span><br><span class="line">codeformer_repo = os.environ.get(<span class="string">&#x27;CODEFORMER_REPO&#x27;</span>, <span class="string">&#x27;https://ghproxy.com/https://github.com/sczhou/CodeFormer.git&#x27;</span>)</span><br><span class="line">blip_repo = os.environ.get(<span class="string">&#x27;BLIP_REPO&#x27;</span>, <span class="string">&#x27;https://ghproxy.com/https://github.com/salesforce/BLIP.git&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="配置用户"><a class="markdownIt-Anchor" href="#配置用户"></a> 配置用户</h4><p>通常 SD 不允许使用 root 用户进行，我们需要额外创建一个用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">adduser sd  （创建账户sd）</span><br><span class="line">passwd sd  （创建密码）</span><br><span class="line">usermod -aG wheel sd （增加sudo权限）</span><br><span class="line">su - sd (切换为sd用户)</span><br></pre></td></tr></table></figure><p>或者修改 <code>stable-diffusion-webui</code> 目录下的 <code>webui.sh</code>  文件，禁掉用户判断</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改 can_run_as_root 为 1</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">this script cannot be run as root by default</span></span><br><span class="line">can_run_as_root=1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或者找到下面的代码进行注释</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Do not run as root</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">if</span> [[ $(<span class="built_in">id</span> -u) -eq 0 &amp;&amp; can_run_as_root -eq 0 ]]</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">then</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">    <span class="built_in">printf</span> <span class="string">&quot;\n%s\n&quot;</span> <span class="string">&quot;<span class="variable">$&#123;delimiter&#125;</span>&quot;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">    <span class="built_in">printf</span> <span class="string">&quot;\e[1m\e[31mERROR: This script must not be launched as root, aborting...\e[0m&quot;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">    <span class="built_in">printf</span> <span class="string">&quot;\n%s\n&quot;</span> <span class="string">&quot;<span class="variable">$&#123;delimiter&#125;</span>&quot;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">    <span class="built_in">exit</span> 1</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">else</span></span></span><br><span class="line">    printf &quot;\n%s\n&quot; &quot;$&#123;delimiter&#125;&quot;</span><br><span class="line">    printf &quot;Running on \e[1m\e[32m%s\e[0m user&quot; &quot;$(whoami)&quot;</span><br><span class="line">    printf &quot;\n%s\n&quot; &quot;$&#123;delimiter&#125;&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">fi</span></span></span><br></pre></td></tr></table></figure><h4 id="启动"><a class="markdownIt-Anchor" href="#启动"></a> 启动</h4><p>cd 到 stable-diffusion-webui目录下执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./webui.sh --share</span><br></pre></td></tr></table></figure><ul><li>-- share 会启动启动公网环境，给出一个随机的地址，每次启动都会随机生成。因此建议使用 --listen 参数，再做映射转发，这点后续再讲</li></ul><p>第一次执行会自动下载基础模型，如果下载速度还行就耐心等待，如果网络慢的同学，可以先“ctrl+C”断开下载步骤，然后到C站随便下个大模型上传上去。</p><p>命令行中也会有提示安装的目录，通常是放在 stable-diffusion-webui/models/Stable-diffusion 中</p><p>启动成功后，出现http:/0.0.0.0:7860就说明已启动成功，如果是用share命令还会映射一个随机的外网访问地址。</p><p>例如：<a href="https://9ac95a343d5d32d1c6.gradio.live/">https://9ac95a343d5d32d1c6.gradio.live/</a> ，访问即可</p><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><blockquote><p><a href="https://cloud.tencent.com/developer/article/2244682">基于腾讯云CVM搭建stable-diffusion-webui环境-腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p><a href="https://www.bilibili.com/read/cv24784581?from=search&amp;spm_id_from=333.337.0.0">Stable Diffusion云服务器部署完整版教程 - 哔哩哔哩 (bilibili.com)</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#背景&quot;&gt;&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;之前我们讲解了如何在Mac 上搭建 Stable-Diffusion-WebUI，但是因为仅能使用CPU的原因，生成图片特别慢。&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="技术" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="AI" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/AI/"/>
    
    <category term="Stable Diffusion" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/AI/Stable-Diffusion/"/>
    
    
    <category term="技术" scheme="http://blog.heyb.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="AI" scheme="http://blog.heyb.top/tags/AI/"/>
    
    <category term="Stable Diffusion" scheme="http://blog.heyb.top/tags/Stable-Diffusion/"/>
    
  </entry>
  
  <entry>
    <title>「Stable Diffusion」Stable Diffusion Web UI 安装教程</title>
    <link href="http://blog.heyb.top/2023/06/27/stable-diffusion-web-ui-installation-tutorial.html"/>
    <id>http://blog.heyb.top/2023/06/27/stable-diffusion-web-ui-installation-tutorial.html</id>
    <published>2023-06-27T14:40:34.000Z</published>
    <updated>2023-07-16T15:08:22.586Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2><p>什么是 Stable Diffusion</p><p>CompVis/stable-diffusion 是一个开源项目，它实现了一种基于稳定扩散（Stable Diffusion）的生成对抗网络（GAN）训练方法。这个项目旨在提高 GAN 训练的稳定性和生成图像的质量。</p><p>该项目主要包括以下特点：</p><ol><li>稳定扩散技术：通过引入噪声和扩散过程来平滑生成器和判别器之间的优化过程，从而提高训练稳定性。</li><li>高质量图像生成：利用稳定扩散技术，生成器能够产生更高质量、更真实的图像。</li><li>易于使用：项目提供了预训练模型和示例代码，方便用户快速上手和测试。</li></ol><p>CompVis/stable-diffusion 可以应用于各种图像生成任务，如将文本描述转换为图像（Text2Img）、风格迁移、超分辨率等。这个项目对于研究人员和开发者来说是一个有价值的资源，可以帮助他们更好地理解和实践基于稳定扩散的 GAN 训练方法。</p><p>通俗一些说法是：</p><blockquote><p>Stable Diffusion是2022年发布的<a href="https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%E6%B7%B1%E5%BA%A6%E5%AD%B8%E7%BF%92">深度学习</a><a href="https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/zh-cn/%E6%96%87%E6%9C%AC%E5%88%B0%E5%9B%BE%E5%83%8F%E7%94%9F%E6%88%90%E6%A8%A1%E5%9E%8B">文本到图像生成模型</a>，它主要用于根据文本的描述产生详细图像，尽管它也可以应用于其他任务，如<a href="https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%E5%9B%BE%E5%83%8F%E4%BF%AE%E5%A4%8D">内补绘制</a>、外补绘制，以及在<a href="https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/w/index.php%3Ftitle%3D%E6%8F%90%E7%A4%BA%E8%A9%9E%26action%3Dedit%26redlink%3D1">提示词</a>（<a href="https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Prompt_engineering">英语</a>）指导下产生图生图的翻译。</p><p>该模型由互联网上数百万图像和文本描述对训练而来，通过理解文本描述与图像信息的内在关联，不断利用扩散过程进而得到满意的生成图片</p></blockquote><p>根据<a href="https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/zh-cn/Stable_Diffusion">维基百科</a>的描述可以得知，Stable Diffusion主要用于 <strong>文本生成图像</strong> 的深度学习模型，也就是常说的txt2img的应用场景中：通过给定 <strong>文本提示词（text prompt）</strong>，该模型会输出一张匹配提示词的图片。</p><p>例如输入文本提示词：“A cute cat”，Stable Diffusion会输出一张带有可爱猫咪的图片。</p><p>Github: <a href="https://github.com/CompVis/stable-diffusion">CompVis/stable-diffusion: A latent text-to-image diffusion model (github.com)</a></p><p>Stable Diffusion是基于“潜在扩散模型”（latent diffusion model；LDM）的模型，官方项目其实并不适合新手直接使用，好在有一些基于 stable-diffusion 封装的 <code>webui</code> 开源项目，可以通过界面交互的方式来使用，极大的降低了使用门槛，以下是几个比较火的 <code>webui</code> 项目：</p><p>Stable-Diffusion-WebUI ： <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui">AUTOMATIC1111/stable-diffusion-webui: Stable Diffusion web UI</a></p><p>Sygil-WebUI：<a href="https://github.com/Sygil-Dev/sygil-webui">Sygil-Dev/sygil-webui: Stable Diffusion web UI</a></p><p>下面我们主要使用的是 Stable-Diffusion-WebUI进行讲解安装和使用</p><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><p>依赖环境  Git 、Python 3.10.6</p><p>在 Github 地址（ <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui">AUTOMATIC1111/stable-diffusion-webui: Stable Diffusion web UI</a>）中下载项目到本地。</p><p>打开 <code>stable-diffusion-webui/modules/launch.until.py</code> 文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">torch_command = os.environ.get(<span class="string">&#x27;TORCH_COMMAND&#x27;</span>, <span class="string">&quot;pip install torch==2.0.1 torchvision==0.15.2&quot;</span>)</span><br></pre></td></tr></table></figure><p>每个<a href="https://github.com/">https://github.com/</a>  （就在上一步的下面几行，每一个网址都要改）链接前面添加<a href="https://ghproxy.com/%EF%BC%8C%E6%9B%BF%E6%8D%A2%E4%B8%BA%E4%BB%A5%E4%B8%8B%E5%86%85%E5%AE%B9">https://ghproxy.com/，替换为以下内容</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">gfpgan_package = os.environ.get(<span class="string">&#x27;GFPGAN_PACKAGE&#x27;</span>, <span class="string">&quot;https://ghproxy.com/https://github.com/TencentARC/GFPGAN/archive/8d2447a2d918f8eba5a4a01463fd48e45126a379.zip&quot;</span>)</span><br><span class="line">clip_package = os.environ.get(<span class="string">&#x27;CLIP_PACKAGE&#x27;</span>, <span class="string">&quot;https://ghproxy.com/https://github.com/openai/CLIP/archive/d50d76daa670286dd6cacf3bcd80b5e4823fc8e1.zip&quot;</span>)</span><br><span class="line">openclip_package = os.environ.get(<span class="string">&#x27;OPENCLIP_PACKAGE&#x27;</span>, <span class="string">&quot;https://ghproxy.com/https://github.com/mlfoundations/open_clip/archive/bb6e834e9c70d9c27d0dc3ecedeebeaeb1ffad6b.zip&quot;</span>)</span><br><span class="line">stable_diffusion_repo = os.environ.get(<span class="string">&#x27;STABLE_DIFFUSION_REPO&#x27;</span>, <span class="string">&quot;https://ghproxy.com/https://github.com/Stability-AI/stablediffusion.git&quot;</span>)</span><br><span class="line">taming_transformers_repo = os.environ.get(<span class="string">&#x27;TAMING_TRANSFORMERS_REPO&#x27;</span>, <span class="string">&quot;https://ghproxy.com/https://github.com/CompVis/taming-transformers.git&quot;</span>)</span><br><span class="line">k_diffusion_repo = os.environ.get(<span class="string">&#x27;K_DIFFUSION_REPO&#x27;</span>, <span class="string">&#x27;https://ghproxy.com/https://github.com/crowsonkb/k-diffusion.git&#x27;</span>)</span><br><span class="line">codeformer_repo = os.environ.get(<span class="string">&#x27;CODEFORMER_REPO&#x27;</span>, <span class="string">&#x27;https://ghproxy.com/https://github.com/sczhou/CodeFormer.git&#x27;</span>)</span><br><span class="line">blip_repo = os.environ.get(<span class="string">&#x27;BLIP_REPO&#x27;</span>, <span class="string">&#x27;https://ghproxy.com/https://github.com/salesforce/BLIP.git&#x27;</span>)</span><br></pre></td></tr></table></figure><p>命令行进入到 stable-diffusion-webui 项目中下载依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install requirements.txt</span><br></pre></td></tr></table></figure><p>下载完成之后用命令行执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./webui.sh</span><br></pre></td></tr></table></figure><p>等待启动完毕会提示</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Running on local URL:  http://127.0.0.1:7860</span><br></pre></td></tr></table></figure><p>访问 <a href="http://127.0.0.1:7860">http://127.0.0.1:7860</a> 网站即可</p><h2 id="汉化"><a class="markdownIt-Anchor" href="#汉化"></a> 汉化</h2><p>访问网页后找到 <code>Extensions </code>菜单，选中 <code>Available </code>标签，将 <code>Hide extensions with tags</code> 全部取消勾选，然后点击 <code>Load From</code> 重新加载扩展列表</p><p>在搜索框 <code>Search</code> 中搜索 <code>zh_Hans</code>  然后下载 <code>zh_Hans Localization</code></p><p>下载后在 <code>Installed </code> 标签勾选 <code>stable-diffusion-webui-localization-zh_Hans</code> 插件，然后点击 <code>Apply and restart UI</code> 按钮。</p><p>然后到 <code>Settings</code> 菜单 -&gt; <code>User interface</code> -&gt; <code>localization </code> 中勾选 <code>zh_CN</code> ， 点击 <code>Apply Settings</code>， 然后 <code>restart UI</code> 重启完就变成中文界面了。</p><p>如果有直接下载汉化包的用户，可以将文件放置<code>\stable-diffusion-webui\extensions</code>这个目录下，之后重新载入网址，按照 <code>Settings </code>设置步骤依次点击就可以变成中文版。</p><h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><p>在使用前我们需要下载不同的SD基础模型。</p><p>模型站：</p><p><a href="https://civitai.com/">https://civitai.com/</a></p><p><a href="https://huggingface.co/">https://huggingface.co/</a></p><p><a href="https://www.liblibai.com/">https://www.liblibai.com/</a></p><p><a href="https://www.liandange.com/">https://www.liandange.com/</a></p><p><a href="https://i-desai.com/#/">https://i-desai.com/#/</a></p><p><a href="https://aigccafe.com/">https://aigccafe.com/</a> 不用翻墙</p><p>以及基础模型</p><p><a href="https://huggingface.co/models?pipeline_tag=text-to-image&amp;sort=downloads">Models - Hugging Face</a></p><p><a href="https://huggingface.co/stabilityai/stable-diffusion-2-1/resolve/main/v2-1_768-ema-pruned.ckpt">https://huggingface.co/stabilityai/stable-diffusion-2-1/resolve/main/v2-1_768-ema-pruned.ckpt</a></p><p><code>Checkpoint </code>模型文件通常以 <code>.safetensors</code> 或者 <code>.ckpt</code> 结尾，在模型站中会有标签标记，下载后放置在</p><p><code>stable-diffusion-webui/module/stable-diffusion-webui/</code> 目录下</p><p><code>Lora</code>模型文件通常以 <code>.safetensors</code>结尾，下载后放置在<code>stable-diffusion-webui/module/lora/</code> 目录下</p><p>安装完之后就可以愉快使用了</p><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><blockquote><p><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Installation-on-Apple-Silicon">Installation on Apple Silicon · AUTOMATIC1111/stable-diffusion-webui Wiki</a></p><p><a href="https://zhuanlan.zhihu.com/p/620714629">Stable Diffusion简介 - 知乎</a></p><p><a href="https://zhuanlan.zhihu.com/p/617997179#%E8%83%8C%E6%99%AF">喂饭级stable_diffusion_webUI使用教程 - 知乎</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#介绍&quot;&gt;&lt;/a&gt; 介绍&lt;/h2&gt;
&lt;p&gt;什么是 Stable Diffusion&lt;/p&gt;
&lt;p&gt;CompVis/stable-diffusion 是一个开源项目，它实现了一种基于稳定扩</summary>
      
    
    
    
    <category term="技术" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="AI" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/AI/"/>
    
    <category term="Stable Diffusion" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/AI/Stable-Diffusion/"/>
    
    
    <category term="技术" scheme="http://blog.heyb.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="AI" scheme="http://blog.heyb.top/tags/AI/"/>
    
    <category term="Stable Diffusion" scheme="http://blog.heyb.top/tags/Stable-Diffusion/"/>
    
  </entry>
  
  <entry>
    <title>「Python」Python基于OpenPose实现图片中人体姿态识别</title>
    <link href="http://blog.heyb.top/2023/06/15/python-implementation-of-human-posture-recognition-in-images-based-on-openpose.html"/>
    <id>http://blog.heyb.top/2023/06/15/python-implementation-of-human-posture-recognition-in-images-based-on-openpose.html</id>
    <published>2023-06-15T13:51:37.000Z</published>
    <updated>2023-06-27T13:13:23.501Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>合作公司有个小伙伴提到之前要处理图片中对人物裁剪的效果不好，之前仅识别到人脸做一个大概的图片裁切，无法针对半身图，全身图进行。因此希望能够有方式能够识别到人体的关节，识别到人的肩膀， 腰部，腿部等等。</p><p>我第一时间想到的是识别到人脸之后，获取到人脸宽高，再按比例去分割图片。例如我们常说九头身的模特身材，就是按人头大小去划分身体。第一个人脸高度为头部，第二个人脸高度为胸口，第三个人脸高度为腰部，这样类推。</p><p>不过想到网上应该会有更加成熟的解决方案，所以去网上搜了一下，有一个叫 OpenPose 的开源项目能够很好的满足人体姿态识别的需求。</p><h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2><p>OpenPose人体姿态识别项目是美国卡耐基梅隆大学（CMU）基于卷积神经网络和监督学习并以caffe为框架开发的开源库。可以实现人体动作、面部表情、手指运动等姿态估计。适用于单人和多人，具有极好的鲁棒性。是世界上首个基于深度学习的实时多人二维姿态估计应用，基于它的实例如雨后春笋般涌现。人体姿态估计技术在体育健身、动作采集、3D试衣、舆情监测等领域具有广阔的应用前景。</p><p>Github地址： <a href="https://github.com/CMU-Perceptual-Computing-Lab/openpose">https://github.com/CMU-Perceptual-Computing-Lab/openpose</a></p><p>这个项目有新手提供了很大的便利，在 Github Install档中有提供 Windows 安装的版本，或者仅需运行  OpenPose Demo即可（<a href="https://github.com/CMU-Perceptual-Computing-Lab/openpose/blob/master/doc/01_demo.md">openpose/doc/01_demo.md</a>），该 Demo 提供了处理图片、视频或者网络摄像头的视频流，并展示和后处理结果。</p><p>在 OpenPose 中，输入是一个或多个人的图像或视频，在这些图像中，OpenPose 会检测每个人的所有身体部位，并生成一个基于骨架的表示。OpenPose 使用两个深度卷积神经网络来实现此目的:Part Confidence Maps(PCM)和 Part Affinity Fields(PAFs)。PCM 预测每个像素属于人体部件的概率。PAFs则用于预测不同人体部位之间的连接情况。这两个网络都是基于ResNet架构的变形版本。一旦完成了所有部位的识别，OpenPose 将这些部位连接成一个完整的人体骨架，最终呈现出一个基于骨架的表示，呈现出每个人的不同身体部位和位置。</p><p>OpenPose 的应用非常广泛，例如自动化驾驶、娱乐、运动分析、医疗等领域，它在这些领域中都有着非常重要的应用。</p><h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><h3 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h3><p>我们需要通过 Python 来使用 OpenPose 的 API，因此要有Python环境</p><p>然后安装 OpenCV 库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install opencv</span><br></pre></td></tr></table></figure><h3 id="下载模型"><a class="markdownIt-Anchor" href="#下载模型"></a> 下载模型</h3><p>一般我们要加载OpenPose的本地模型来进行识别</p><p>模型分为 TensorFlow 模型（.pb 文件）和 Caffe 模型</p><p>TensorFlow 模型我没有找到下载和转换的方式，各位如果了解的可以补充一下</p><p>Caffe 模型需要拉取 Github 项目下来，在 Models 目录下执行 <code>getModels.bat</code>  或者  <code>getModels.sh</code> 来进行下载</p><p>caffemodel 文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd models</span><br><span class="line">.\getModels.bat </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或者</span> </span><br><span class="line">./getModels.sh</span><br></pre></td></tr></table></figure><p>或者可以直接在网上搜索别人分享的文件，下载完成之后将模型中的 caffemodel  文件和 prototxt 文件一起放到自己项目目录中。</p><p>其中官方项目中的 models 目录下面 pose 文件夹，又分为 body_25、coco、MPI。</p><p>其中</p><p><code>body_25</code>模型：这个模型是基于COCO数据集进行训练的，其中包含了25个关键点，可以检测出人体的各种姿势，如手臂、腿、头部等。它的训练数据集较大，适用于多种不同场景下的人体姿势估计任务。<code>pose_iter_584000.caffemodel</code>是该模型的网络权重文件。</p><p><code>coco</code>模型：这个模型同样是基于COCO数据集进行训练的，但只包含了18个关键点，相对于<code>body_25</code>模型来说更简化了姿势表示。它的训练数据集中的标注数据是以COCO关键点标注为基础。<code>pose_iter_440000.caffemodel</code>是该模型的网络权重文件。</p><p><code>mpi</code>模型：是基于 MPII 数据集进行训练的，该数据集包含了约 40,000 张单人姿势估计图像，检测出 15 个关键点，涵盖头部、躯干、手臂和腿部等主要部位。相对于COCO和body_25模型，MPI模型提供了更为简化的关键点表示。</p><p>我这边使用的是 COCO 模型，因此复制 COCO 目录下的 <code>pose_deploy_linevec.prototxt</code> 文件以及下载好的 <code> pose_iter_440000.caffemodel</code> 到项目目录中使用即可</p><h3 id="示例代码"><a class="markdownIt-Anchor" href="#示例代码"></a> 示例代码</h3><p>下面是一个示例代码，展示了如何使用 OpenPose 在 Python 中使用摄像头或视频文件获取图像实现多人姿态检测。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line">parser = argparse.ArgumentParser()</span><br><span class="line">parser.add_argument(<span class="string">&quot;--video&quot;</span>, <span class="built_in">help</span>=<span class="string">&quot;path to video file. If empty, camera&#x27;s stream will be used&quot;</span>)</span><br><span class="line">args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">cap = cv2.VideoCapture(args.video <span class="keyword">if</span> args.video <span class="keyword">else</span> <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入 OpenPose 模型</span></span><br><span class="line"><span class="comment">#net = cv2.dnn.readNetFromTensorflow(&quot;models/pose/graph_opt.pb&quot;)</span></span><br><span class="line">cv2.dnn.readNetFromCaffe(<span class="string">&quot;data//pose/coco/pose_deploy_linevec.prototxt&quot;</span>,</span><br><span class="line">                         <span class="string">&quot;data/pose/coco/pose_iter_440000.caffemodel&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 从视频流中读取帧</span></span><br><span class="line">    ret, frame = cap.read()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 帧处理</span></span><br><span class="line">    <span class="keyword">if</span> ret:</span><br><span class="line">        <span class="comment"># 将帧转换为 Blob</span></span><br><span class="line">        blob = cv2.dnn.blobFromImage(frame, <span class="number">1.0</span> / <span class="number">255</span>, (<span class="number">368</span>, <span class="number">368</span>), (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), swapRB=<span class="literal">False</span>, crop=<span class="literal">False</span>)</span><br><span class="line">        net.setInput(blob)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 运行前向传递</span></span><br><span class="line">        out = net.forward()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 处理输出</span></span><br><span class="line">        h, w, c = frame.shape</span><br><span class="line">        points = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">18</span>):</span><br><span class="line">            <span class="comment"># 获取每个人体部位的可信度映射（PCM）</span></span><br><span class="line">            heatMap = out[<span class="number">0</span>, i, :, :]</span><br><span class="line">            _, conf, _, point = cv2.minMaxLoc(heatMap)</span><br><span class="line">            x = <span class="built_in">int</span>(w * point[<span class="number">0</span>] / out.shape[<span class="number">3</span>])</span><br><span class="line">            y = <span class="built_in">int</span>(h * point[<span class="number">1</span>] / out.shape[<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 将部位添加到列表中</span></span><br><span class="line">            points.append((x, y) <span class="keyword">if</span> conf &gt; <span class="number">0.1</span> <span class="keyword">else</span> <span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> pair <span class="keyword">in</span> POSE_PAIRS:</span><br><span class="line">            partFrom = pair[<span class="number">0</span>]</span><br><span class="line">            partTo = pair[<span class="number">1</span>]</span><br><span class="line">            idFrom = BODY_PARTS_DICT[partFrom]</span><br><span class="line">            idTo = BODY_PARTS_DICT[partTo]</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> points[idFrom] <span class="keyword">and</span> points[idTo]:</span><br><span class="line">                <span class="comment"># 绘制连线</span></span><br><span class="line">                cv2.line(frame, points[idFrom], points[idTo], (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">2</span>)</span><br><span class="line">                cv2.circle(frame, points[idFrom], <span class="number">5</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), thickness=-<span class="number">1</span>, lineType=cv2.FILLED)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 显示结果</span></span><br><span class="line">        cv2.imshow(<span class="string">&quot;Output-Keypoints&quot;</span>, frame)</span><br><span class="line">        key = cv2.waitKey(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> key == <span class="number">27</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">cap.release()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><h2 id="单人物人体姿态识别"><a class="markdownIt-Anchor" href="#单人物人体姿态识别"></a> 单人物人体姿态识别</h2><p>我在这里实现了一个单人梯姿态识别代码，并且返回上下左右最顶端的坐标数组。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载模型和配置文件</span></span><br><span class="line">models = [<span class="string">&#x27;models/pose/coco/pose_deploy_linevec.prototxt&#x27;</span>, <span class="string">&#x27;models/pose/coco/pose_iter_440000.caffemodel&#x27;</span>]</span><br><span class="line">net = cv2.dnn.readNetFromCaffe(*models)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义人体各部位的名称、颜色、连接关系和顺序</span></span><br><span class="line">body_parts = &#123;<span class="string">&#x27;Nose&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;Neck&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;RShoulder&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;RElbow&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;RWrist&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;LShoulder&#x27;</span>: <span class="number">5</span>,</span><br><span class="line">              <span class="string">&#x27;LElbow&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;LWrist&#x27;</span>: <span class="number">7</span>, <span class="string">&#x27;RHip&#x27;</span>: <span class="number">8</span>, <span class="string">&#x27;RKnee&#x27;</span>: <span class="number">9</span>, <span class="string">&#x27;RAnkle&#x27;</span>: <span class="number">10</span>, <span class="string">&#x27;LHip&#x27;</span>: <span class="number">11</span>,</span><br><span class="line">              <span class="string">&#x27;LKnee&#x27;</span>: <span class="number">12</span>, <span class="string">&#x27;LAnkle&#x27;</span>: <span class="number">13</span>, <span class="string">&#x27;REye&#x27;</span>: <span class="number">14</span>, <span class="string">&#x27;LEye&#x27;</span>: <span class="number">15</span>, <span class="string">&#x27;REar&#x27;</span>: <span class="number">16</span>, <span class="string">&#x27;LEar&#x27;</span>: <span class="number">17</span>&#125;</span><br><span class="line"></span><br><span class="line">colors = [[<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>], [<span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>], [<span class="number">255</span>, <span class="number">0</span>, <span class="number">255</span>], [<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">100</span>, <span class="number">50</span>, <span class="number">0</span>],</span><br><span class="line">          [<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>], [<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>], [<span class="number">0</span>, <span class="number">125</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">0</span>, <span class="number">125</span>], [<span class="number">0</span>, <span class="number">255</span>, <span class="number">125</span>], [<span class="number">125</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">          [<span class="number">125</span>, <span class="number">0</span>, <span class="number">125</span>], [<span class="number">125</span>, <span class="number">125</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>], [<span class="number">125</span>, <span class="number">125</span>, <span class="number">125</span>], [<span class="number">50</span>, <span class="number">100</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">100</span>, <span class="number">50</span>]]</span><br><span class="line"></span><br><span class="line">POSE_PAIRS = [[<span class="string">&#x27;Neck&#x27;</span>, <span class="string">&#x27;RShoulder&#x27;</span>], [<span class="string">&#x27;Neck&#x27;</span>, <span class="string">&#x27;LShoulder&#x27;</span>], [<span class="string">&#x27;RShoulder&#x27;</span>, <span class="string">&#x27;RElbow&#x27;</span>],</span><br><span class="line">              [<span class="string">&#x27;RElbow&#x27;</span>, <span class="string">&#x27;RWrist&#x27;</span>], [<span class="string">&#x27;LShoulder&#x27;</span>, <span class="string">&#x27;LElbow&#x27;</span>], [<span class="string">&#x27;LElbow&#x27;</span>, <span class="string">&#x27;LWrist&#x27;</span>],</span><br><span class="line">              [<span class="string">&#x27;Neck&#x27;</span>, <span class="string">&#x27;RHip&#x27;</span>], [<span class="string">&#x27;RHip&#x27;</span>, <span class="string">&#x27;RKnee&#x27;</span>], [<span class="string">&#x27;RKnee&#x27;</span>, <span class="string">&#x27;RAnkle&#x27;</span>], [<span class="string">&#x27;Neck&#x27;</span>, <span class="string">&#x27;LHip&#x27;</span>],</span><br><span class="line">              [<span class="string">&#x27;LHip&#x27;</span>, <span class="string">&#x27;LKnee&#x27;</span>], [<span class="string">&#x27;LKnee&#x27;</span>, <span class="string">&#x27;LAnkle&#x27;</span>], [<span class="string">&#x27;Nose&#x27;</span>, <span class="string">&#x27;REye&#x27;</span>], [<span class="string">&#x27;REye&#x27;</span>, <span class="string">&#x27;REar&#x27;</span>],</span><br><span class="line">              [<span class="string">&#x27;Nose&#x27;</span>, <span class="string">&#x27;LEye&#x27;</span>], [<span class="string">&#x27;LEye&#x27;</span>, <span class="string">&#x27;LEar&#x27;</span>], [<span class="string">&#x27;Neck&#x27;</span>, <span class="string">&#x27;Nose&#x27;</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pose_detection</span>(<span class="params">image, inWidth=<span class="number">368</span>, inHeight=<span class="number">368</span>, scale=<span class="number">0.003922</span>, mean=(<span class="params"><span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span></span>), swapRB=<span class="literal">False</span>, crop=<span class="literal">False</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param image: 输入的图像数据</span></span><br><span class="line"><span class="string">    :param inWidth: 输入图像的宽度，默认为368</span></span><br><span class="line"><span class="string">    :param inHeight: 输入图像的高度，默认为368</span></span><br><span class="line"><span class="string">    :param scale: 图像缩放因子，默认为0.003922</span></span><br><span class="line"><span class="string">    :param mean: 图像均值，默认为(0, 0, 0)</span></span><br><span class="line"><span class="string">    :param swapRB: 是否交换图像通道顺序，默认为False</span></span><br><span class="line"><span class="string">    :param crop: 是否进行裁剪，默认为False</span></span><br><span class="line"><span class="string">    :return: key_points：关键点坐标数组，get_vertex_coordinates(key_points)的结果：顶点坐标数组</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 读取输入的图像数据</span></span><br><span class="line">    image = cv2.imread(img_path)</span><br><span class="line">    <span class="keyword">if</span> image.shape[<span class="number">0</span>] &gt; <span class="number">800</span>:</span><br><span class="line">        <span class="comment"># 如果图像的高度大于800，按比例缩放到高度为800</span></span><br><span class="line">        image = cv2.resize(image, (<span class="built_in">int</span>(image.shape[<span class="number">1</span>] * <span class="number">800</span> / image.shape[<span class="number">0</span>]), <span class="number">800</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 对输入图像进行预处理，生成blob对象</span></span><br><span class="line">    blob = cv2.dnn.blobFromImage(image, scale, (inWidth, inHeight), mean, swapRB, crop)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 输入blob到神经网络中进行推断</span></span><br><span class="line">    net.setInput(blob)</span><br><span class="line">    <span class="comment"># 获取输出结果</span></span><br><span class="line">    output = net.forward()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 显示检测结果并添加关键点名称</span></span><br><span class="line">    H = output.shape[<span class="number">2</span>]</span><br><span class="line">    W = output.shape[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 初始化关键点坐标数组</span></span><br><span class="line">    keypoints = [(<span class="number">0</span>, <span class="number">0</span>)] * <span class="built_in">len</span>(body_parts)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 遍历输出结果，获取每个关键点的置信度和坐标</span></span><br><span class="line">    <span class="keyword">for</span> i, part_name <span class="keyword">in</span> <span class="built_in">enumerate</span>(body_parts):</span><br><span class="line">        confidenceMap = output[<span class="number">0</span>, i, :, :]</span><br><span class="line">        _, conf, _, point = cv2.minMaxLoc(confidenceMap)</span><br><span class="line">        x = <span class="built_in">int</span>((image.shape[<span class="number">1</span>] * point[<span class="number">0</span>]) / W)</span><br><span class="line">        y = <span class="built_in">int</span>((image.shape[<span class="number">0</span>] * point[<span class="number">1</span>]) / H)</span><br><span class="line">        <span class="keyword">if</span> conf &gt; <span class="number">0.1</span> <span class="keyword">and</span> (x, y) != (<span class="number">0</span>, <span class="number">0</span>):</span><br><span class="line">            <span class="built_in">print</span>((x, y))</span><br><span class="line">            <span class="comment"># 将符合条件的关键点坐标保存到数组中</span></span><br><span class="line">            keypoints[i] = (x, y)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 在图像上显示关键点</span></span><br><span class="line">            cv2.circle(image, (x, y), <span class="number">5</span>, (<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), -<span class="number">1</span>)</span><br><span class="line">            cv2.putText(image, <span class="string">&quot;&#123;&#125;&quot;</span>.<span class="built_in">format</span>(part_name), (x, y + <span class="number">30</span>),</span><br><span class="line">                        cv2.FONT_HERSHEY_SIMPLEX, <span class="number">0.5</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">1</span>)</span><br><span class="line">            cv2.putText(image, <span class="string">&quot;(&#123;&#125;, &#123;&#125;)&quot;</span>.<span class="built_in">format</span>(x, y), (x, y),</span><br><span class="line">                        cv2.FONT_HERSHEY_SIMPLEX, <span class="number">0.5</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将关键点两两相连并绘制到图像中</span></span><br><span class="line">    <span class="keyword">for</span> pair <span class="keyword">in</span> POSE_PAIRS:</span><br><span class="line">        part_a = pair[<span class="number">0</span>]</span><br><span class="line">        part_b = pair[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> part_a <span class="keyword">in</span> body_parts.keys() <span class="keyword">and</span> part_b <span class="keyword">in</span> body_parts.keys():</span><br><span class="line">            id_a = body_parts[part_a]</span><br><span class="line">            id_b = body_parts[part_b]</span><br><span class="line">            <span class="keyword">if</span> keypoints[id_a][<span class="number">0</span>] != <span class="number">0</span> <span class="keyword">and</span> keypoints[id_a][<span class="number">1</span>] != <span class="number">0</span> <span class="keyword">and</span> keypoints[id_b][<span class="number">0</span>] != <span class="number">0</span> <span class="keyword">and</span> keypoints[id_b][</span><br><span class="line">                <span class="number">1</span>] != <span class="number">0</span>:</span><br><span class="line">                cv2.line(image, keypoints[id_a], keypoints[id_b], colors[id_a], <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 去除关键点数组中的无效点（坐标为(0, 0)）</span></span><br><span class="line">    keypoints = [item <span class="keyword">for</span> item <span class="keyword">in</span> keypoints <span class="keyword">if</span> item != (<span class="number">0</span>, <span class="number">0</span>)]</span><br><span class="line">    <span class="comment"># 将关键点数组转换为NumPy数组</span></span><br><span class="line">    key_points = np.array(keypoints)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 显示处理后的图像</span></span><br><span class="line">    cv2.imshow(<span class="string">&quot;output&quot;</span>, image)</span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打印关键点数组的类型</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(key_points))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 返回关键点数组和顶点坐标数组</span></span><br><span class="line">    <span class="keyword">return</span> key_points, get_vertex_coordinates(key_points)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_vertex_coordinates</span>(<span class="params">arr</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    获取坐标数组中的四个顶点坐标</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param arr: 包含坐标点的二维数组，行表示点的数量，列表示每个点的坐标轴数量</span></span><br><span class="line"><span class="string">    :return: arr 一个按照顺时针方向排列的四个顶点的坐标数组</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 找到最上、最下、最左、最右四个点的索引</span></span><br><span class="line">    <span class="comment"># 找到y轴坐标最小的点的索引</span></span><br><span class="line">    top_idx = np.argmin(arr[:, <span class="number">1</span>])</span><br><span class="line">    <span class="comment"># 找到y轴坐标最大的点的索引</span></span><br><span class="line">    bottom_idx = np.argmax(arr[:, <span class="number">1</span>])</span><br><span class="line">    <span class="comment"># 找到x轴坐标最小的点的索引</span></span><br><span class="line">    left_idx = np.argmin(arr[:, <span class="number">0</span>])</span><br><span class="line">    <span class="comment"># 找到x轴坐标最大的点的索引</span></span><br><span class="line">    right_idx = np.argmax(arr[:, <span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 输出最上、最下、最左和最右四个点的坐标</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;最上坐标为：(&#123;&#125;, &#123;&#125;)&quot;</span>.<span class="built_in">format</span>(arr[top_idx][<span class="number">0</span>], arr[top_idx][<span class="number">1</span>]))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;最下坐标为：(&#123;&#125;, &#123;&#125;)&quot;</span>.<span class="built_in">format</span>(arr[bottom_idx][<span class="number">0</span>], arr[bottom_idx][<span class="number">1</span>]))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;最左坐标为：(&#123;&#125;, &#123;&#125;)&quot;</span>.<span class="built_in">format</span>(arr[left_idx][<span class="number">0</span>], arr[left_idx][<span class="number">1</span>]))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;最右坐标为：(&#123;&#125;, &#123;&#125;)&quot;</span>.<span class="built_in">format</span>(arr[right_idx][<span class="number">0</span>], arr[right_idx][<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 按上右下左顺时针方向创建一个包含四个顶点坐标的数组</span></span><br><span class="line">    coordinates = np.array([</span><br><span class="line">        [arr[top_idx][<span class="number">0</span>], arr[top_idx][<span class="number">1</span>]],</span><br><span class="line">        [arr[right_idx][<span class="number">0</span>], arr[right_idx][<span class="number">1</span>]],</span><br><span class="line">        [arr[bottom_idx][<span class="number">0</span>], arr[bottom_idx][<span class="number">1</span>]],</span><br><span class="line">        [arr[left_idx][<span class="number">0</span>], arr[left_idx][<span class="number">1</span>]]</span><br><span class="line">    ])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> coordinates</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 读取输入图像</span></span><br><span class="line">    img_path = <span class="string">&#x27;img/img.png&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 进行人体姿态估计</span></span><br><span class="line">    key_points, vertex_coordinates = pose_detection(image=img_path)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;关键点坐标：&#x27;</span>, key_points)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;四个顶点坐标：&#x27;</span>, vertex_coordinates)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个代码可以满足单个人物的姿态识别，并且能够获取到每个关节点的坐标，可以依据坐标进行裁剪图片，但是存在多个人物的时候，会出现识别有误，效果并不是很理想。</p><h2 id="多人物人体姿态识别"><a class="markdownIt-Anchor" href="#多人物人体姿态识别"></a> 多人物人体姿态识别</h2><p>然后再找到了 <a href="https://learnopencv.com/multi-person-pose-estimation-in-opencv-using-openpose/">LearnOpenCV</a> 的一个多人姿态检测实现的文章（译文可见<a href="https://blog.csdn.net/qq_27158179/article/details/82717821">基于OpenCV使用OpenPose进行多个人体姿态估计</a> ）。</p><p>主要实现方式是识别多个人物的关键点（例如鼻子），再通过关键点查找有效连接点，例如某人鼻子的左肩通常为这个人的左肩，他右边识别到的左肩则应该为另外一个人的左肩。通过亲和性方向进行识别和连接然后组合就能识别出来不同人物的姿态组，再通过姿态组绘制骨骼图就得到最终我们想要的多人物姿态识别。感兴趣的朋友可以自行查阅原文。</p><p>以下是我实际可用的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">该文件主要用于识别人体姿态并输出最边缘坐标</span></span><br><span class="line"><span class="string">主要函数为 detect_pose</span></span><br><span class="line"><span class="string">不需要预览结果请注释 cv2.imshow 等相关代码即可</span></span><br><span class="line"><span class="string">依赖库</span></span><br><span class="line"><span class="string">opencv-python~=4.7.0.72</span></span><br><span class="line"><span class="string">numpy~=1.24.2</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设定模型文件路径和关键点数量等信息</span></span><br><span class="line"><span class="comment"># 模型结构文件</span></span><br><span class="line">protoFile = <span class="string">&quot;data//pose/coco/pose_deploy_linevec.prototxt&quot;</span></span><br><span class="line"><span class="comment"># 训练好的参数文件</span></span><br><span class="line">weightsFile = <span class="string">&quot;data/pose/coco/pose_iter_440000.caffemodel&quot;</span></span><br><span class="line"><span class="comment"># COCO 数据集中人体关键点的数量</span></span><br><span class="line">nPoints = <span class="number">18</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># COCO 数据集中的人体关键点名称列表</span></span><br><span class="line">keypointsMapping = [<span class="string">&#x27;Nose&#x27;</span>, <span class="string">&#x27;Neck&#x27;</span>, <span class="string">&#x27;R-Shoulder&#x27;</span>, <span class="string">&#x27;R-Elbow&#x27;</span>, <span class="string">&#x27;R-Wrist&#x27;</span>, <span class="string">&#x27;L-Shoulder&#x27;</span>, <span class="string">&#x27;L-Elbow&#x27;</span>, <span class="string">&#x27;L-Wrist&#x27;</span>, <span class="string">&#x27;R-Hip&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;R-Knee&#x27;</span>, <span class="string">&#x27;R-Ankle&#x27;</span>, <span class="string">&#x27;L-Hip&#x27;</span>, <span class="string">&#x27;L-Knee&#x27;</span>, <span class="string">&#x27;L-Ankle&#x27;</span>, <span class="string">&#x27;R-Eye&#x27;</span>, <span class="string">&#x27;L-Eye&#x27;</span>, <span class="string">&#x27;R-Ear&#x27;</span>, <span class="string">&#x27;L-Ear&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义连接不同关键点之间的线段，即人体的姿势</span></span><br><span class="line"><span class="comment"># 在 COCO 输出格式中，关键点的编号从 0 开始，即第 0 个点表示 Nose，最后一个点是 L-Ear</span></span><br><span class="line">POSE_PAIRS = [[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">1</span>, <span class="number">5</span>], [<span class="number">2</span>, <span class="number">3</span>], [<span class="number">3</span>, <span class="number">4</span>], [<span class="number">5</span>, <span class="number">6</span>], [<span class="number">6</span>, <span class="number">7</span>],</span><br><span class="line">              [<span class="number">1</span>, <span class="number">8</span>], [<span class="number">8</span>, <span class="number">9</span>], [<span class="number">9</span>, <span class="number">10</span>], [<span class="number">1</span>, <span class="number">11</span>], [<span class="number">11</span>, <span class="number">12</span>], [<span class="number">12</span>, <span class="number">13</span>],</span><br><span class="line">              [<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">14</span>], [<span class="number">14</span>, <span class="number">16</span>], [<span class="number">0</span>, <span class="number">15</span>], [<span class="number">15</span>, <span class="number">17</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">17</span>], [<span class="number">5</span>, <span class="number">16</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义每个 POSE_PAIRS 对应的 PAF 在输出中的索引</span></span><br><span class="line"><span class="comment"># pafs与POSE_PAIRS的索引，例如，对于POSE_PAIR（1,2），PAF位于输出的指数（31,32），类似，（1,5）-&gt;（39,40）等。</span></span><br><span class="line"><span class="comment"># PAF 表示 Part Affinity Fields，即用于描述关键点之间连接情况的向量场</span></span><br><span class="line"><span class="comment"># 在这里，使用了 COCO 数据集中提供的预训练模型，其输出结果包括关键点坐标和 PAF</span></span><br><span class="line">mapIdx = [[<span class="number">31</span>, <span class="number">32</span>], [<span class="number">39</span>, <span class="number">40</span>], [<span class="number">33</span>, <span class="number">34</span>], [<span class="number">35</span>, <span class="number">36</span>], [<span class="number">41</span>, <span class="number">42</span>], [<span class="number">43</span>, <span class="number">44</span>],</span><br><span class="line">          [<span class="number">19</span>, <span class="number">20</span>], [<span class="number">21</span>, <span class="number">22</span>], [<span class="number">23</span>, <span class="number">24</span>], [<span class="number">25</span>, <span class="number">26</span>], [<span class="number">27</span>, <span class="number">28</span>], [<span class="number">29</span>, <span class="number">30</span>],</span><br><span class="line">          [<span class="number">47</span>, <span class="number">48</span>], [<span class="number">49</span>, <span class="number">50</span>], [<span class="number">53</span>, <span class="number">54</span>], [<span class="number">51</span>, <span class="number">52</span>], [<span class="number">55</span>, <span class="number">56</span>],</span><br><span class="line">          [<span class="number">37</span>, <span class="number">38</span>], [<span class="number">45</span>, <span class="number">46</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># # 定义用于绘制不同连接线段的颜色，根据定义的姿势连接线段，每个连接线段对应一种颜色</span></span><br><span class="line">colors = [[<span class="number">0</span>, <span class="number">100</span>, <span class="number">255</span>], [<span class="number">0</span>, <span class="number">100</span>, <span class="number">255</span>], [<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>], [<span class="number">0</span>, <span class="number">100</span>, <span class="number">255</span>], [<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>], [<span class="number">0</span>, <span class="number">100</span>, <span class="number">255</span>],</span><br><span class="line">          [<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>], [<span class="number">255</span>, <span class="number">200</span>, <span class="number">100</span>], [<span class="number">255</span>, <span class="number">0</span>, <span class="number">255</span>], [<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>], [<span class="number">255</span>, <span class="number">200</span>, <span class="number">100</span>], [<span class="number">255</span>, <span class="number">0</span>, <span class="number">255</span>],</span><br><span class="line">          [<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>], [<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">200</span>, <span class="number">200</span>, <span class="number">0</span>], [<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">200</span>, <span class="number">200</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 存储检测出来的所有关键点坐标列表，用于后续计算顶点</span></span><br><span class="line">points = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">detect_pose</span>(<span class="params">image_path</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    检测姿势</span></span><br><span class="line"><span class="string">    :param image_path: 图片路径</span></span><br><span class="line"><span class="string">    :return: 返回 pose, points</span></span><br><span class="line"><span class="string">    其中 pose 为</span></span><br><span class="line"><span class="string">    points 为 按照顺时针方向排列（即上右下左）的四个最顶点的坐标数组</span></span><br><span class="line"><span class="string">    调用函数例子如下：</span></span><br><span class="line"><span class="string">    path = &quot;img/test.png&quot;</span></span><br><span class="line"><span class="string">    pose, points = detect_pose(path)</span></span><br><span class="line"><span class="string">    print(points)</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建一个解析器</span></span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">&#x27;运行关键点检测&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 添加参数</span></span><br><span class="line">    parser.add_argument(<span class="string">&quot;--device&quot;</span>, default=<span class="string">&quot;cpu&quot;</span>, <span class="built_in">help</span>=<span class="string">&quot;推理设备&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&quot;--image_file&quot;</span>, default=image_path, <span class="built_in">help</span>=<span class="string">&quot;输入图像&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 解析参数</span></span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    <span class="comment"># 读取输入图像</span></span><br><span class="line">    image1 = cv2.imread(args.image_file)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getKeypoints</span>(<span class="params">probMap, threshold=<span class="number">0.1</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        从输入的概率图（即 probMap）中提取关键点信息</span></span><br><span class="line"><span class="string">        :param probMap:  概率图</span></span><br><span class="line"><span class="string">        :param threshold: 二值化概率图时所采用的阈值，默认为 0.1</span></span><br><span class="line"><span class="string">        值较小时，可以提取出更多的关键点，但可能会包含一些噪声或冗余信息</span></span><br><span class="line"><span class="string">        值较大时，可以减少关键点的数量，但可能会漏掉一些有用信息</span></span><br><span class="line"><span class="string">        :return: 关键点列表</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 对概率图进行高斯模糊，以去除噪声。</span></span><br><span class="line">        mapSmooth = cv2.GaussianBlur(probMap, (<span class="number">3</span>, <span class="number">3</span>), <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 二值化概率图，生成一个二值掩模</span></span><br><span class="line">        mapMask = np.uint8(mapSmooth &gt; threshold)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 寻找轮廓</span></span><br><span class="line">        contours, _ = cv2.findContours(mapMask, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)</span><br><span class="line"></span><br><span class="line">        keypoints = []</span><br><span class="line">        <span class="comment"># 针对每个轮廓寻找最大值</span></span><br><span class="line">        <span class="keyword">for</span> cnt <span class="keyword">in</span> contours:</span><br><span class="line">            <span class="comment"># 构造一个与原图大小一致的全黑图像</span></span><br><span class="line">            blobMask = np.zeros(mapMask.shape)</span><br><span class="line">            <span class="comment"># 在全黑图像上填充轮廓，轮廓内部的像素值为 1，其余像素值为 0</span></span><br><span class="line">            blobMask = cv2.fillConvexPoly(blobMask, cnt, <span class="number">1</span>)</span><br><span class="line">            <span class="comment"># 计算概率图中对应区域的最大值和坐标， 将概率图与二值图像相乘，得到关键点所在区域的图像</span></span><br><span class="line">            maskedProbMap = mapSmooth * blobMask</span><br><span class="line">            <span class="comment"># 在关键点所在区域的图像中，寻找最大值及其坐标，即关键点的位置</span></span><br><span class="line">            _, maxVal, _, maxLoc = cv2.minMaxLoc(maskedProbMap)</span><br><span class="line">            <span class="comment"># 在关键点列表中加入当前关键点的坐标和对应概率</span></span><br><span class="line">            keypoints.append(maxLoc + (probMap[maxLoc[<span class="number">1</span>], maxLoc[<span class="number">0</span>]],))</span><br><span class="line">            <span class="comment"># 冗余存储各关键点坐标，用于下面计算顶点坐标</span></span><br><span class="line">            points.append(maxLoc)</span><br><span class="line">        <span class="comment"># 返回关键点列表</span></span><br><span class="line">        <span class="keyword">return</span> keypoints</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getValidPairs</span>(<span class="params">output</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        在所有检测到的人中，寻找有效连接关系</span></span><br><span class="line"><span class="string">        :param output: 检测到的人体内容</span></span><br><span class="line"><span class="string">        :return: 有效连接关系列表，无效连接关系列表</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 存储有效连接关系</span></span><br><span class="line">        valid_pairs = []</span><br><span class="line">        <span class="comment"># 存储无效连接关系</span></span><br><span class="line">        invalid_pairs = []</span><br><span class="line">        <span class="comment"># 插值采样点数目</span></span><br><span class="line">        n_interp_samples = <span class="number">10</span></span><br><span class="line">        <span class="comment"># PAF 对齐阈值</span></span><br><span class="line">        paf_score_th = <span class="number">0.1</span></span><br><span class="line">        <span class="comment"># 有效连接容忍度阈值</span></span><br><span class="line">        conf_th = <span class="number">0.7</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 对于每个 POSE_PAIR 进行如下处理</span></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(mapIdx)):</span><br><span class="line">            <span class="comment"># 获取该连线关系相关联的两个 PAF</span></span><br><span class="line">            pafA = output[<span class="number">0</span>, mapIdx[k][<span class="number">0</span>], :, :]</span><br><span class="line">            pafB = output[<span class="number">0</span>, mapIdx[k][<span class="number">1</span>], :, :]</span><br><span class="line">            <span class="comment"># 调整 PAF 的大小为原始图像的大小</span></span><br><span class="line">            pafA = cv2.resize(pafA, (frameWidth, frameHeight))</span><br><span class="line">            pafB = cv2.resize(pafB, (frameWidth, frameHeight))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 获取第一条连线关系和第二条连线关系的关键点</span></span><br><span class="line">            candA = detected_keypoints[POSE_PAIRS[k][<span class="number">0</span>]]</span><br><span class="line">            candB = detected_keypoints[POSE_PAIRS[k][<span class="number">1</span>]]</span><br><span class="line">            <span class="comment"># 连线关系的关键点数目</span></span><br><span class="line">            nA = <span class="built_in">len</span>(candA)</span><br><span class="line">            nB = <span class="built_in">len</span>(candB)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 如果检测到了该连线关系的关键点，遍历所有关键点，计算距离向量并进行插值</span></span><br><span class="line">            <span class="comment"># 最后根据公式计算连接得分，并判断连接是否有效</span></span><br><span class="line">            <span class="keyword">if</span> (nA != <span class="number">0</span> <span class="keyword">and</span> nB != <span class="number">0</span>):</span><br><span class="line">                valid_pair = np.zeros((<span class="number">0</span>, <span class="number">3</span>))</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(nA):</span><br><span class="line">                    max_j = -<span class="number">1</span></span><br><span class="line">                    maxScore = -<span class="number">1</span></span><br><span class="line">                    found = <span class="number">0</span></span><br><span class="line">                    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(nB):</span><br><span class="line">                        <span class="comment"># 计算两个关键点之间的向量 d_ij</span></span><br><span class="line">                        d_ij = np.subtract(candB[j][:<span class="number">2</span>], candA[i][:<span class="number">2</span>])</span><br><span class="line">                        <span class="comment"># 计算 d_ij 的模长</span></span><br><span class="line">                        norm = np.linalg.norm(d_ij)</span><br><span class="line">                        <span class="keyword">if</span> norm:</span><br><span class="line">                            <span class="comment"># 归一化处理</span></span><br><span class="line">                            d_ij = d_ij / norm</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            <span class="keyword">continue</span></span><br><span class="line">                        <span class="comment"># # 对连接中介进行插值，生成 n_interp_samples 个采样点  p(u)</span></span><br><span class="line">                        interp_coord = <span class="built_in">list</span>(<span class="built_in">zip</span>(np.linspace(candA[i][<span class="number">0</span>], candB[j][<span class="number">0</span>], num=n_interp_samples),</span><br><span class="line">                                                np.linspace(candA[i][<span class="number">1</span>], candB[j][<span class="number">1</span>], num=n_interp_samples)))</span><br><span class="line">                        <span class="comment"># # 查询 PAF 值 L(p(u))</span></span><br><span class="line">                        paf_interp = []</span><br><span class="line">                        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(interp_coord)):</span><br><span class="line">                            paf_interp.append([pafA[<span class="built_in">int</span>(<span class="built_in">round</span>(interp_coord[k][<span class="number">1</span>])), <span class="built_in">int</span>(<span class="built_in">round</span>(interp_coord[k][<span class="number">0</span>]))],</span><br><span class="line">                                               pafB[<span class="built_in">int</span>(<span class="built_in">round</span>(interp_coord[k][<span class="number">1</span>])), <span class="built_in">int</span>(<span class="built_in">round</span>(interp_coord[k][<span class="number">0</span>]))]])</span><br><span class="line">                        <span class="comment"># 计算连接得分 E</span></span><br><span class="line">                        paf_scores = np.dot(paf_interp, d_ij)</span><br><span class="line">                        avg_paf_score = <span class="built_in">sum</span>(paf_scores) / <span class="built_in">len</span>(paf_scores)</span><br><span class="line"></span><br><span class="line">                        <span class="comment"># 如果插值采样点中对齐 PAF 向量的比例高于阈值，则判定为有效连接关系</span></span><br><span class="line">                        <span class="keyword">if</span> (<span class="built_in">len</span>(np.where(paf_scores &gt; paf_score_th)[<span class="number">0</span>]) / n_interp_samples) &gt; conf_th:</span><br><span class="line">                            <span class="keyword">if</span> avg_paf_score &gt; maxScore:</span><br><span class="line">                                max_j = j</span><br><span class="line">                                maxScore = avg_paf_score</span><br><span class="line">                                found = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment"># 将有效连接信息添加到列表中</span></span><br><span class="line">                    <span class="keyword">if</span> found:</span><br><span class="line">                        valid_pair = np.append(valid_pair, [[candA[i][<span class="number">3</span>], candB[max_j][<span class="number">3</span>], maxScore]], axis=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 将有效连接信息存入全局列表中</span></span><br><span class="line">                valid_pairs.append(valid_pair)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># 没有检测到关键点，说明连接无效</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;没有连接 : k = &#123;&#125;&quot;</span>.<span class="built_in">format</span>(k))</span><br><span class="line">                invalid_pairs.append(k)</span><br><span class="line">                valid_pairs.append([])</span><br><span class="line">        <span class="comment"># 返回有效连接关系列表和无效连接关系列表</span></span><br><span class="line">        <span class="keyword">return</span> valid_pairs, invalid_pairs</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getPersonwiseKeypoints</span>(<span class="params">valid_pairs, invalid_pairs</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        遍历所有有效连接关系，将其对应的关键点分配给不同的人，并计算出每个人在当前姿态下的得分。</span></span><br><span class="line"><span class="string">        这样可以更为合适地去描绘人体姿态，减少出现 A 的左眼连结到 B 的右眼的情况</span></span><br><span class="line"><span class="string">        :param valid_pairs:  有效连接关系列表</span></span><br><span class="line"><span class="string">        :param invalid_pairs: 无效连接关系列表</span></span><br><span class="line"><span class="string">        :return: 个性化关键点数组</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 每一行最后一个元素是总得分</span></span><br><span class="line">        personwiseKeypoints = -<span class="number">1</span> * np.ones((<span class="number">0</span>, <span class="number">19</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 遍历所有有效连接关系</span></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(mapIdx)):</span><br><span class="line">            <span class="keyword">if</span> k <span class="keyword">not</span> <span class="keyword">in</span> invalid_pairs:</span><br><span class="line">                <span class="comment"># partAs 和 partBs 分别是相互连接的两个关节点</span></span><br><span class="line">                partAs = valid_pairs[k][:, <span class="number">0</span>]</span><br><span class="line">                partBs = valid_pairs[k][:, <span class="number">1</span>]</span><br><span class="line">                indexA, indexB = np.array(POSE_PAIRS[k])</span><br><span class="line">                <span class="comment"># 将 B 的分数加到 A 所在行的总得分中，或创建一个新行</span></span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(valid_pairs[k])):</span><br><span class="line">                    found = <span class="number">0</span></span><br><span class="line">                    person_idx = -<span class="number">1</span></span><br><span class="line">                    <span class="comment"># 在已有的姿态中查找 partA。</span></span><br><span class="line">                    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(personwiseKeypoints)):</span><br><span class="line">                        <span class="keyword">if</span> personwiseKeypoints[j][indexA] == partAs[i]:</span><br><span class="line">                            person_idx = j</span><br><span class="line">                            found = <span class="number">1</span></span><br><span class="line">                            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment"># 如果在当前姿态中找到了与 partA 相关联的关键点，则将 partB 添加到该行。</span></span><br><span class="line">                    <span class="keyword">if</span> found:</span><br><span class="line">                        personwiseKeypoints[person_idx][indexB] = partBs[i]</span><br><span class="line">                        <span class="comment"># 在该姿态下，添加 partB 的关键点分数以及连接得分到该行的总得分中。</span></span><br><span class="line">                        personwiseKeypoints[person_idx][-<span class="number">1</span>] += keypoints_list[partBs[i].astype(<span class="built_in">int</span>), <span class="number">2</span>] + \</span><br><span class="line">                                                               valid_pairs[k][i][</span><br><span class="line">                                                                   <span class="number">2</span>]</span><br><span class="line">                    <span class="comment"># 如果当前姿态中不存在与 partA 相关联的关键点，则创建一个新姿态</span></span><br><span class="line">                    <span class="keyword">elif</span> <span class="keyword">not</span> found <span class="keyword">and</span> k &lt; <span class="number">17</span>:</span><br><span class="line">                        row = -<span class="number">1</span> * np.ones(<span class="number">19</span>)</span><br><span class="line">                        row[indexA] = partAs[i]</span><br><span class="line">                        row[indexB] = partBs[i]</span><br><span class="line">                        <span class="comment"># 在该姿态下，将两个关键点的关键点分数 scores 以及连接得分加起来作为该行的总得分。</span></span><br><span class="line">                        row[-<span class="number">1</span>] = <span class="built_in">sum</span>(keypoints_list[valid_pairs[k][i, :<span class="number">2</span>].astype(<span class="built_in">int</span>), <span class="number">2</span>]) + valid_pairs[k][i][<span class="number">2</span>]</span><br><span class="line">                        personwiseKeypoints = np.vstack([personwiseKeypoints, row])</span><br><span class="line">        <span class="comment"># 最终返回一个二维数组，每行代表一个人体姿态，每列代表一个关节点。</span></span><br><span class="line">        <span class="keyword">return</span> personwiseKeypoints</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取图像的宽度和高度</span></span><br><span class="line">    frameWidth = image1.shape[<span class="number">1</span>]</span><br><span class="line">    frameHeight = image1.shape[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    t = time.time()</span><br><span class="line">    <span class="comment"># 从磁盘上读取预训练模型</span></span><br><span class="line">    net = cv2.dnn.readNetFromCaffe(protoFile, weightsFile)</span><br><span class="line">    <span class="comment"># 指定运行模型的设备类型，如果使用CPU则设置为CPU，否则设置为GPU</span></span><br><span class="line">    <span class="keyword">if</span> args.device == <span class="string">&quot;cpu&quot;</span>:</span><br><span class="line">        net.setPreferableBackend(cv2.dnn.DNN_TARGET_CPU)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;使用 CPU&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> args.device == <span class="string">&quot;gpu&quot;</span>:</span><br><span class="line">        net.setPreferableBackend(cv2.dnn.DNN_BACKEND_CUDA)</span><br><span class="line">        net.setPreferableTarget(cv2.dnn.DNN_TARGET_CUDA)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;使用 GPU&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 固定输入图像的高度，并根据图像的宽高比来计算输入的宽度</span></span><br><span class="line">    inHeight = <span class="number">368</span></span><br><span class="line">    inWidth = <span class="built_in">int</span>((inHeight / frameHeight) * frameWidth)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将输入图像转换为Blob格式，并进行归一化和缩放</span></span><br><span class="line">    inpBlob = cv2.dnn.blobFromImage(image1, <span class="number">1.0</span> / <span class="number">255</span>, (inWidth, inHeight),</span><br><span class="line">                                    (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), swapRB=<span class="literal">False</span>, crop=<span class="literal">False</span>)</span><br><span class="line">    <span class="comment"># 将输入Blob传递给网络</span></span><br><span class="line">    net.setInput(inpBlob)</span><br><span class="line">    <span class="comment"># 运行前馈传递，可以获取到识别的人脸</span></span><br><span class="line">    output = net.forward()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;前馈传递所需时间 = &#123;&#125;&quot;</span>.<span class="built_in">format</span>(time.time() - t))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 定义一个列表用于存储检测出的所有关键点</span></span><br><span class="line">    detected_keypoints = []</span><br><span class="line">    <span class="comment"># 创建一个 shape 为 (0, 3) 的 numpy 数组，用于保存关键点的位置和 id</span></span><br><span class="line">    keypoints_list = np.zeros((<span class="number">0</span>, <span class="number">3</span>))</span><br><span class="line">    <span class="comment"># 初始化关键点 id</span></span><br><span class="line">    keypoint_id = <span class="number">0</span></span><br><span class="line">    <span class="comment"># 设置概率阈值</span></span><br><span class="line">    threshold = <span class="number">0.1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 遍历每个关键点</span></span><br><span class="line">    <span class="keyword">for</span> part <span class="keyword">in</span> <span class="built_in">range</span>(nPoints):</span><br><span class="line">        <span class="comment"># 获取关键点对应的概率图，并将其 resize 到与输入图像相同的大小</span></span><br><span class="line">        probMap = output[<span class="number">0</span>, part, :, :]</span><br><span class="line">        probMap = cv2.resize(probMap, (image1.shape[<span class="number">1</span>], image1.shape[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 根据阈值获取该关键点的位置</span></span><br><span class="line">        keypoints = getKeypoints(probMap, threshold)</span><br><span class="line">        <span class="comment"># 输出该关键点的位置信息</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Keypoints - &#123;&#125; : &#123;&#125;&quot;</span>.<span class="built_in">format</span>(keypointsMapping[part], keypoints))</span><br><span class="line">        <span class="comment"># 存储关键点的位置和 id</span></span><br><span class="line">        keypoints_with_id = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(keypoints)):</span><br><span class="line">            keypoints_with_id.append(keypoints[i] + (keypoint_id,))</span><br><span class="line">            keypoints_list = np.vstack([keypoints_list, keypoints[i]])</span><br><span class="line">            keypoint_id += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        detected_keypoints.append(keypoints_with_id)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 在原始图像上绘制所有检测出的关键点和 id</span></span><br><span class="line">    frameClone = image1.copy()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(nPoints):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(detected_keypoints[i])):</span><br><span class="line">            <span class="comment"># 输出关键点对应的坐标和名称</span></span><br><span class="line">            <span class="built_in">print</span>(detected_keypoints[i][j][<span class="number">0</span>:<span class="number">2</span>])</span><br><span class="line">            cv2.putText(frameClone, <span class="string">&quot;&#123;&#125;&quot;</span>.<span class="built_in">format</span>(keypointsMapping[i]), detected_keypoints[i][j][<span class="number">0</span>:<span class="number">2</span>],</span><br><span class="line">                        cv2.FONT_HERSHEY_SIMPLEX, <span class="number">0.5</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">1</span>)</span><br><span class="line">            cv2.putText(frameClone, <span class="string">&quot;(&#123;&#125;)&quot;</span>.<span class="built_in">format</span>(detected_keypoints[i][j]), detected_keypoints[i][j][<span class="number">0</span>:<span class="number">2</span>],</span><br><span class="line">                        cv2.FONT_HERSHEY_SIMPLEX, <span class="number">0.5</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">1</span>)</span><br><span class="line">            cv2.circle(frameClone, detected_keypoints[i][j][<span class="number">0</span>:<span class="number">2</span>], <span class="number">5</span>, colors[i], -<span class="number">1</span>, cv2.LINE_AA)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 在原始图像上绘制每条相邻关键点之间的连线，描绘人体的姿态</span></span><br><span class="line">    valid_pairs, invalid_pairs = getValidPairs(output)</span><br><span class="line">    personwiseKeypoints = getPersonwiseKeypoints(valid_pairs, invalid_pairs)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">17</span>):</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(personwiseKeypoints)):</span><br><span class="line">            index = personwiseKeypoints[n][np.array(POSE_PAIRS[i])]</span><br><span class="line">            <span class="keyword">if</span> -<span class="number">1</span> <span class="keyword">in</span> index:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            B = np.int32(keypoints_list[index.astype(<span class="built_in">int</span>), <span class="number">0</span>])</span><br><span class="line">            A = np.int32(keypoints_list[index.astype(<span class="built_in">int</span>), <span class="number">1</span>])</span><br><span class="line">            cv2.line(frameClone, (B[<span class="number">0</span>], A[<span class="number">0</span>]), (B[<span class="number">1</span>], A[<span class="number">1</span>]), colors[i], <span class="number">3</span>, cv2.LINE_AA)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 可视化显示检测结果，仅供预览使用，这部分可注释</span></span><br><span class="line">    cv2.imshow(<span class="string">&quot;关键点&quot;</span>, frameClone)</span><br><span class="line">    cv2.imshow(<span class="string">&quot;姿态检测&quot;</span>, frameClone)</span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 返回检测到的人体关键点和身体姿态的信息</span></span><br><span class="line">    <span class="keyword">return</span> personwiseKeypoints[<span class="number">0</span>] <span class="keyword">if</span> <span class="built_in">len</span>(personwiseKeypoints) &gt; <span class="number">0</span> <span class="keyword">else</span> <span class="literal">None</span>, get_vertex_coordinates(points)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_vertex_coordinates</span>(<span class="params">arr</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    获取坐标数组中的四个顶点坐标</span></span><br><span class="line"><span class="string">    :param arr: 包含坐标点的二维数组，行表示点的数量，列表示每个点的坐标轴数量</span></span><br><span class="line"><span class="string">    :return: arr 一个按照顺时针方向排列的四个顶点的坐标数组</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    arr = np.array(arr)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 找到最上、最下、最左、最右四个点的索引</span></span><br><span class="line">    <span class="comment"># 找到y轴坐标最小的点的索引</span></span><br><span class="line">    top_idx = np.argmin(arr[:, <span class="number">1</span>])</span><br><span class="line">    <span class="comment"># 找到y轴坐标最大的点的索引</span></span><br><span class="line">    bottom_idx = np.argmax(arr[:, <span class="number">1</span>])</span><br><span class="line">    <span class="comment"># 找到x轴坐标最小的点的索引</span></span><br><span class="line">    left_idx = np.argmin(arr[:, <span class="number">0</span>])</span><br><span class="line">    <span class="comment"># 找到x轴坐标最大的点的索引</span></span><br><span class="line">    right_idx = np.argmax(arr[:, <span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 输出最上、最下、最左和最右四个点的坐标</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;最上坐标为：(&#123;&#125;, &#123;&#125;)&quot;</span>.<span class="built_in">format</span>(arr[top_idx][<span class="number">0</span>], arr[top_idx][<span class="number">1</span>]))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;最下坐标为：(&#123;&#125;, &#123;&#125;)&quot;</span>.<span class="built_in">format</span>(arr[bottom_idx][<span class="number">0</span>], arr[bottom_idx][<span class="number">1</span>]))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;最左坐标为：(&#123;&#125;, &#123;&#125;)&quot;</span>.<span class="built_in">format</span>(arr[left_idx][<span class="number">0</span>], arr[left_idx][<span class="number">1</span>]))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;最右坐标为：(&#123;&#125;, &#123;&#125;)&quot;</span>.<span class="built_in">format</span>(arr[right_idx][<span class="number">0</span>], arr[right_idx][<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 按上右下左顺时针方向创建一个包含四个顶点坐标的数组</span></span><br><span class="line">    coordinates = np.array([</span><br><span class="line">        [arr[top_idx][<span class="number">0</span>], arr[top_idx][<span class="number">1</span>]],</span><br><span class="line">        [arr[right_idx][<span class="number">0</span>], arr[right_idx][<span class="number">1</span>]],</span><br><span class="line">        [arr[bottom_idx][<span class="number">0</span>], arr[bottom_idx][<span class="number">1</span>]],</span><br><span class="line">        [arr[left_idx][<span class="number">0</span>], arr[left_idx][<span class="number">1</span>]]</span><br><span class="line">    ])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> coordinates</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    path = <span class="string">&quot;../data/result.png&quot;</span></span><br><span class="line">    pose, points = detect_pose(path)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;------------&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(points)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>结果返回了多个关键点和四个方向顶点坐标数组，可以看到效果还是很好的，可以满足业务需求了。</p><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><blockquote><p><a href="https://www.jianshu.com/p/3aa810b35a5d">Github开源人体姿态识别项目OpenPose中文文档 - 简书</a></p><p><a href="https://blog.csdn.net/qq_27158179/article/details/82717821">基于OpenCV使用OpenPose进行多个人体姿态估计_qq_27158179的CSDN博客</a></p><p><a href="https://learnopencv.com/multi-person-pose-estimation-in-opencv-using-openpose/">Multi Person Pose Estimation in OpenCV using OpenPose (learnopencv.com)</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#背景&quot;&gt;&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;合作公司有个小伙伴提到之前要处理图片中对人物裁剪的效果不好，之前仅识别到人脸做一个大概的图片裁切，无法针对半身图，全身图进行。因此希望能够有方式</summary>
      
    
    
    
    <category term="技术" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Python" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/Python/"/>
    
    
    <category term="技术" scheme="http://blog.heyb.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Python" scheme="http://blog.heyb.top/tags/Python/"/>
    
    <category term="OpenCV" scheme="http://blog.heyb.top/tags/OpenCV/"/>
    
    <category term="OpenPose" scheme="http://blog.heyb.top/tags/OpenPose/"/>
    
    <category term="人体姿态识别" scheme="http://blog.heyb.top/tags/%E4%BA%BA%E4%BD%93%E5%A7%BF%E6%80%81%E8%AF%86%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>「Python」Python基于OpenCV实现图片中人脸识别</title>
    <link href="http://blog.heyb.top/2023/06/11/python-implementation-of-face-recognition-in-images-based-on-opencv.html"/>
    <id>http://blog.heyb.top/2023/06/11/python-implementation-of-face-recognition-in-images-based-on-opencv.html</id>
    <published>2023-06-11T14:20:48.000Z</published>
    <updated>2023-06-27T07:56:12.523Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>最近在和一家科技设计公司合作，需要从大量图片中挑选出含有人物的图片。因此考虑使用 OpenCV 进行人脸识别，有检测到人脸的图片再进额外的处理</p><h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2><p>OpenCV是一个跨平台的计算机视觉库，支持Windows、Linux、macOS等操作系统。它提供了丰富的接口和函数，包括图像处理、计算机视觉、模式识别、机器学习等领域，可用于多种计算机视觉应用，如人脸识别、行人检测、运动跟踪、医学图像处理、目标识别等。</p><p>Github仓库：<a href="https://github.com/opencv/opencv">https://github.com/opencv/opencv</a></p><h3 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install opencv-python</span><br></pre></td></tr></table></figure><p>安装完成后，我们就可以开始使用OpenCV在Python中实现各种计算机视觉任务了。</p><h2 id="图像处理"><a class="markdownIt-Anchor" href="#图像处理"></a> 图像处理</h2><p>使用OpenCV读取和显示图像</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取图像</span></span><br><span class="line">img = cv2.imread(<span class="string">&#x27;image.jpg&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图像。接受两个参数：窗口名称（在这里是&quot;Image&quot;）和要显示的图像。</span></span><br><span class="line">cv2.imshow(<span class="string">&#x27;Image&#x27;</span>, img)</span><br><span class="line"><span class="comment"># 等待按键输入的函数。它会暂停程序执行，直到用户按下任意键。括号中的参数0表示无限等待用户的键盘输入。</span></span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line"><span class="comment"># 销毁所有创建的窗口的函数，会关闭显示图像的窗口。</span></span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p>除了读取和显示图像外，OpenCV还提供了许多其他图像处理功能，如调整大小、旋转、裁剪、灰度化、边缘检测、过滤器、形态学运算等。</p><p>例如，下面的代码实现了将图像缩小一半，并进行灰度化和Canny边缘检测：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取图像</span></span><br><span class="line">img = cv2.imread(<span class="string">&#x27;image.jpg&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 缩小图像。将图像缩小到原来尺寸的50%。这里通过设置fx=0.5和fy=0.5来实现等比例缩小。</span></span><br><span class="line">resized_img = cv2.resize(img, (<span class="number">0</span>, <span class="number">0</span>), fx=<span class="number">0.5</span>, fy=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 灰度化图像，将缩小后的彩色图像转换为灰度图像。这里使用cv2.COLOR_BGR2GRAY参数表示从BGR颜色空间转换为灰度颜色空间。</span></span><br><span class="line">gray = cv2.cvtColor(resized_img, cv2.COLOR_BGR2GRAY)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用Canny边缘检测算法，对灰度图像进行边缘检测。参数100和200分别表示边缘梯度的阈值</span></span><br><span class="line">edges = cv2.Canny(gray, <span class="number">100</span>, <span class="number">200</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示边缘检测结果</span></span><br><span class="line">cv2.imshow(<span class="string">&#x27;Edges&#x27;</span>, edges)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><h2 id="人脸检测"><a class="markdownIt-Anchor" href="#人脸检测"></a> 人脸检测</h2><p>OpenCV提供了多种方法来实现人脸检测，其中一种常用的方法是使用Haar 特征 （Haar-like Features） Cascade分类器。下面的代码演示了如何使用OpenCV在Python中实现人脸检测：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载Haar Cascade分类器模型</span></span><br><span class="line">face_cascade = cv2.CascadeClassifier(<span class="string">&#x27;haarcascade_frontalface_default.xml&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取图像</span></span><br><span class="line">img = cv2.imread(<span class="string">&#x27;image.jpg&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将图像转换为灰度图像</span></span><br><span class="line">gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用Haar Cascade分类器检测人脸</span></span><br><span class="line">faces = face_cascade.detectMultiScale(gray, scaleFactor=<span class="number">1.1</span>, minNeighbors=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在原始图像中绘制人脸框</span></span><br><span class="line"><span class="keyword">for</span> (x, y, w, h) <span class="keyword">in</span> faces:</span><br><span class="line">    cv2.rectangle(img, (x, y), (x+w, y+h), (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图像</span></span><br><span class="line">cv2.imshow(<span class="string">&#x27;Faces&#x27;</span>, img)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p>这个分类器模型可以在</p><p>OpenCV 的 Github 仓库中的 data/haarcascades 目录中找到并且下载 <a href="https://github.com/opencv/opencv/tree/4.x/data/haarcascades">opencv/data/haarcascades</a></p><p>可以看到有</p><ul><li><p>haarcascade_frontalface _default.xml  人脸检测级联分类器的默认模型。它对于一般情况下的人脸检测具有较好的效果，但在某些复杂场景下可能会有一些限制。</p></li><li><p>haarcascade_frontalface_alt.xml 用于检测正面人脸。它在一般情况下具有较好的检测性能，并且速度相对较快。</p></li><li><p>haarcascade_ frontalface_alt2.xml alt 的改进版本，对于一些复杂场景或具有不同角度的人脸也能进行较好的检测。</p></li><li><p>haarcascade_ frontalface_alt_tree.xml 在 alt 的基础上使用了更复杂的级联结构，提高了人脸检测的准确性和鲁棒性。它通常对于复杂背景和表情变化较大的人脸具有更好的效果，但相应的检测速度可能会稍慢一些。</p></li></ul><p>通常我们使用 alt2 就可以取得很好的效果</p><h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><p>我们可以看到 <code>detectMultiScale</code> 函数中有需要传入 <code>scaleFactor</code> 和 <code>minNeighbors</code> 参数。</p><p><code>scaleFactor</code> 用于指定在图像金字塔中采用多大的步长搜索人脸。它的值越小，搜索所花费的时间和检测精度都会增加。一般情况下，值在 1.01 到 1.5 之间逐步增加可以获得比较理想的效果。</p><p><code>minNeighbors</code> 是指人脸矩形相邻两个矩形之间的最小有效距离，也就是当检测到一个人脸时，如果该矩形周围有比它更小的矩形，则认为该矩形并非人脸矩形，会被过滤掉。这个参数的值越大，过滤掉的矩形就越多，同时漏检率也会增加，而值越小，检出的矩形较多，但误检率也会增加。一般情况下，建议在 3-6 之间取值。</p><p>我们也可以通过跟踪当前检测到的人脸数量和大小与预期值之间的差距，然后根据差距来自动调整检测器的参数。例如，当检测到的人脸数量过少时，可以尝试减小 <code>minNeighbors</code> 参数或增加 <code>scaleFactor</code> 参数，以扩大检测范围；而当检测到的人脸数量过多时，则可以尝试增加 <code>minSize</code> 参数，以过滤掉小尺寸的误检测。</p><p>动态调整参数可以使用反馈控制的方法。具体来说，可以根据当前检测到人脸的数量和大小与预期值之间的差距，自动调整检测器的参数，以达到更好的检测效果。</p><p>下面是完整代码，请留意 while True 部分代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dynamic_face_detection</span>(<span class="params">img_path, target_count=<span class="number">1</span>, min_width=<span class="number">50</span>, min_height=<span class="number">50</span>, scale_factor=<span class="number">1.1</span>, min_neighbors=<span class="number">3</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    动态人脸检测函数</span></span><br><span class="line"><span class="string">    :param img_path: 输入图像的文件路径</span></span><br><span class="line"><span class="string">    :param target_count: 目标检测到的人脸数量，默认为4</span></span><br><span class="line"><span class="string">    :param min_width: 最小人脸宽度，默认为50</span></span><br><span class="line"><span class="string">    :param min_height: 最小人脸高度，默认为50</span></span><br><span class="line"><span class="string">    :param scale_factor: 窗口缩放比例因子，默认为1.1</span></span><br><span class="line"><span class="string">    :param min_neighbors: 每个候选矩形应该保留的邻居数，默认为3</span></span><br><span class="line"><span class="string">    :return: faces_vertices 检测到的人脸顶点坐标数组，格式为[((x1, y1), (x2, y2), (x3, y3), (x4, y4)), ...]</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 读取输入图像</span></span><br><span class="line">    img = cv2.imread(img_path)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 转换为灰度图像</span></span><br><span class="line">    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 初始化人脸检测器</span></span><br><span class="line">    face_cascade = cv2.CascadeClassifier(<span class="string">&#x27;./models/cv/haarcascades/haarcascade_frontalface_alt2.xml&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 初始化参数</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># 调用人脸检测器</span></span><br><span class="line">        faces = face_cascade.detectMultiScale(gray, scaleFactor=scale_factor, minNeighbors=min_neighbors, minSize=(min_width, min_height))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 检测到目标数量，终止算法</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(faces) == target_count:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 计算当前平均人脸大小</span></span><br><span class="line">        total_width = <span class="built_in">sum</span>([f[<span class="number">2</span>] <span class="keyword">for</span> f <span class="keyword">in</span> faces])</span><br><span class="line">        total_height = <span class="built_in">sum</span>([f[<span class="number">3</span>] <span class="keyword">for</span> f <span class="keyword">in</span> faces])</span><br><span class="line">        avg_width = total_width / <span class="built_in">len</span>(faces)</span><br><span class="line">        avg_height = total_height / <span class="built_in">len</span>(faces)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 针对检测结果进行参数调整</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(faces) &lt; target_count:</span><br><span class="line">            <span class="comment"># 当检测到人脸数量过少时，减小 min_neighbors 或者增加 scaleFactor</span></span><br><span class="line">            <span class="keyword">if</span> min_neighbors &gt; <span class="number">1</span>:</span><br><span class="line">                min_neighbors -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                scale_factor += <span class="number">0.1</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">len</span>(faces) &gt; target_count:</span><br><span class="line">            <span class="comment"># 当检测到人脸数量过多时，增加 min_width 或者 min_height</span></span><br><span class="line">            min_width = <span class="built_in">int</span>(avg_width * <span class="number">1.1</span>)</span><br><span class="line">            min_height = <span class="built_in">int</span>(avg_height * <span class="number">1.1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 避免参数过大或过小</span></span><br><span class="line">        scale_factor = <span class="built_in">max</span>(<span class="number">1</span>, <span class="built_in">min</span>(scale_factor, <span class="number">2</span>))</span><br><span class="line">        min_neighbors = <span class="built_in">max</span>(<span class="number">1</span>, <span class="built_in">min</span>(min_neighbors, <span class="number">10</span>))</span><br><span class="line">        min_width = <span class="built_in">max</span>(<span class="number">20</span>, <span class="built_in">min</span>(min_width, <span class="number">200</span>))</span><br><span class="line">        min_height = <span class="built_in">max</span>(<span class="number">20</span>, <span class="built_in">min</span>(min_height, <span class="number">200</span>))</span><br><span class="line"></span><br><span class="line">    faces_vertices = []</span><br><span class="line">    <span class="comment"># 在图像中绘制检测到的人脸矩形</span></span><br><span class="line">    <span class="keyword">for</span> (x, y, w, h) <span class="keyword">in</span> faces:</span><br><span class="line">        <span class="comment"># 绘制人脸矩形</span></span><br><span class="line">        cv2.rectangle(img, (x, y), (x + w, y + h), (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">2</span>)</span><br><span class="line">        <span class="comment"># 绘制顶点像素位置</span></span><br><span class="line">        <span class="comment"># 第一个参数是输入图像，第二个参数是要添加的文本，第三个参数是文本要显示的位置，第四个参数是字体，第五个参数是字体大小，第六个参数是颜色，第七个参数是文本厚度</span></span><br><span class="line">        cv2.putText(img, <span class="string">f&quot;(<span class="subst">&#123;x&#125;</span>, <span class="subst">&#123;y&#125;</span>)&quot;</span>, (x, y - <span class="number">10</span>), cv2.FONT_HERSHEY_SIMPLEX, <span class="number">1.5</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>)</span><br><span class="line">        cv2.putText(img, <span class="string">f&quot;(<span class="subst">&#123;x + w&#125;</span>, <span class="subst">&#123;y&#125;</span>)&quot;</span>, (x + w, y - <span class="number">10</span>), cv2.FONT_HERSHEY_SIMPLEX, <span class="number">1.5</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>)</span><br><span class="line">        cv2.putText(img, <span class="string">f&quot;(<span class="subst">&#123;x&#125;</span>, <span class="subst">&#123;y + h&#125;</span>)&quot;</span>, (x, y + h + <span class="number">40</span>), cv2.FONT_HERSHEY_SIMPLEX, <span class="number">1.5</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>)</span><br><span class="line">        cv2.putText(img, <span class="string">f&quot;(<span class="subst">&#123;x + w&#125;</span>, <span class="subst">&#123;y + h&#125;</span>)&quot;</span>, (x + w, y + h + <span class="number">40</span>), cv2.FONT_HERSHEY_SIMPLEX, <span class="number">1.5</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 添加顶点到数组中</span></span><br><span class="line">        top_left = (x, y)</span><br><span class="line">        top_right = (x + w, y)</span><br><span class="line">        bottom_right = (x + w, y + h)</span><br><span class="line">        bottom_left = (x, y + h)</span><br><span class="line">        vertices = (top_left, top_right, bottom_right, bottom_left)</span><br><span class="line">        faces_vertices.append(vertices)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 预览检测结果</span></span><br><span class="line">    cv2.imshow(<span class="string">&#x27;Dynamic Face Detection&#x27;</span>, img)</span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 返回检测到的人脸顶点坐标数组</span></span><br><span class="line">    <span class="keyword">return</span> faces_vertices</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&#x27;./img/img2.png&#x27;</span></span><br><span class="line">    dynamic_face_detection(url)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>通过本文，我们了解了OpenCV的功能及应用领域、如何在Python中使用OpenCV实现图像处理和人脸检测等计算机视觉任务。OpenCV还支持多种其他计算机视觉操作，例如目标跟踪、形态学运算、特征提取和机器学习等。</p><p>需要注意的是，在实际使用过程中，应根据具体要求和数据集选用不同的算法和模型，并对其进行调优和优化，以充分发挥OpenCV的性能和应用优势。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#背景&quot;&gt;&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;最近在和一家科技设计公司合作，需要从大量图片中挑选出含有人物的图片。因此考虑使用 OpenCV 进行人脸识别，有检测到人脸的图片再进额外的处理&lt;</summary>
      
    
    
    
    <category term="技术" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Python" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/Python/"/>
    
    
    <category term="技术" scheme="http://blog.heyb.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Python" scheme="http://blog.heyb.top/tags/Python/"/>
    
    <category term="OpenCV" scheme="http://blog.heyb.top/tags/OpenCV/"/>
    
    <category term="人脸识别" scheme="http://blog.heyb.top/tags/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>「Python」Python实现提取图片中的主要配色方案</title>
    <link href="http://blog.heyb.top/2023/06/07/python-implementation-for-extracting-the-main-color-schemes-in-images.html"/>
    <id>http://blog.heyb.top/2023/06/07/python-implementation-for-extracting-the-main-color-schemes-in-images.html</id>
    <published>2023-06-07T06:42:11.000Z</published>
    <updated>2023-06-07T07:52:11.285Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>当我们设计图片或网页时，配色方案是非常重要的一环。一个好的配色可以为我们的作品增添美感和视觉冲击力。因此，我们可以参考一些出色作品的配色方案来寻求灵感。</p><p>Haishoku 是一个基于 Python 的开源色彩分析库，可用于提取图像中的主要颜色和色调。其可以读取图片文件，自动提取出其中的主色调、辅助色和背景色等颜色，并将其以 RGB 和 HEX 等格式输出。Haishoku 还提供了示例代码和 API 文档，方便用户进行使用和二次开发。通过 Haishoku，我们可以方便地获取图片的主色调和配色方案，为我们的设计等工作提供便利。</p><h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2><p>Github仓库：<a href="https://github.com/LanceGin/haishoku">LanceGin/haishoku</a></p><p>Haishoku 是一个用来获取图片主色调和主要配色方案的python库，依赖于<code>python3</code>和<code>pillow</code>。</p><h3 id="功能"><a class="markdownIt-Anchor" href="#功能"></a> 功能</h3><ol><li>获取图片的 <code>主色调</code></li><li>获取图片的 <code>配色方案</code></li><li>从<code>v1.1.4</code>版本开始，可以直接从网络url生成Haishoku对象</li></ol><h3 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install haishoku</span><br></pre></td></tr></table></figure><p>如果提示没有pip3，可能需要按以下方式安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m pip install haishoku</span><br></pre></td></tr></table></figure><h3 id="api"><a class="markdownIt-Anchor" href="#api"></a> API</h3><h4 id="loadhaishoku-image"><a class="markdownIt-Anchor" href="#loadhaishoku-image"></a> • loadHaishoku( image )</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> haishoku.haishoku <span class="keyword">import</span> Haishoku</span><br><span class="line">haishoku = Haishoku.loadHaishoku(image)</span><br></pre></td></tr></table></figure><p>接口会返回一个<code>Haishoku</code>实例，你可以通过实例属性<code>haishoku.dominant</code> 和 <code>haishoku.palette</code>直接获取到对应的<code>主色调</code> 和 <code>配色方案</code></p><blockquote><p>当然，也提供了更加直接的接口用来获取对应颜色的值以及临时预览颜色，如下：</p></blockquote><h4 id="getdominant-image"><a class="markdownIt-Anchor" href="#getdominant-image"></a> • getDominant( image )</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> haishoku.haishoku <span class="keyword">import</span> Haishoku</span><br><span class="line">dominant = Haishoku.getDominant(image)</span><br></pre></td></tr></table></figure><p>返回结构为 (R, G, B) 的一个 <code>元组</code></p><h4 id="showdominant-image"><a class="markdownIt-Anchor" href="#showdominant-image"></a> • showDominant( image )</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> haishoku.haishoku <span class="keyword">import</span> Haishoku</span><br><span class="line">Haishoku.showDominant( image )</span><br></pre></td></tr></table></figure><p>接口会打开一个临时文件用来预览主色调的颜色。（不会保存在本地）</p><h4 id="getpalette-image"><a class="markdownIt-Anchor" href="#getpalette-image"></a> • getPalette( image )</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> haishoku.haishoku <span class="keyword">import</span> Haishoku</span><br><span class="line">palette = Haishoku.getPalette( image )</span><br></pre></td></tr></table></figure><p>返回一个结构为： [(percentage, (R, G, B)), (percentage, (R, G, B)), …] 最大长度为8的<code>数组</code></p><h4 id="showpalette-image"><a class="markdownIt-Anchor" href="#showpalette-image"></a> • showPalette( image）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> haishoku.haishoku <span class="keyword">import</span> Haishoku</span><br><span class="line">Haishoku.showPalette(image)</span><br></pre></td></tr></table></figure><p>接口会打开一个临时文件用来预览图片配色方案。（不会保存在本地）</p><h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><p>我们获取配色方案的核心代码其实就两行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 载入图片的颜色信息</span></span><br><span class="line">haishoku = Haishoku.loadHaishoku(img_path)</span><br><span class="line"><span class="comment"># 返回配色方案的数组，内容格式为 [(颜色占据的百分比, (红,绿,蓝的RGB色值))]</span></span><br><span class="line">haishoku.palette</span><br></pre></td></tr></table></figure><p>剩下的我们只需要处理 <code>haishoku.palette</code> 数据，获取到里面的 RGB 色值，然后另外绘制到新的图片中即可。</p><p>总体思路为新建一个空白背景，并将图片等比缩放指定的像素，填入到背景当中，然后再将配色方案绘制成为色块，填充到图片下方即可。</p><p>完整代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageDraw</span><br><span class="line"><span class="keyword">from</span> haishoku.haishoku <span class="keyword">import</span> Haishoku</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_color_schema</span>(<span class="params">img_path</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    生成图片的配色方案，并返回一张新的图片，其中包含原图和配色方案</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    此方法的作用是为传入的图片生成配色方案，并将原图和配色方案合并成一张新图片，最后以添加前缀 &quot;color_schema_&quot; 的方式保存。</span></span><br><span class="line"><span class="string">    其中，使用 Haishoku.loadHaishoku(img_path) 方法获取图片的颜色信息，</span></span><br><span class="line"><span class="string">    使用 Image.open(img_path) 方法打开图片文件，使用 .size 获取图片大小，计算缩放后的大小，</span></span><br><span class="line"><span class="string">    使用 .resize(new_size) 进行缩放。</span></span><br><span class="line"><span class="string">    然后计算配色方案中的每行应显示的颜色块数量，计算每个颜色块的宽度和高度，新建白色背景图片并将原始图片贴到新图片顶部。</span></span><br><span class="line"><span class="string">    接着，获取配色方案，并使用 Image.new() 方法新建一张图片，绘制矩形块表示颜色，并添加颜色名称，</span></span><br><span class="line"><span class="string">    最后在新图片上绘制原图和配色方案。使用 add_prefix(img_path) 方法为新图片路径添加前缀 &quot;color_schema_&quot; 并保存新图片。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param img_path: 原始图片路径</span></span><br><span class="line"><span class="string">    :return: None</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 载入图片的颜色信息</span></span><br><span class="line">    haishoku = Haishoku.loadHaishoku(img_path)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> Image.<span class="built_in">open</span>(img_path) <span class="keyword">as</span> img:</span><br><span class="line">        <span class="comment"># 获取图片大小，并计算缩放后的大小</span></span><br><span class="line">        width, height = img.size</span><br><span class="line">        scale_factor = <span class="number">500</span> / width</span><br><span class="line">        new_size = (<span class="number">500</span>, <span class="built_in">int</span>(height * scale_factor))</span><br><span class="line">        img = img.resize(new_size)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 计算配色方案中每行应显示的颜色块数量</span></span><br><span class="line">        colors_num = <span class="built_in">len</span>(haishoku.palette)</span><br><span class="line">        <span class="keyword">if</span> colors_num &lt; <span class="number">5</span>:</span><br><span class="line">            colors_per_row = colors_num</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            colors_per_row = <span class="number">5</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 计算每个颜色块的宽度和高度</span></span><br><span class="line">        color_block_width = <span class="number">500</span> // colors_per_row</span><br><span class="line">        color_block_height = <span class="number">40</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 新建一张白色背景的图片</span></span><br><span class="line">        new_img = Image.new(<span class="string">&#x27;RGB&#x27;</span>, (img.width, img.height + color_block_height + <span class="number">20</span>), (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 将原始图片贴到新图片顶部</span></span><br><span class="line">        new_img.paste(img, (<span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取配色方案</span></span><br><span class="line">        colors = haishoku.palette[:colors_num]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 绘制矩形块表示颜色，并添加颜色名称</span></span><br><span class="line">        palette_size = (<span class="number">500</span>, <span class="built_in">int</span>(<span class="built_in">len</span>(colors) / colors_per_row) * color_block_height + <span class="number">60</span>)</span><br><span class="line">        colors_img = Image.new(<span class="string">&#x27;RGB&#x27;</span>, palette_size, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line">        draw_colors = ImageDraw.Draw(colors_img)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i, color <span class="keyword">in</span> <span class="built_in">enumerate</span>(colors):</span><br><span class="line">          <span class="comment"># 绘制色块</span></span><br><span class="line">            x = i % colors_per_row * color_block_width</span><br><span class="line">            y = i // colors_per_row * color_block_height</span><br><span class="line">            draw_colors.rectangle((x, y, x + color_block_width, y + color_block_height), fill=<span class="built_in">tuple</span>(color[<span class="number">1</span>]))</span><br><span class="line">            <span class="comment"># 写上十六进制颜色值</span></span><br><span class="line">            draw_colors.text((x + color_block_width // <span class="number">2</span>, y + color_block_height // <span class="number">2</span>),</span><br><span class="line">                             <span class="string">f&quot;#<span class="subst">&#123;color[<span class="number">1</span>][<span class="number">0</span>]:02x&#125;</span><span class="subst">&#123;color[<span class="number">1</span>][<span class="number">1</span>]:02x&#125;</span><span class="subst">&#123;color[<span class="number">1</span>][<span class="number">2</span>]:02x&#125;</span>&quot;</span>.upper(), anchor=<span class="string">&#x27;mm&#x27;</span>,</span><br><span class="line">                             fill=(<span class="number">235</span>, <span class="number">235</span>, <span class="number">235</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 在新图片上绘制原图和配色方案</span></span><br><span class="line">        new_img = Image.new(<span class="string">&#x27;RGB&#x27;</span>, (<span class="number">500</span>, new_size[<span class="number">1</span>] + palette_size[<span class="number">1</span>] + <span class="number">20</span>), (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line">        new_img.paste(img, (<span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">        new_img.paste(colors_img, (<span class="number">0</span>, new_size[<span class="number">1</span>] + <span class="number">20</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 保存新图片</span></span><br><span class="line">        new_img.save(add_prefix(img_path))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_prefix</span>(<span class="params">file_path</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    为文件路径添加前缀 &quot;color_schema_&quot;</span></span><br><span class="line"><span class="string">    :param file_path: 原始文件路径，包含目录路径、文件名和扩展名</span></span><br><span class="line"><span class="string">    :return: 添加前缀后的新文件路径</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 分离出目录路径、文件名和扩展名</span></span><br><span class="line">    dir_path, file_name = os.path.split(file_path)</span><br><span class="line">    name, ext = os.path.splitext(file_name)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 在文件名前加上 &quot;color_schema_&quot; 前缀</span></span><br><span class="line">    new_name = <span class="string">&quot;color_schema_&quot;</span> + name</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 重新拼接路径、文件名和扩展名</span></span><br><span class="line">    new_path = os.path.join(dir_path, new_name + ext)</span><br><span class="line">    <span class="keyword">return</span> new_path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    get_color_schema(<span class="string">&#x27;img/img1.png&#x27;</span>)</span><br><span class="line">    get_color_schema(<span class="string">&#x27;img/img2.png&#x27;</span>)</span><br><span class="line">    get_color_schema(<span class="string">&#x27;img/img3.png&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>除去注释，核心代码大概在 40 行左右，整个类库使用非常方便。通过这篇文章的分享，相信大家对于 Haishoku 工具有了更深入的了解，并且也可以从中学到一些有用的编程技巧和实践经验</p><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><blockquote><p><a href="https://github.com/LanceGin/haishoku/blob/master/docs/document_zh.md">Haishoku Github中文文档</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#背景&quot;&gt;&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;当我们设计图片或网页时，配色方案是非常重要的一环。一个好的配色可以为我们的作品增添美感和视觉冲击力。因此，我们可以参考一些出色作品的配色方案来寻</summary>
      
    
    
    
    <category term="技术" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Python" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/Python/"/>
    
    
    <category term="技术" scheme="http://blog.heyb.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Python" scheme="http://blog.heyb.top/tags/Python/"/>
    
    <category term="Haishoku" scheme="http://blog.heyb.top/tags/Haishoku/"/>
    
    <category term="配色方案" scheme="http://blog.heyb.top/tags/%E9%85%8D%E8%89%B2%E6%96%B9%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>「Python」Python将PDF转Word</title>
    <link href="http://blog.heyb.top/2023/02/05/python-convert-pdf-to-word.html"/>
    <id>http://blog.heyb.top/2023/02/05/python-convert-pdf-to-word.html</id>
    <published>2023-02-05T09:01:27.000Z</published>
    <updated>2023-04-03T15:14:15.551Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>PDF 作为一种电子文档，对于阅读和查看是很方便的，但先要编辑却很麻烦。因此将 PDF 转换为可编辑的 Word 文档就变得尤为重要。</p><p>通过 Python 的 PDF2Docx 可以比较轻松的做到这点。具体的思路是通过文档元素和内容解析：</p><ul><li>基于 <code>PyMuPDF</code> 提取文本、图片、矢量等原始数据</li><li>基于规则解析章节、段落、表格、图片、文本等布局及样式</li><li>基于 <code>python-docx</code> 创建Word文档</li></ul><p>当然也有基于机器学习/计算机视觉方法训练模型（尤其是针对扫描的PDF文档）的，在这里暂不扩展。</p><h2 id="特点"><a class="markdownIt-Anchor" href="#特点"></a> 特点</h2><ol><li>简单易用：PDF2DOCX 库提供了简洁明了的函数和接口，方便用户快速上手。</li><li>快速高效：该库采用高效的算法和技术，实现了在较短时间内完成 PDF 到 DOCX 的转换。</li><li>无损转换：在保持文件结构和布局完整的同时，将 PDF 转换为 DOCX，尽量减少转换过程中可能出现的失真或遗漏。</li><li>跨平台：支持 Windows，Mac 和 Linux 等多种操作系统，为用户提供全方位的支持。</li></ol><h2 id="限制"><a class="markdownIt-Anchor" href="#限制"></a> 限制</h2><ul><li>目前暂不支持扫描PDF文字识别</li><li>仅支持从左向右书写的语言（因此不支持阿拉伯语）</li><li>不支持旋转的文字</li><li>基于规则的解析无法保证100%还原PDF样式</li></ul><h2 id="使用方法"><a class="markdownIt-Anchor" href="#使用方法"></a> 使用方法</h2><ol><li>安装依赖项：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pdf2docx</span><br></pre></td></tr></table></figure><ol><li>转换 PDF 到 DOCX</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pdf2docx <span class="keyword">import</span> Converter</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建转换器对象</span></span><br><span class="line">converter = Converter(<span class="string">&#x27;path/to/input.pdf&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 转换 PDF 到 DOCX</span></span><br><span class="line">converter.convert(<span class="string">&#x27;path/to/output.docx&#x27;</span>, start=<span class="number">1</span>, end=<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭转换器</span></span><br><span class="line">converter.close()</span><br></pre></td></tr></table></figure><p>其中，<code>start</code> 和 <code>end</code> 参数可以用于指定转换的开始和结束页码，默认为全部转换。</p><p>注意：由于PDF文档中的元素位置可能会因为解析引擎不同而有所偏差，因此建议在导出Word文档后再进行必要的手动调整。</p><p>除了基本的转换功能之外，<code>pdf2docx</code> 还提供了一些其他的功能来方便用户进行更高级的操作。</p><h3 id="解析-pdf-内容"><a class="markdownIt-Anchor" href="#解析-pdf-内容"></a> 解析 PDF 内容</h3><p><code>pdf2docx</code> 可以将 PDF 中的不同元素（如文本、表格、图片）解析为 Python 对象，以便进一步分析和处理。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">pythonCopy Codefrom pdf2docx <span class="keyword">import</span> Parser</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建解析器对象</span></span><br><span class="line">parser = Parser(<span class="string">&#x27;path/to/input.pdf&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解析 PDF 内容</span></span><br><span class="line">pages = parser.parse()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历每一页的内容</span></span><br><span class="line"><span class="keyword">for</span> page <span class="keyword">in</span> pages:</span><br><span class="line">    <span class="comment"># 遍历页面中的所有元素</span></span><br><span class="line">    <span class="keyword">for</span> element <span class="keyword">in</span> page.elements:</span><br><span class="line">        <span class="comment"># 处理元素</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭解析器</span></span><br><span class="line">parser.close()</span><br></pre></td></tr></table></figure><p>其中，<code>pages</code> 是一个包含所有页面对象的列表，每个页面对象都包含了该页面中所有的元素。</p><p>每个元素可以是以下类型之一：</p><ul><li><code>TextElement</code>: 表示纯文本。</li><li><code>ImageElement</code>: 表示图片。</li><li><code>TableElement</code>: 表示表格。</li></ul><p>每个元素都具有一些属性，例如位置、大小、样式等，可以用于进一步处理。</p><h3 id="自定义样式"><a class="markdownIt-Anchor" href="#自定义样式"></a> 自定义样式</h3><p>用户可以通过创建自定义样式对象来修改生成的 Word 文档的样式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">pythonCopy Codefrom pdf2docx.styles import ParagraphStyle, RunStyle</span><br><span class="line"></span><br><span class="line"># 创建段落样式</span><br><span class="line">my_para_style = ParagraphStyle(&#x27;MyParaStyle&#x27;)</span><br><span class="line">my_para_style.font.name = &#x27;Calibri&#x27;</span><br><span class="line">my_para_style.font.size = 12</span><br><span class="line">my_para_style.font.bold = True</span><br><span class="line"></span><br><span class="line"># 创建文本样式</span><br><span class="line">my_run_style = RunStyle(&#x27;MyRunStyle&#x27;)</span><br><span class="line">my_run_style.font.color.rgb = (255, 0, 0)</span><br><span class="line"></span><br><span class="line"># 在段落样式中使用文本样式</span><br><span class="line">my_para_style.run_style = my_run_style</span><br><span class="line"></span><br><span class="line"># 使用自定义样式进行转换</span><br><span class="line">converter = Converter(&#x27;path/to/input.pdf&#x27;, para_style=my_para_style)</span><br><span class="line">converter.convert(&#x27;path/to/output.docx&#x27;)</span><br><span class="line">converter.close()</span><br></pre></td></tr></table></figure><p>在上面的示例中，创建了一个名为 <code>MyParaStyle</code> 的自定义段落样式，并将字体设置为 Calibri、字号设置为 12、加粗。然后又创建了一个名为 <code>MyRunStyle</code> 的自定义文本样式，并将字体颜色设置为红色。最后，在段落样式中使用了该文本样式。</p><p>当转换 PDF 到 DOCX 时，指定了 <code>para_style=my_para_style</code> 参数，即使用了上述创建的自定义样式。</p><h3 id="多进程转换"><a class="markdownIt-Anchor" href="#多进程转换"></a> 多进程转换</h3><p><code>pdf2docx</code> 支持多进程转换，可以提高转换速度。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">pythonCopy Codefrom pdf2docx import MultiConverter</span><br><span class="line"></span><br><span class="line"># 创建多进程转换器对象</span><br><span class="line">mconverter = MultiConverter(&#x27;path/to/input.pdf&#x27;, num_processes=4)</span><br><span class="line"></span><br><span class="line"># 转换 PDF 到 DOCX</span><br><span class="line">mconverter.convert(&#x27;path/to/output.docx&#x27;)</span><br><span class="line"></span><br><span class="line"># 关闭转换器</span><br><span class="line">mconverter.close()</span><br></pre></td></tr></table></figure><p>在上面的示例中，创建了一个名为 <code>MultiConverter</code> 的多进程转换器对象，并将 <code>num_processes</code> 参数设置为 4，表示同时使用 4 个进程进行转换。</p><p>注意：使用多进程转换时，请确保您的计算机具有足够的 CPU 和内存资源，以避免出现不必要的问题。</p><h2 id="实际运用"><a class="markdownIt-Anchor" href="#实际运用"></a> 实际运用</h2><p>下面是一段使用第三方库pdf2docx实现pdf转docx的代码。</p><p>该代码将pdf文件「英语4000单词本.pdf」转换成docx文件 wordBook.docx</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pdf2docx <span class="keyword">import</span> Converter</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装类库 pip install pdf2docx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DPF文件路径</span></span><br><span class="line">pdf_file = <span class="string">&#x27;英语4000单词本.pdf&#x27;</span></span><br><span class="line"><span class="comment"># 输出Docx文件路径</span></span><br><span class="line">docx_file = <span class="string">&#x27;wordBook.docx&#x27;</span></span><br><span class="line"><span class="comment"># 实例化</span></span><br><span class="line">cv = Converter(pdf_file)</span><br><span class="line"><span class="comment"># 执行转换</span></span><br><span class="line">cv.convert(docx_file, start=<span class="number">0</span>, end=<span class="literal">None</span>, multiprocessing=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 关闭</span></span><br><span class="line">cv.close()</span><br></pre></td></tr></table></figure><ul><li>convert 函数的 start 和 end 参数代表需要转换的pdf页数的起始和结束位置，也可以通过<code>pages</code>指定不连续的页面，例如<code>pages=[1,3,5]</code>。</li><li>multiprocessing 参数代表是否启用多进程进行转换，如果设置为True则会使用多个进程进行转换</li></ul><p>通过上面 5 行代码我们就可以进行将PDF转换为WORD文件了，也可以直接通过命令行来执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pdf2docx convert 批地艾抚.pdf 沃的.docx</span><br></pre></td></tr></table></figure><p>同理可以通过<code>--start</code>、<code>--end</code>或者<code>--pages</code>指定页面范围。</p><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><blockquote><p><a href="https://blog.csdn.net/sinat_15136141/article/details/113620116">pdf2docx：Python实现PDF转Word</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#背景&quot;&gt;&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;PDF 作为一种电子文档，对于阅读和查看是很方便的，但先要编辑却很麻烦。因此将 PDF 转换为可编辑的 Word 文档就变得尤为重要。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="技术" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Python" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/Python/"/>
    
    
    <category term="技术" scheme="http://blog.heyb.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Python" scheme="http://blog.heyb.top/tags/Python/"/>
    
    <category term="Word" scheme="http://blog.heyb.top/tags/Word/"/>
    
  </entry>
  
  <entry>
    <title>「Python」requirement 依赖管理.md</title>
    <link href="http://blog.heyb.top/2023/01/08/python-requirement-dependency-management.-md.html"/>
    <id>http://blog.heyb.top/2023/01/08/python-requirement-dependency-management.-md.html</id>
    <published>2023-01-08T04:33:00.000Z</published>
    <updated>2023-04-04T09:00:22.908Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>Python 的 requirement.txt 文件是一种常用的依赖管理方式，可以很方便地记录和管理项目所需的 Python 包及其版本。在开发和部署 Python 项目时，使用 requirement.txt 文件可以帮助我们轻松地安装和更新依赖，提高项目的稳定性和可维护性。</p><p>本文将介绍如何生成 Python 的 requirement.txt 文件，并说明它的主要作用和使用方法。</p><h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2><p>Python 的 requirement.txt 文件是一种文本文件，通常包含了项目所需要的 Python 包及其版本信息。这些信息可以由 pip 工具自动生成，也可以手动编写。一个典型的 requirement.txt 文件如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">复制代码numpy==1.19.1</span><br><span class="line">pandas==1.0.5</span><br><span class="line">matplotlib==3.2.2</span><br><span class="line">scikit-learn==0.23.1</span><br></pre></td></tr></table></figure><p>在这个例子中，每一行都记录了一个 Python 包及其版本信息，用等号连接包名和版本号，中间没有空格。这些信息可以让 pip 工具自动下载和安装指定版本的包，从而满足项目的依赖关系。</p><h2 id="作用"><a class="markdownIt-Anchor" href="#作用"></a> 作用</h2><p>Python 的 requirement.txt 文件具有如下作用：</p><ol><li><p>记录项目的依赖关系。通过 requirement.txt 文件，我们可以清楚地了解项目所需要的 Python 包及其版本信息，方便我们管理和维护项目。</p></li><li><p>方便部署和安装。在部署和运行项目时，只需要简单地执行 pip install -r requirements.txt 命令，即可自动安装和更新所有需要的 Python 包，减少了手动下载和安装依赖的工作量。</p></li><li><p>提高项目的稳定性和可维护性。通过 requirement.txt 文件，我们可以保证项目的依赖关系是清晰和明确的，并且不受其他因素（如开发环境、操作系统等）的影响。这有助于提高项目的稳定性和可维护性。</p></li></ol><h2 id="生成"><a class="markdownIt-Anchor" href="#生成"></a> 生成</h2><p>在日常开发和维护 Python 项目时，我们通常需要生成 requirement.txt 文件来记录项目的依赖关系。有以下两种方法可以生成 requirement.txt 文件：</p><h3 id="使用-pip-freeze-命令"><a class="markdownIt-Anchor" href="#使用-pip-freeze-命令"></a> 使用 pip freeze 命令</h3><p>pip 是 Python 的包管理工具，经常被用来安装和更新 Python 包。pip freeze 命令可以列出当前环境中已安装的所有 Python 包及其版本信息，将它们输出到屏幕上或者保存到文件中。我们可以使用以下命令生成 requirement.txt 文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure><p>这个命令会将当前环境中所有已安装的 Python 包及其版本信息，保存到当前目录下的 requirements.txt 文件中。如果当前环境中没有安装任何 Python 包，则生成的文件会是空的。</p><h3 id="手动编辑-requirementstxt-文件"><a class="markdownIt-Anchor" href="#手动编辑-requirementstxt-文件"></a> 手动编辑 requirements.txt 文件</h3><p>如果您需要手动管理项目的依赖关系，也可以手动编写 requirements.txt 文件。您可以在 requirements.txt 文件中按照前面提到的格式，逐行记录需要的 Python 包和版本信息。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">复制代码numpy==1.19.1</span><br><span class="line">pandas==1.0.5</span><br><span class="line">matplotlib==3.2.2</span><br><span class="line">scikit-learn==0.23.1</span><br></pre></td></tr></table></figure><p>在编写完 requirements.txt 文件后，可以使用以下命令安装指定版本的 Python 包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">复制代码pip install -r requirements.txt</span><br></pre></td></tr></table></figure><h3 id="pycharm-生成"><a class="markdownIt-Anchor" href="#pycharm-生成"></a> PyCharm 生成</h3><p>PyCharm 是一款强大的 Python IDE，它提供了方便的方式来生成 requirement.txt 文件。下面是使用 PyCharm 生成 requirement.txt 文件的步骤：</p><ol><li>打开 PyCharm，并打开您的项目。</li><li>在主菜单中选择 Tools &gt; Sync Python Requirements…</li><li>选择生成路径和配置，点击OK之后，选择的根目录会有会文件产生。这个文件里的依赖包要准确的多。</li></ol><p>另外，如果想在终端中使用 pip freeze 命令来生成 requirements.txt 文件，也可以在 PyCharm 中使用 Terminal 工具来执行该命令。只需要在主菜单中选择 “View” -&gt; “Tool Windows” -&gt; “Terminal”，然后在终端中输入以下命令即可生成 requirements.txt 文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure><p>使用 PyCharm 来生成 requirements.txt 文件非常方便，可以极大地提高项目的管理和维护效率。</p><h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><p>在开发和维护 Python 项目时，使用 requirement.txt 文件是一个好习惯。您可以按照下面的步骤来使用 requirement.txt 文件：</p><ol><li>创建或更新 requirements.txt 文件。可以使用 pip freeze 命令或手动编写文件的方式来创建或更新 requirements.txt 文件。</li><li>将 requirements.txt 文件提交到版本控制系统。建议将 requirements.txt 文件提交到同样的版本控制系统中，以便其他开发者或管理员可以看到项目的依赖关系。</li><li>安装或更新依赖。在部署或运行项目时，可以使用 <code>pip install -r requirements.txt</code> 命令安装或更新所有需要的 Python 包。建议在虚拟环境中进行操作，避免与其他项目产生干扰。</li></ol><p>综上所述，Python 的 requirement.txt 文件是一个方便管理和维护项目依赖关系的工具。无论是在开发、测试还是部署环节，都可以帮助我们减少工作量，提高项目的稳定性和可维护性。如果您还没有使用 requirement.txt 文件来管理 Python 项目的依赖关系，不妨尝试一下。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#背景&quot;&gt;&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;Python 的 requirement.txt 文件是一种常用的依赖管理方式，可以很方便地记录和管理项目所需的 Python 包及其版本。在开</summary>
      
    
    
    
    <category term="技术" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Python" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/Python/"/>
    
    
    <category term="技术" scheme="http://blog.heyb.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Python" scheme="http://blog.heyb.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>「OCR」paddleOCR</title>
    <link href="http://blog.heyb.top/2023/01/06/ocr-paddleocr.html"/>
    <id>http://blog.heyb.top/2023/01/06/ocr-paddleocr.html</id>
    <published>2023-01-06T08:57:00.000Z</published>
    <updated>2023-04-04T08:25:25.065Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>paddleOCR 是百度基于 PaddlePaddle 开发的一款开源 OCR（Optical Character Recognition 光学字符识别） 工具集，旨在提供高精度、高效率的文字识别和文本检测服务，支持包括中英文在内的多种语言。本文将介绍 PaddleOCR 的主要特点和使用方法。</p><h2 id="网站"><a class="markdownIt-Anchor" href="#网站"></a> 网站</h2><p>官网： <a href="https://www.paddlepaddle.org.cn/">https://www.paddlepaddle.org.cn/</a></p><p>Github： <a href="https://github.com/PaddlePaddle/PaddleOCR">https://github.com/PaddlePaddle/PaddleOCR</a></p><h2 id="特点"><a class="markdownIt-Anchor" href="#特点"></a> 特点</h2><ol><li>高精度识别：PaddleOCR 提供多种预训练模型，可以处理各种不同类型的文档和图片，包括通用场景、特定行业领域、手写体等。它还支持 FineTune 模式，可以让用户自行训练模型以适应特定场景的需求。</li><li>多种文本检测算法：PaddleOCR 支持 EAST、DB、SAST、PSENet 等多种文本检测算法，可以适应不同类型的文档和图片，并提供多种参数配置和优化选项，以满足不同场景的需求。</li><li>多种输出格式：PaddleOCR 支持输出多种格式的识别结果，包括 bbox、quad、mask 等，可以方便地进行后续处理和分析。</li><li>快速和高效：PaddleOCR 基于 PaddlePaddle 深度学习框架，提供了高效、可扩展的计算能力，在保证识别精度的同时，也可以快速地处理大量数据。</li></ol><h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><p>PaddleOCR 的使用方法非常简单，只需要三步即可完成文本识别和检测任务：</p><ol><li>安装 PaddleOCR：可以通过 pip 或源码编译的方式安装 PaddleOCR。具体的安装方法可以参考 PaddleOCR 的官方文档。</li><li>加载模型：PaddleOCR 提供多个预训练模型可供选择，包括通用场景 OCR、身份证 OCR、车牌 OCR 等。可以使用 PaddleOCR 的 API 加载所需的模型。</li><li>进行文本识别和检测：加载模型后，就可以调用相应的 API 对文本进行识别和检测了。</li></ol><h3 id="安装-paddlepaddle"><a class="markdownIt-Anchor" href="#安装-paddlepaddle"></a> 安装 paddlepaddle</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install paddlepaddle -i https://pypi.tuna.tsinghua.edu.cn/simple\</span><br></pre></td></tr></table></figure><h3 id="安装paddleocr-whl包"><a class="markdownIt-Anchor" href="#安装paddleocr-whl包"></a> 安装PaddleOCR whl包</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install &quot;paddleocr&gt;=2.0.1&quot; # 推荐使用2.0.1+版本</span><br></pre></td></tr></table></figure><h3 id="图片"><a class="markdownIt-Anchor" href="#图片"></a> 图片</h3><p>在图片目录中使用命令行执行识别：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paddleocr --image_dir ./imgs/示例图片.jpg --use_angle_cls true --use_gpu false</span><br></pre></td></tr></table></figure><ul><li>检测+方向分类器+识别全流程：<code>--use_angle_cls true</code>设置使用方向分类器识别180度旋转文字，<code>--use_gpu false</code>设置不使用GPU</li></ul><h3 id="pdf"><a class="markdownIt-Anchor" href="#pdf"></a> PDF</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paddleocr --image_dir ./xxx.pdf --use_angle_cls true --use_gpu false --page_num 2</span><br></pre></td></tr></table></figure><ul><li>可以通过指定参数<code>page_num</code>来控制推理前面几页，默认为0，表示推理所有页。</li></ul><p>如需新增自己训练的模型，可以在<a href="https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.6/paddleocr.py">paddleocr</a>中增加模型链接和字段，重新编译即可。</p><p>更多whl包使用可参考<a href="https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.6/doc/doc_ch/whl.md">whl包文档</a></p><h3 id="多语言"><a class="markdownIt-Anchor" href="#多语言"></a> 多语言</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paddleocr --image_dir ./imgs_en/254.jpg --lang=en</span><br></pre></td></tr></table></figure><p>PaddleOCR目前支持80个语种，可以通过修改<code>--lang</code>参数进行切换，对于英文模型，指定<code>--lang=en</code>。</p><p>常用的多语言简写包括</p><table><thead><tr><th>语种</th><th>缩写</th><th></th><th>语种</th><th>缩写</th><th></th><th>语种</th><th>缩写</th></tr></thead><tbody><tr><td>中文</td><td>ch</td><td></td><td>法文</td><td>fr</td><td></td><td>日文</td><td>japan</td></tr><tr><td>英文</td><td>en</td><td></td><td>德文</td><td>german</td><td></td><td>韩文</td><td>korean</td></tr><tr><td>繁体中文</td><td>chinese_cht</td><td></td><td>意大利文</td><td>it</td><td></td><td>俄罗斯文</td><td>ru</td></tr></tbody></table><p>全部语种及其对应的缩写列表可查看<a href="https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.6/doc/doc_ch/multi_languages.md">多语言模型教程</a></p><h3 id="python"><a class="markdownIt-Anchor" href="#python"></a> Python</h3><h4 id="入门"><a class="markdownIt-Anchor" href="#入门"></a> 入门</h4><p>可以使用以下 Python 代码来进行通用 OCR 识别：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> paddleocr</span><br><span class="line">ocr = paddleocr.OCR()</span><br><span class="line">result = ocr.ocr(<span class="string">&#x27;image.jpg&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> result:</span><br><span class="line">    <span class="built_in">print</span>(line)</span><br></pre></td></tr></table></figure><p>以上代码将加载通用 OCR 模型，并对名为 <code>image.jpg</code> 的图片进行识别。识别结果将以列表形式返回，每个元素表示一行文字。</p><h4 id="图片-2"><a class="markdownIt-Anchor" href="#图片-2"></a> 图片</h4><ul><li>检测+方向分类器+识别全流程</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> paddleocr <span class="keyword">import</span> PaddleOCR, draw_ocr</span><br><span class="line"></span><br><span class="line"><span class="comment"># Paddleocr目前支持的多语言语种可以通过修改lang参数进行切换</span></span><br><span class="line"><span class="comment"># 例如`ch`, `en`, `fr`, `german`, `korean`, `japan`</span></span><br><span class="line">ocr = PaddleOCR(use_angle_cls=<span class="literal">True</span>, lang=<span class="string">&quot;ch&quot;</span>)  <span class="comment"># need to run only once to download and load model into memory</span></span><br><span class="line">img_path = <span class="string">&#x27;./imgs/11.jpg&#x27;</span></span><br><span class="line">result = ocr.ocr(img_path, cls=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">for</span> idx <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result)):</span><br><span class="line">    res = result[idx]</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> res:</span><br><span class="line">        <span class="built_in">print</span>(line)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示结果</span></span><br><span class="line"><span class="comment"># 如果本地没有simfang.ttf，可以在doc/fonts目录下下载</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">result = result[<span class="number">0</span>]</span><br><span class="line">image = Image.<span class="built_in">open</span>(img_path).convert(<span class="string">&#x27;RGB&#x27;</span>)</span><br><span class="line">boxes = [line[<span class="number">0</span>] <span class="keyword">for</span> line <span class="keyword">in</span> result]</span><br><span class="line">txts = [line[<span class="number">1</span>][<span class="number">0</span>] <span class="keyword">for</span> line <span class="keyword">in</span> result]</span><br><span class="line">scores = [line[<span class="number">1</span>][<span class="number">1</span>] <span class="keyword">for</span> line <span class="keyword">in</span> result]</span><br><span class="line">im_show = draw_ocr(image, boxes, txts, scores, font_path=<span class="string">&#x27;doc/fonts/simfang.ttf&#x27;</span>)</span><br><span class="line">im_show = Image.fromarray(im_show)</span><br><span class="line">im_show.save(<span class="string">&#x27;result.jpg&#x27;</span>)</span><br></pre></td></tr></table></figure><p>可以将这个方法包装成函数，提供给接口调用，返回 res 结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> paddleocr <span class="keyword">import</span> PaddleOCR</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>(<span class="params">filePath</span>):</span><br><span class="line">    <span class="comment"># Paddleocr目前支持的多语言语种可以通过修改lang参数进行切换</span></span><br><span class="line">    <span class="comment"># 例如`ch`, `en`, `fr`, `german`, `korean`, `japan`</span></span><br><span class="line">    ocr = PaddleOCR(use_angle_cls=<span class="literal">True</span>, lang=<span class="string">&quot;ch&quot;</span>)  <span class="comment"># need to run only once to download and load model into memory</span></span><br><span class="line">    img_path = filePath</span><br><span class="line">    result = ocr.ocr(img_path, cls=<span class="literal">True</span>)</span><br><span class="line">    res = []</span><br><span class="line">    <span class="keyword">for</span> idx <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result)):</span><br><span class="line">        res = result[idx]</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h4 id="pdf-2"><a class="markdownIt-Anchor" href="#pdf-2"></a> PDF</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> paddleocr <span class="keyword">import</span> PaddleOCR, draw_ocr</span><br><span class="line"></span><br><span class="line"><span class="comment"># Paddleocr目前支持的多语言语种可以通过修改lang参数进行切换</span></span><br><span class="line"><span class="comment"># 例如`ch`, `en`, `fr`, `german`, `korean`, `japan`</span></span><br><span class="line">ocr = PaddleOCR(use_angle_cls=<span class="literal">True</span>, lang=<span class="string">&quot;ch&quot;</span>, page_num=<span class="number">2</span>)  <span class="comment"># need to run only once to download and load model into memory</span></span><br><span class="line">img_path = <span class="string">&#x27;./xxx.pdf&#x27;</span></span><br><span class="line">result = ocr.ocr(img_path, cls=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">for</span> idx <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result)):</span><br><span class="line">    res = result[idx]</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> res:</span><br><span class="line">        <span class="built_in">print</span>(line)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示结果</span></span><br><span class="line"><span class="keyword">import</span> fitz</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">imgs = []</span><br><span class="line"><span class="keyword">with</span> fitz.<span class="built_in">open</span>(img_path) <span class="keyword">as</span> pdf:</span><br><span class="line">    <span class="keyword">for</span> pg <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, pdf.pageCount):</span><br><span class="line">        page = pdf[pg]</span><br><span class="line">        mat = fitz.Matrix(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">        pm = page.getPixmap(matrix=mat, alpha=<span class="literal">False</span>)</span><br><span class="line">        <span class="comment"># if width or height &gt; 2000 pixels, don&#x27;t enlarge the image</span></span><br><span class="line">        <span class="keyword">if</span> pm.width &gt; <span class="number">2000</span> <span class="keyword">or</span> pm.height &gt; <span class="number">2000</span>:</span><br><span class="line">            pm = page.getPixmap(matrix=fitz.Matrix(<span class="number">1</span>, <span class="number">1</span>), alpha=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">        img = Image.frombytes(<span class="string">&quot;RGB&quot;</span>, [pm.width, pm.height], pm.samples)</span><br><span class="line">        img = cv2.cvtColor(np.array(img), cv2.COLOR_RGB2BGR)</span><br><span class="line">        imgs.append(img)</span><br><span class="line"><span class="keyword">for</span> idx <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result)):</span><br><span class="line">    res = result[idx]</span><br><span class="line">    image = imgs[idx]</span><br><span class="line">    boxes = [line[<span class="number">0</span>] <span class="keyword">for</span> line <span class="keyword">in</span> res]</span><br><span class="line">    txts = [line[<span class="number">1</span>][<span class="number">0</span>] <span class="keyword">for</span> line <span class="keyword">in</span> res]</span><br><span class="line">    scores = [line[<span class="number">1</span>][<span class="number">1</span>] <span class="keyword">for</span> line <span class="keyword">in</span> res]</span><br><span class="line">    im_show = draw_ocr(image, boxes, txts, scores, font_path=<span class="string">&#x27;doc/fonts/simfang.ttf&#x27;</span>)</span><br><span class="line">    im_show = Image.fromarray(im_show)</span><br><span class="line">    im_show.save(<span class="string">&#x27;result_page_&#123;&#125;.jpg&#x27;</span>.<span class="built_in">format</span>(idx))</span><br></pre></td></tr></table></figure><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><ul><li>稳定版本：python 3.7.9，numpy 要指定安装 1.19.3 及以下版本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install numpy==1.19.3</span><br></pre></td></tr></table></figure><ul><li><p>提示 <code>ModuleNotFoundError: No module named 'common' </code> 异常</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import common, dual, tight, data, prox</span><br><span class="line">      ModuleNotFoundError: No module named &#x27;common&#x27;</span><br><span class="line">      [end of output]</span><br><span class="line">  </span><br><span class="line">  note: This error originates from a subprocess, and is likely not a problem with pip.</span><br><span class="line">error: metadata-generation-failed</span><br><span class="line"></span><br><span class="line">× Encountered error while generating package metadata.</span><br><span class="line">╰─&gt; See above for output.</span><br></pre></td></tr></table></figure><p>需要安装common、dual、tight、data、prox模块：</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pip install common -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">pip install dual -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">pip install tight -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">pip install data -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">pip install prox -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure></li><li><p>提示 <code>ModuleNotFoundError: No module named 'paddle’</code> 或者 <code>No module named ‘paddle.fluid’</code></p><p>重新安装依赖包 Image \ paddleOCR</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install Image -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">pip install paddleocr -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure></li></ul><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>PaddleOCR 是一款高精度、高效率的 OCR 工具集，可以适应不同类型的文档和图片，并支持多种输出格式。通过简单的 API 调用就可以进行文本识别和检测，并在实际应用中发挥重要作用。</p><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><blockquote><p><a href="https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.6/doc/doc_ch/quickstart.md">PaddleOCR 快速开始</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#背景&quot;&gt;&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;paddleOCR 是百度基于 PaddlePaddle 开发的一款开源 OCR（Optical Character Recognition 光</summary>
      
    
    
    
    <category term="技术" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="OCR" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/OCR/"/>
    
    
    <category term="技术" scheme="http://blog.heyb.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="OCR" scheme="http://blog.heyb.top/tags/OCR/"/>
    
  </entry>
  
  <entry>
    <title>「Markdown」Markdown常用数学公式</title>
    <link href="http://blog.heyb.top/2023/01/05/markdown-common-formula-of-markdown.html"/>
    <id>http://blog.heyb.top/2023/01/05/markdown-common-formula-of-markdown.html</id>
    <published>2023-01-05T03:39:31.000Z</published>
    <updated>2023-01-05T03:39:32.339Z</updated>
    
    <content type="html"><![CDATA[<p>很多情况下，markdown编辑器都自带Latex的公式解析功能，因此我们可以直接使用Latex公式来展示数学公式的内容。</p><h2 id="行内独行公式"><a class="markdownIt-Anchor" href="#行内独行公式"></a> 行内&amp;独行公式</h2><table><thead><tr><th>公式</th><th>显示效果</th><th>语法</th><th>示例</th></tr></thead><tbody><tr><td>行内公式，将公式插入到本行内</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><mi>y</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x = y + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.64444em;"></span><span class="strut bottom" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mbin">+</span><span class="mord mathrm">1</span></span></span></span></td><td>$ 内容 $</td><td>$x=y+1$</td></tr><tr><td>独行公式，将公式插入到新的一行内，并且居中</td><td>$$x=y+1$$</td><td>$$ 内容 $$</td><td>$$x=y+1$$</td></tr></tbody></table><p>行内公式显示效果：</p><p>$ J_\alpha(x) = \sum_{m=0}^\infty \frac{(-1)^m}{m! \Gamma (m + \alpha + 1)} {\left({ \frac{x}{2} }\right)}^{2m + \alpha} \text {，行内公式示例} $</p><p>示例：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span> J<span class="built_in">_</span><span class="keyword">\alpha</span>(x) = <span class="keyword">\sum</span><span class="built_in">_</span>&#123;m=0&#125;<span class="built_in">^</span><span class="keyword">\infty</span> <span class="keyword">\frac</span>&#123;(-1)<span class="built_in">^</span>m&#125;&#123;m! <span class="keyword">\Gamma</span> (m + <span class="keyword">\alpha</span> + 1)&#125; &#123;<span class="keyword">\left</span>(&#123; <span class="keyword">\frac</span>&#123;x&#125;&#123;2&#125; &#125;<span class="keyword">\right</span>)&#125;<span class="built_in">^</span>&#123;2m + <span class="keyword">\alpha</span>&#125; <span class="keyword">\text</span> &#123;，行内公式示例&#125; <span class="built_in">$</span></span><br></pre></td></tr></table></figure><p>独行公式显示效果：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><mi>y</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x=y+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.64444em;"></span><span class="strut bottom" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord mathit">x</span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mbin">+</span><span class="mord mathrm">1</span></span></span></span></span></p><p>示例：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line">x=y+1</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><h2 id="角标上下标等"><a class="markdownIt-Anchor" href="#角标上下标等"></a> 角标（上下标等）</h2><table><thead><tr><th>公式/符号</th><th>显示效果</th><th>语法</th><th>示例</th></tr></thead><tbody><tr><td>上标符号</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mi>m</mi></msup></mrow><annotation encoding="application/x-tex">x^m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.664392em;"></span><span class="strut bottom" style="height:0.664392em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">m</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></td><td>^</td><td>$x^m$</td></tr><tr><td>下标符号</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></td><td>_</td><td>$x_1$</td></tr><tr><td>组合符号</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mrow><mi>m</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_{mn}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">m</span><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></td><td>{ }</td><td>$x_{mn}$</td></tr><tr><td>左右上下标</td><td>$ \sideset{<sup>1_2}{</sup>3_4}\bigotimes $</td><td>\sideset{^左上标_左下标}{^右上标_右下标}</td><td>$ \sideset{<sup>1_2}{</sup>3_4}\bigotimes $</td></tr></tbody></table><h2 id="汉字与格式"><a class="markdownIt-Anchor" href="#汉字与格式"></a> 汉字与格式</h2><table><thead><tr><th>公式/符号</th><th>显示效果</th><th>语法</th><th>示例</th></tr></thead><tbody><tr><td>汉字形式</td><td>V_{\mbox{初始}}</td><td>\mbox{}</td><td>$V_{\mbox{初始}}$</td></tr><tr><td>普通</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi>x</mi><mo>+</mo><mi>y</mi></mrow><mrow><mi>y</mi><mo>+</mo><mi>z</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{x+y}{y+z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.854439em;"></span><span class="strut bottom" style="height:1.335547em;vertical-align:-0.481108em;"></span><span class="base textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.44610799999999995em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></td><td></td><td>$\frac{x+y}{y+z}$</td></tr><tr><td>字体控制</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle scriptlevel="0" displaystyle="true"><mfrac><mrow><mi>x</mi><mo>+</mo><mi>y</mi></mrow><mrow><mi>y</mi><mo>+</mo><mi>z</mi></mrow></mfrac></mstyle></mrow><annotation encoding="application/x-tex">\displaystyle \frac{x+y}{y+z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.2603300000000002em;"></span><span class="strut bottom" style="height:2.1407700000000003em;vertical-align:-0.8804400000000001em;"></span><span class="base textstyle uncramped"><span class="reset-textstyle displaystyle textstyle uncramped"><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.6860000000000002em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span></td><td>\displaystyle</td><td>$\displaystyle \frac{x+y}{y+z}$</td></tr><tr><td>下划线</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munder accentunder="true"><mrow><mi>x</mi><mo>+</mo><mi>y</mi></mrow><mo stretchy="true">‾</mo></munder></mrow><annotation encoding="application/x-tex">\underline {x+y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.5833299999999999em;"></span><span class="strut bottom" style="height:0.97777em;vertical-align:-0.3944400000000001em;"></span><span class="base textstyle uncramped"><span class="underline mord"><span class="vlist"><span style="top:0.35444000000000014em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="reset-textstyle textstyle uncramped underline-line"></span></span><span style="top:1.6653345369377348e-16em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span>​</span></span></span></span></span></span></td><td>\underline</td><td>$\underline {x+y}$</td></tr><tr><td>上大括号</td><td>\overbrace{a+b+c+d}^{2.0}</td><td>\overbrace{算式}</td><td>$\overbrace{a+b+c+d}^{2.0}$</td></tr><tr><td>下大括号</td><td>a+\underbrace{b+c}_{1.0}+d</td><td>\underbrace{算式}</td><td>$a+\underbrace{b+c}_{1.0}+d$</td></tr><tr><td>上位符号</td><td>\vec{x}\stackrel{\mathrm{def}}{=}{x_1,\dots,x_n}</td><td>\stackrel{上位符号}{基位符号}</td><td>$\vec{x}\stackrel{\mathrm{def}}{=}{x_1,\dots,x_n}$</td></tr></tbody></table><p>标签，语法：算式 \tag{数字}，显示效果如下：</p>x+y \tag{10}<h2 id="占位符"><a class="markdownIt-Anchor" href="#占位符"></a> 占位符</h2><table><thead><tr><th>公式/符号</th><th>显示效果</th><th>语法</th><th>示例</th></tr></thead><tbody><tr><td>正常</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">xy</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td></td><td>$xy$</td></tr><tr><td>紧贴</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mspace width="-0.16667em"></mspace><mi>y</mi></mrow><annotation encoding="application/x-tex">x\!y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mord mspace negativethinspace"></span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\!</td><td>$x!y$</td></tr><tr><td>小空格</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mspace width="0.16667em"></mspace><mi>y</mi></mrow><annotation encoding="application/x-tex">x\,y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mord mspace thinspace"></span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\,</td><td>$x,y$</td></tr><tr><td>中空格</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mspace width="0.22222em"></mspace><mi>y</mi></mrow><annotation encoding="application/x-tex">x \: y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mord mspace mediumspace"></span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\:</td><td>$x:y$</td></tr><tr><td>大空格</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mtext> </mtext><mi>y</mi></mrow><annotation encoding="application/x-tex">x \ y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mord mspace"> </span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\</td><td>$x \ y$</td></tr><tr><td>quad空格</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mspace width="1em"></mspace><mi>y</mi></mrow><annotation encoding="application/x-tex">x\quad y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mord mspace quad"></span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\quad</td><td>$x\quad y$</td></tr><tr><td>两个quad空格</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mspace width="2em"></mspace><mi>y</mi></mrow><annotation encoding="application/x-tex">x\qquad y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mord mspace qquad"></span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\qquad</td><td>$x\qquad y$</td></tr></tbody></table><h2 id="定界符与组合"><a class="markdownIt-Anchor" href="#定界符与组合"></a> 定界符与组合</h2><table><thead><tr><th>公式/符号</th><th>显示效果</th><th>语法</th><th>示例</th></tr></thead><tbody><tr><td>括号</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>x</mi><mo>)</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">(x)y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mopen">(</span><span class="mord mathit">x</span><span class="mclose">)</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>()</td><td>$(x)y$</td></tr><tr><td>中-括号</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="false">(</mo><mi>x</mi><mo fence="false">)</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">\big(x \big) y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.85em;"></span><span class="strut bottom" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">(</span></span></span><span class="mord mathit">x</span><span class="mord"><span class="style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size1">)</span></span></span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\big( \big) 其他符号以此类推</td><td>$\big(x \big) y$</td></tr><tr><td>大-括号</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="false">(</mo><mi>x</mi><mo fence="false">)</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">\Big(x \Big) y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.15em;"></span><span class="strut bottom" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size2">(</span></span></span><span class="mord mathit">x</span><span class="mord"><span class="style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size2">)</span></span></span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\Big( \Big) 其他符号以此类推</td><td>$\Big(x \Big) y$</td></tr><tr><td>加大-括号</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="false">(</mo><mi>x</mi><mo fence="false">)</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">\bigg(x \bigg)y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.45em;"></span><span class="strut bottom" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size3">(</span></span></span><span class="mord mathit">x</span><span class="mord"><span class="style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size3">)</span></span></span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\bigg( \bigg) 其他符号以此类推</td><td>$\bigg(x \bigg)y$</td></tr><tr><td>特大-括号</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="false">(</mo><mi>x</mi><mo fence="false">)</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">\Bigg( x \Bigg) y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.75em;"></span><span class="strut bottom" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size4">(</span></span></span><span class="mord mathit">x</span><span class="mord"><span class="style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing size4">)</span></span></span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\Bigg( \Bigg) 其他符号以此类推</td><td>$\Bigg( x \Bigg) y$</td></tr><tr><td>中括号</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>[</mo><mi>x</mi><mo>]</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">[x]y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mopen">[</span><span class="mord mathit">x</span><span class="mclose">]</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>[]</td><td>$[x]y$</td></tr><tr><td>大括号</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>{</mo><mi>x</mi><mo>}</mo><mo>+</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">\{x\}+y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mopen">{</span><span class="mord mathit">x</span><span class="mclose">}</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\{ \}</td><td>${x}+y$</td></tr><tr><td>自适应括号</td><td>$\left( x \right) y $</td><td>\left( \right)</td><td>$\left( x \right) y $</td></tr><tr><td>括号组合公式</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><mrow><mi>k</mi></mrow></mfrac><mo fence="true">)</mo></mrow></mrow><mo>=</mo><mrow><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mrow><mi>n</mi></mrow><mrow><mi>k</mi></mrow></mfrac><mo fence="true">)</mo></mrow></mrow><mo>+</mo><mrow><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mrow><mi>n</mi></mrow><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></mfrac><mo fence="true">)</mo></mrow></mrow></mrow><annotation encoding="application/x-tex">{n+1 \choose k} = {n \choose k} + {n \choose k-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8951079999999999em;"></span><span class="strut bottom" style="height:1.298439em;vertical-align:-0.403331em;"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-0.44399999999999995em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">n</span><span class="mbin">+</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span><span class="mrel">=</span><span class="mord textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-0.44399999999999995em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span><span class="mbin">+</span><span class="mord textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.44400000000000006em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></span></td><td>{上位公式 \choose 下位公式}</td><td>${n+1 \choose k} = {n \choose k} + {n \choose k-1}$</td></tr><tr><td>组合公式</td><td>${\sum_{k_0, K-1,\ldots&gt;0 \atop k_0+k_1+\cdots=n} A_{k_0} A_{k_1} \cdots} $</td><td>{上位公式 \atop 下位公式}</td><td>${\sum_{k_0, K-1,\ldots&gt;0 \atop k_0+k_1+\cdots=n} A_{k_0} A_{k_1} \cdots} $</td></tr><tr><td>括号组合公式</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><mrow><mi>k</mi></mrow></mfrac><mo fence="true">)</mo></mrow></mrow><mo>=</mo><mrow><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mrow><mi>n</mi></mrow><mrow><mi>k</mi></mrow></mfrac><mo fence="true">)</mo></mrow></mrow><mo>+</mo><mrow><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mrow><mi>n</mi></mrow><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></mfrac><mo fence="true">)</mo></mrow></mrow></mrow><annotation encoding="application/x-tex">{n+1 \choose k} = {n \choose k} + {n \choose k-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8951079999999999em;"></span><span class="strut bottom" style="height:1.298439em;vertical-align:-0.403331em;"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-0.44399999999999995em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">n</span><span class="mbin">+</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span><span class="mrel">=</span><span class="mord textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-0.44399999999999995em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span><span class="mbin">+</span><span class="mord textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.44400000000000006em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></span></td><td>{上位公式 \choose 下位公式}</td><td>${n+1 \choose k} = {n \choose k} + {n \choose k-1}$</td></tr><tr><td>分段函数</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>:</mo><mrow><mo fence="true">{</mo><mtable><mtr><mtd><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>=</mo><mn>1</mn></mrow></mtd></mtr><mtr><mtd><mrow><mi>x</mi><mo>−</mo><mi>y</mi><mo>=</mo><mn>0</mn></mrow></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">y :\begin{cases} x+y=1\\ x-y = 0 \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.75em;"></span><span class="strut bottom" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">:</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist"><span style="top:-0.6819999999999999em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span><span style="top:0.7579999999999999em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">−</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">=</span><span class="mord mathrm">0</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></td><td><code>\begin&#123;cases&#125;</code>和<code>\end&#123;cases&#125;</code>来构造分段函数，中间则用<code>\\</code>来分段</td><td>$y :\begin{cases} x+y=1\ x-y = 0 \end{cases}$</td></tr><tr><td>左下角</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>└</mo></mrow><annotation encoding="application/x-tex">\llcorner</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.37788em;"></span><span class="strut bottom" style="height:0.37788em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mopen amsrm">└</span></span></span></span></td><td>\llcorner</td><td>$\llcorner$</td></tr><tr><td>右下角</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>┘</mo></mrow><annotation encoding="application/x-tex">\lrcorner</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.37788em;"></span><span class="strut bottom" style="height:0.37788em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mclose amsrm">┘</span></span></span></span></td><td>\lrcorner</td><td>$\lrcorner$</td></tr><tr><td>左上角</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>┌</mo></mrow><annotation encoding="application/x-tex">\ulcorner</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69224em;"></span><span class="strut bottom" style="height:0.69224em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mopen amsrm">┌</span></span></span></span></td><td>\ulcorner</td><td>$\ulcorner$</td></tr><tr><td>右上角</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>┐</mo></mrow><annotation encoding="application/x-tex">\urcorner</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69224em;"></span><span class="strut bottom" style="height:0.69224em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mclose amsrm">┐</span></span></span></span></td><td>\urcorner</td><td>$\urcorner$</td></tr></tbody></table><h2 id="四则运算"><a class="markdownIt-Anchor" href="#四则运算"></a> 四则运算</h2><table><thead><tr><th>公式/符号</th><th>显示效果</th><th>语法</th><th>示例</th></tr></thead><tbody><tr><td>加法运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>=</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">x+y=z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.58333em;"></span><span class="strut bottom" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span></td><td>+</td><td>$x+y=z$</td></tr><tr><td>减法运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>−</mo><mi>y</mi><mo>=</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">x - y = z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.58333em;"></span><span class="strut bottom" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">−</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span></td><td>-</td><td>$x - y = z$</td></tr><tr><td>加减运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>±</mo><mi>y</mi><mo>=</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">x \pm y=z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.58333em;"></span><span class="strut bottom" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">±</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span></td><td>\pm</td><td>$x \pm y=z$</td></tr><tr><td>减加运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>∓</mo><mi>y</mi><mo>=</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">x \mp y=z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.58333em;"></span><span class="strut bottom" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">∓</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span></td><td>\mp</td><td>$x \mp y=z$</td></tr><tr><td>乘法运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>×</mo><mi>y</mi><mo>=</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">x \times y=z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.58333em;"></span><span class="strut bottom" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">×</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span></td><td>\times</td><td>$x \times y=z$</td></tr><tr><td>点乘运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>⋅</mo><mi>y</mi><mo>=</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">x \cdot y = z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.44445em;"></span><span class="strut bottom" style="height:0.63889em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">⋅</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span></td><td>\cdot</td><td>$x \cdot y = z$</td></tr><tr><td>除法运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>÷</mo><mi>y</mi><mo>=</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">x \div y = z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.58333em;"></span><span class="strut bottom" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">÷</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span></td><td>\div</td><td>$x \div y = z$</td></tr><tr><td>斜杠除法运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mi mathvariant="normal">/</mi><mi>y</mi><mo>=</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">x / y =z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mord mathrm">/</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span></td><td>/</td><td>$x / y =z$</td></tr><tr><td>分式表示</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi>x</mi></mrow><mrow><mi>y</mi></mrow></mfrac><mo>=</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">\frac{x}{y} = z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.695392em;"></span><span class="strut bottom" style="height:1.1764999999999999em;vertical-align:-0.481108em;"></span><span class="base textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">x</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span></td><td>\frac{分子}{分母}</td><td>$\frac{x}{y} = z$</td></tr><tr><td>分式表示</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi>x</mi></mrow><mrow><mrow><mi>y</mi></mrow><mi>z</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">{x}\over{y} z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.695392em;"></span><span class="strut bottom" style="height:1.1764999999999999em;vertical-align:-0.481108em;"></span><span class="base textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03588em;">y</span></span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">x</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></td><td>{分子} \voer {分母}</td><td>${x}\over{y} z$</td></tr><tr><td>绝对值表示</td><td>$</td><td>x+y</td><td>$</td></tr></tbody></table><h2 id="高级运算"><a class="markdownIt-Anchor" href="#高级运算"></a> 高级运算</h2><table><thead><tr><th>公式/符号</th><th>显示效果</th><th>语法</th><th>示例</th></tr></thead><tbody><tr><td>平均数运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>x</mi><mi>y</mi><mi>z</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{xyz}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.63056em;"></span><span class="strut bottom" style="height:0.825em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="overline mord"><span class="vlist"><span style="top:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">x</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span><span style="top:-0.5505599999999999em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="reset-textstyle textstyle uncramped overline-line"></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span>​</span></span></span></span></span></span></td><td>\overline</td><td>$\overline{xyz}$</td></tr><tr><td>开平方运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msqrt><mi>x</mi></msqrt></mrow><annotation encoding="application/x-tex">\sqrt x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8002800000000001em;"></span><span class="strut bottom" style="height:1.04em;vertical-align:-0.23972em;"></span><span class="base textstyle uncramped"><span class="sqrt mord"><span class="sqrt-sign" style="top:0.03971999999999998em;"><span class="style-wrap reset-textstyle textstyle uncramped">√</span></span><span class="vlist"><span style="top:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord mathit">x</span></span><span style="top:-0.72028em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span>​</span></span></span></span></span></span></td><td>\sqrt</td><td>$\sqrt x$</td></tr><tr><td>开方（根式）运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mroot><mrow><mi>x</mi><mo>+</mo><mi>y</mi></mrow><mrow><mn>5</mn></mrow></mroot></mrow><annotation encoding="application/x-tex">\sqrt[5]{x+y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.7794450000000002em;"></span><span class="strut bottom" style="height:1.0400000000000003em;vertical-align:-0.26055500000000004em;"></span><span class="base textstyle uncramped"><span class="sqrt mord"><span class="root"><span class="vlist"><span style="top:-0.31133400000000006em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptscriptstyle uncramped"><span class="mord scriptscriptstyle uncramped"><span class="mord mathrm">5</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sqrt-sign" style="top:0.060555000000000025em;"><span class="style-wrap reset-textstyle textstyle uncramped">√</span></span><span class="vlist"><span style="top:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span><span style="top:-0.6994450000000001em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span>​</span></span></span></span></span></span></td><td>\sqrt[开方数]{被开放数}</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mroot><mrow><mi>x</mi><mo>+</mo><mi>y</mi></mrow><mrow><mn>5</mn></mrow></mroot></mrow><annotation encoding="application/x-tex">\sqrt[5]{x+y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.7794450000000002em;"></span><span class="strut bottom" style="height:1.0400000000000003em;vertical-align:-0.26055500000000004em;"></span><span class="base textstyle uncramped"><span class="sqrt mord"><span class="root"><span class="vlist"><span style="top:-0.31133400000000006em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptscriptstyle uncramped"><span class="mord scriptscriptstyle uncramped"><span class="mord mathrm">5</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sqrt-sign" style="top:0.060555000000000025em;"><span class="style-wrap reset-textstyle textstyle uncramped">√</span></span><span class="vlist"><span style="top:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span><span style="top:-0.6994450000000001em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span>​</span></span></span></span></span></span></td></tr><tr><td>对数运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>log</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">\log(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathit">x</span><span class="mclose">)</span></span></span></span></td><td>\log</td><td>$\log(x)$</td></tr><tr><td>对数符号</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ln</mi></mrow><annotation encoding="application/x-tex">\ln</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mop">ln</span></span></span></span></td><td>\ln</td><td>$\ln$</td></tr><tr><td>对数符号</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>lg</mi></mrow><annotation encoding="application/x-tex">\lg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mop">l<span style="margin-right:0.01389em;">g</span></span></span></span></span></td><td>\lg</td><td>$\lg$</td></tr><tr><td>极限运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>lim</mi><mrow><mi>y</mi><mo>→</mo><mn>0</mn></mrow><mrow><mi>x</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></msubsup><mrow><mfrac><mrow><mi>x</mi></mrow><mrow><mi>y</mi></mrow></mfrac></mrow></mrow><annotation encoding="application/x-tex">\lim^{x \to \infty}_{y \to 0} {\frac{x}{y}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.695392em;"></span><span class="strut bottom" style="height:1.1764999999999999em;vertical-align:-0.481108em;"></span><span class="base textstyle uncramped"><span class="mop"><span class="mop">lim</span><span class="vlist"><span style="top:0.24810799999999997em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">→</span><span class="mord mathrm">0</span></span></span></span><span style="top:-0.36299999999999993em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">x</span><span class="mrel">→</span><span class="mord mathrm">∞</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">x</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span></td><td>\lim</td><td>$\lim^{x \to \infty}_{y \to 0} {\frac{x}{y}}$</td></tr><tr><td>极限运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle scriptlevel="0" displaystyle="true"><msubsup><mi>lim</mi><mrow><mi>y</mi><mo>→</mo><mn>0</mn></mrow><mrow><mi>x</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></msubsup><mrow><mfrac><mrow><mi>x</mi></mrow><mrow><mi>y</mi></mrow></mfrac></mrow></mstyle></mrow><annotation encoding="application/x-tex">\displaystyle \lim^{x \to \infty}_{y \to 0} {\frac{x}{y}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.2958319999999999em;"></span><span class="strut bottom" style="height:2.176272em;vertical-align:-0.8804400000000001em;"></span><span class="base textstyle uncramped"><span class="reset-textstyle displaystyle textstyle uncramped"><span class="mop op-limits"><span class="vlist"><span style="top:0.617108em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">→</span><span class="mord mathrm">0</span></span></span></span><span style="top:2.7755575615628914e-17em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span><span class="mop">lim</span></span></span><span style="top:-0.8944399999999999em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">x</span><span class="mrel">→</span><span class="mord mathrm">∞</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord displaystyle textstyle uncramped"><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.6860000000000002em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathit">x</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span></span></td><td>\displaystyle \lim</td><td>$\displaystyle \lim^{x \to \infty}_{y \to 0} {\frac{x}{y}}$</td></tr><tr><td>求和/累加运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>y</mi><mo>→</mo><mn>0</mn></mrow><mrow><mi>x</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></msubsup><mrow><mfrac><mrow><mi>x</mi></mrow><mrow><mi>y</mi></mrow></mfrac></mrow></mrow><annotation encoding="application/x-tex">\sum^{x \to \infty}_{y \to 0}{\frac{x}{y}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1.2311079999999999em;vertical-align:-0.481108em;"></span><span class="base textstyle uncramped"><span class="mop"><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">∑</span><span class="vlist"><span style="top:0.30001em;margin-left:0em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">→</span><span class="mord mathrm">0</span></span></span></span><span style="top:-0.364em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">x</span><span class="mrel">→</span><span class="mord mathrm">∞</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">x</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span></td><td>\sum</td><td>$\sum^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</td></tr><tr><td>求和/累加运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle scriptlevel="0" displaystyle="true"><msubsup><mo>∑</mo><mrow><mi>y</mi><mo>→</mo><mn>0</mn></mrow><mrow><mi>x</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></msubsup><mrow><mfrac><mrow><mi>x</mi></mrow><mrow><mi>y</mi></mrow></mfrac></mrow></mstyle></mrow><annotation encoding="application/x-tex">\displaystyle \sum^{x \to \infty}_{y \to 0}{\frac{x}{y}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.6513970000000002em;"></span><span class="strut bottom" style="height:3.0546180000000005em;vertical-align:-1.403221em;"></span><span class="base textstyle uncramped"><span class="reset-textstyle displaystyle textstyle uncramped"><span class="mop op-limits"><span class="vlist"><span style="top:1.167113em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">→</span><span class="mord mathrm">0</span></span></span></span><span style="top:-0.000005000000000032756em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span style="top:-1.250005em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">x</span><span class="mrel">→</span><span class="mord mathrm">∞</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord displaystyle textstyle uncramped"><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.6860000000000002em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathit">x</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span></span></td><td>\displaystyle \sum</td><td>$\displaystyle \sum^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</td></tr><tr><td>积分运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mn>0</mn></msubsup><mfrac><mrow><mn>1</mn></mrow><mrow><mi>x</mi></mrow></mfrac><mi>d</mi><mi>x</mi></mrow></mrow><annotation encoding="application/x-tex">{\int_{-\infty}^0\frac{1}{x}dx}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.870108em;"></span><span class="strut bottom" style="height:1.284559em;vertical-align:-0.414451em;"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mop"><span class="op-symbol small-op mop" style="margin-right:0.19445em;top:-0.0005599999999999772em;">∫</span><span class="vlist"><span style="top:0.35612em;margin-left:-0.19445em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord">−</span><span class="mord mathrm">∞</span></span></span></span><span style="top:-0.41900000000000004em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">0</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">x</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mord mathit">d</span><span class="mord mathit">x</span></span></span></span></span></td><td>\int</td><td>${\int_{-\infty}^0\frac{1}{x}dx}$</td></tr><tr><td>积分运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mstyle scriptlevel="0" displaystyle="true"><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mn>0</mn></msubsup><mfrac><mrow><mn>1</mn></mrow><mrow><mi>x</mi></mrow></mfrac><mi>d</mi><mi>x</mi></mstyle></mrow></mrow><annotation encoding="application/x-tex">{\displaystyle \int_{-\infty}^0\frac{1}{x}dx}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.4251079999999998em;"></span><span class="strut bottom" style="height:2.395689em;vertical-align:-0.970581em;"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="reset-textstyle displaystyle textstyle uncramped"><span class="mop"><span class="op-symbol large-op mop" style="margin-right:0.44445em;top:-0.0011249999999999316em;">∫</span><span class="vlist"><span style="top:0.91225em;margin-left:-0.44445em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord">−</span><span class="mord mathrm">∞</span></span></span></span><span style="top:-0.974em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">0</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord mathit">x</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mord mathit">d</span><span class="mord mathit">x</span></span></span></span></span></span></td><td>\displaystyle \int</td><td>${\displaystyle \int_{-\infty}^0\frac{1}{x}dx}$</td></tr><tr><td>双重积分运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∬</mo></mrow><annotation encoding="application/x-tex">\iint</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.805em;"></span><span class="strut bottom" style="height:1.111em;vertical-align:-0.306em;"></span><span class="base textstyle uncramped"><span class="op-symbol small-op mop" style="margin-right:0.19445em;top:-0.0004999999999999727em;">∬</span></span></span></span></td><td>\iint</td><td>$\iint$</td></tr><tr><td>三重积分运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∭</mo></mrow><annotation encoding="application/x-tex">\iiint</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.805em;"></span><span class="strut bottom" style="height:1.111em;vertical-align:-0.306em;"></span><span class="base textstyle uncramped"><span class="op-symbol small-op mop" style="margin-right:0.19445em;top:-0.0004999999999999727em;">∭</span></span></span></span></td><td>\iiint</td><td>$\iiint$</td></tr><tr><td>求导</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mi mathvariant="normal">′</mi></mrow><annotation encoding="application/x-tex">y\prime</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.55556em;"></span><span class="strut bottom" style="height:0.75em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mord mathrm">′</span></span></span></span></td><td>\prime</td><td>\prime</td></tr><tr><td>曲线积分</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∮</mo></mrow><annotation encoding="application/x-tex">\oint</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.805em;"></span><span class="strut bottom" style="height:1.11112em;vertical-align:-0.30612em;"></span><span class="base textstyle uncramped"><span class="op-symbol small-op mop" style="margin-right:0.19445em;top:-0.0005599999999999772em;">∮</span></span></span></span></td><td>\oint</td><td>$\oint$</td></tr><tr><td>微分运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial x}{\partial y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8801079999999999em;"></span><span class="strut bottom" style="height:1.3612159999999998em;vertical-align:-0.481108em;"></span><span class="base textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm" style="margin-right:0.05556em;">∂</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm" style="margin-right:0.05556em;">∂</span><span class="mord mathit">x</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></td><td>\partial</td><td>$\frac{\partial x}{\partial y}$</td></tr><tr><td>求积/累乘运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup></mrow><annotation encoding="application/x-tex">\prod^n_{i=0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1.0500099999999999em;vertical-align:-0.30001em;"></span><span class="base textstyle uncramped"><span class="mop"><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">∏</span><span class="vlist"><span style="top:0.30001em;margin-left:0em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mrel">=</span><span class="mord mathrm">0</span></span></span></span><span style="top:-0.364em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></td><td>\prod</td><td>$\prod^n_{i=0}$</td></tr><tr><td>求商/累除运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∐</mo></mrow><annotation encoding="application/x-tex">\coprod</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="base textstyle uncramped"><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">∐</span></span></span></span></td><td>\coprod</td><td>$\coprod$</td></tr></tbody></table><h2 id="三角函数"><a class="markdownIt-Anchor" href="#三角函数"></a> 三角函数</h2><table><thead><tr><th>公式/符号</th><th>显示效果</th><th>语法</th><th>示例</th></tr></thead><tbody><tr><td>垂直</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">⊥</mi></mrow><annotation encoding="application/x-tex">\bot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">⊥</span></span></span></span></td><td>\bot</td><td>$\bot$</td></tr><tr><td>角</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∠</mi></mrow><annotation encoding="application/x-tex">\angle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69224em;"></span><span class="strut bottom" style="height:0.69224em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">∠</span></span></span></span></td><td>\angle</td><td>$\angle$</td></tr><tr><td>测量</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∡</mi></mrow><annotation encoding="application/x-tex">\measuredangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0em;"></span><span class="strut bottom" style="height:0em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">∡</span></span></span></span></td><td>\measuredangle</td><td>$\measuredangle$</td></tr><tr><td>球面角</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∢</mi></mrow><annotation encoding="application/x-tex">\sphericalangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0em;"></span><span class="strut bottom" style="height:0em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">∢</span></span></span></span></td><td>\sphericalangle</td><td>$\sphericalangle$</td></tr><tr><td>三角</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">△</mi></mrow><annotation encoding="application/x-tex">\triangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">△</span></span></span></span></td><td>\triangle</td><td>$\triangle$</td></tr><tr><td>三角</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>△</mo></mrow><annotation encoding="application/x-tex">\vartriangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.54986em;"></span><span class="strut bottom" style="height:0.54986em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mrel amsrm">△</span></span></span></span></td><td>\vartriangle</td><td>$\vartriangle$</td></tr><tr><td>黑色三角</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">▲</mi></mrow><annotation encoding="application/x-tex">\blacktriangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0em;"></span><span class="strut bottom" style="height:0em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">▲</span></span></span></span></td><td>\blacktriangle</td><td>$\blacktriangle$</td></tr><tr><td>倒三角</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">▽</mi></mrow><annotation encoding="application/x-tex">\triangledown</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">▽</span></span></span></span></td><td>\triangledown</td><td>$\triangledown$</td></tr><tr><td>黑色倒三角</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">▼</mi></mrow><annotation encoding="application/x-tex">\blacktriangledown</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0em;"></span><span class="strut bottom" style="height:0em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">▼</span></span></span></span></td><td>\blacktriangledown</td><td>$\blacktriangledown$</td></tr><tr><td>正弦</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>sin</mi></mrow><annotation encoding="application/x-tex">\sin</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.66786em;"></span><span class="strut bottom" style="height:0.66786em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mop">sin</span></span></span></span></td><td>\sin</td><td>$\sin$</td></tr><tr><td>余弦</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>cos</mi></mrow><annotation encoding="application/x-tex">\cos</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mop">cos</span></span></span></span></td><td>\cos</td><td>$\cos$</td></tr><tr><td>正切</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>tan</mi></mrow><annotation encoding="application/x-tex">\tan</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.61508em;"></span><span class="strut bottom" style="height:0.61508em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mop">tan</span></span></span></span></td><td>\tan</td><td>$\tan$</td></tr><tr><td>余切</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>cot</mi></mrow><annotation encoding="application/x-tex">\cot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.61508em;"></span><span class="strut bottom" style="height:0.61508em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mop">cot</span></span></span></span></td><td>\cot</td><td>$\cot$</td></tr><tr><td>正割</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>sec</mi></mrow><annotation encoding="application/x-tex">\sec</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mop">sec</span></span></span></span></td><td>\sec</td><td>$\sec$</td></tr></tbody></table><h2 id="矩阵运算"><a class="markdownIt-Anchor" href="#矩阵运算"></a> 矩阵运算</h2><h4 id="不带括号矩阵"><a class="markdownIt-Anchor" href="#不带括号矩阵"></a> 不带括号矩阵</h4><p>显示效果</p>\begin{matrix}   1 & 2 & 3 \\   4 & 5 & 6 \\   7 & 8 & 9  \end{matrix} \tag{1} <p>示例</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line">  <span class="keyword">\begin</span>&#123;matrix&#125;</span><br><span class="line">   1 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 3 <span class="keyword">\\</span></span><br><span class="line">   4 <span class="built_in">&amp;</span> 5 <span class="built_in">&amp;</span> 6 <span class="keyword">\\</span></span><br><span class="line">   7 <span class="built_in">&amp;</span> 8 <span class="built_in">&amp;</span> 9</span><br><span class="line">  <span class="keyword">\end</span>&#123;matrix&#125; <span class="keyword">\tag</span>&#123;1&#125;</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><h4 id="带边框的矩阵"><a class="markdownIt-Anchor" href="#带边框的矩阵"></a> 带边框的矩阵</h4><p>两种方式</p><p>a. 替换matrix</p><p>在起始、结束标记用下列词替换 matrix</p><ul><li>pmatrix：小括号边框</li><li>bmatrix：中括号边框</li><li>Bmatrix：大括号边框</li><li>vmatrix：单竖线边框</li><li>Vmatrix：双竖线边框</li></ul><p>b. 使用left、right</p><p>在起始、结束标记外围增加</p><ul><li>\left、\right标签</li><li>\left(，\right): 小括号边框</li><li>\left[，\right]: 中括号边框</li><li>\left{，\right}: 大括号边框</li></ul><h5 id="大括号"><a class="markdownIt-Anchor" href="#大括号"></a> 大括号</h5><p>显示效果：</p>\begin{Bmatrix}1 & 2 & 3 \\4 & 5 & 6 \\7 & 8 & 9\end{Bmatrix} \tag{1}<p>示例：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;Bmatrix&#125;</span><br><span class="line">1 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 3 <span class="keyword">\\</span></span><br><span class="line">4 <span class="built_in">&amp;</span> 5 <span class="built_in">&amp;</span> 6 <span class="keyword">\\</span></span><br><span class="line">7 <span class="built_in">&amp;</span> 8 <span class="built_in">&amp;</span> 9</span><br><span class="line"><span class="keyword">\end</span>&#123;Bmatrix&#125; <span class="keyword">\tag</span>&#123;1&#125;</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\left</span><span class="keyword">\&#123;</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;matrix&#125;</span><br><span class="line">1 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 3 <span class="keyword">\\</span></span><br><span class="line">4 <span class="built_in">&amp;</span> 5 <span class="built_in">&amp;</span> 6 <span class="keyword">\\</span></span><br><span class="line">7 <span class="built_in">&amp;</span> 8 <span class="built_in">&amp;</span> 9</span><br><span class="line"><span class="keyword">\end</span>&#123;matrix&#125;</span><br><span class="line"><span class="keyword">\right</span><span class="keyword">\&#125;</span> <span class="keyword">\tag</span>&#123;1&#125;</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><h5 id="中括号"><a class="markdownIt-Anchor" href="#中括号"></a> 中括号</h5><p>显示效果：</p>\left[\begin{matrix}1 & 2 & 3 \\4 & 5 & 6 \\7 & 8 & 9\end{matrix}\right] \tag{2}<p>示例：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\left</span>[</span><br><span class="line"><span class="keyword">\begin</span>&#123;matrix&#125;</span><br><span class="line">1 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 3 <span class="keyword">\\</span></span><br><span class="line">4 <span class="built_in">&amp;</span> 5 <span class="built_in">&amp;</span> 6 <span class="keyword">\\</span></span><br><span class="line">7 <span class="built_in">&amp;</span> 8 <span class="built_in">&amp;</span> 9</span><br><span class="line"><span class="keyword">\end</span>&#123;matrix&#125;</span><br><span class="line"><span class="keyword">\right</span>] <span class="keyword">\tag</span>&#123;2&#125;</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><p>或：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;bmatrix&#125;</span><br><span class="line">1 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 3 <span class="keyword">\\</span></span><br><span class="line">4 <span class="built_in">&amp;</span> 5 <span class="built_in">&amp;</span> 6 <span class="keyword">\\</span></span><br><span class="line">7 <span class="built_in">&amp;</span> 8 <span class="built_in">&amp;</span> 9</span><br><span class="line"><span class="keyword">\end</span>&#123;bmatrix&#125; <span class="keyword">\tag</span>&#123;2&#125;</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><h5 id="小括号"><a class="markdownIt-Anchor" href="#小括号"></a> 小括号</h5><p>显示效果：</p>\left(\begin{matrix}1 & 2 & 3 \\4 & 5 & 6 \\7 & 8 & 9\end{matrix}\right) \tag{3}<p>示例：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\left</span>(</span><br><span class="line"><span class="keyword">\begin</span>&#123;matrix&#125;</span><br><span class="line">1 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 3 <span class="keyword">\\</span></span><br><span class="line">4 <span class="built_in">&amp;</span> 5 <span class="built_in">&amp;</span> 6 <span class="keyword">\\</span></span><br><span class="line">7 <span class="built_in">&amp;</span> 8 <span class="built_in">&amp;</span> 9</span><br><span class="line"><span class="keyword">\end</span>&#123;matrix&#125;</span><br><span class="line"><span class="keyword">\right</span>) <span class="keyword">\tag</span>&#123;3&#125;</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><p>或：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;pmatrix&#125;</span><br><span class="line">1 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 3 <span class="keyword">\\</span></span><br><span class="line">4 <span class="built_in">&amp;</span> 5 <span class="built_in">&amp;</span> 6 <span class="keyword">\\</span></span><br><span class="line">7 <span class="built_in">&amp;</span> 8 <span class="built_in">&amp;</span> 9</span><br><span class="line"><span class="keyword">\end</span>&#123;pmatrix&#125; <span class="keyword">\tag</span>&#123;3&#125;</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><h5 id="竖线"><a class="markdownIt-Anchor" href="#竖线"></a> 竖线</h5><p>显示效果：</p>\left|\begin{matrix}1 & 2 & 3 \\4 & 5 & 6 \\7 & 8 & 9\end{matrix}\right| \tag{4}<p>示例：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\left</span>|</span><br><span class="line"><span class="keyword">\begin</span>&#123;matrix&#125;</span><br><span class="line">1 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 3 <span class="keyword">\\</span></span><br><span class="line">4 <span class="built_in">&amp;</span> 5 <span class="built_in">&amp;</span> 6 <span class="keyword">\\</span></span><br><span class="line">7 <span class="built_in">&amp;</span> 8 <span class="built_in">&amp;</span> 9</span><br><span class="line"><span class="keyword">\end</span>&#123;matrix&#125;</span><br><span class="line"><span class="keyword">\right</span>| <span class="keyword">\tag</span>&#123;4&#125;</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;vmatrix&#125;</span><br><span class="line">1 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 3 <span class="keyword">\\</span></span><br><span class="line">4 <span class="built_in">&amp;</span> 5 <span class="built_in">&amp;</span> 6 <span class="keyword">\\</span></span><br><span class="line">7 <span class="built_in">&amp;</span> 8 <span class="built_in">&amp;</span> 9</span><br><span class="line"><span class="keyword">\end</span>&#123;vmatrix&#125; <span class="keyword">\tag</span>&#123;4&#125;</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><h4 id="省略元素"><a class="markdownIt-Anchor" href="#省略元素"></a> 省略元素</h4><ul><li>横省略号：<code>\cdots</code></li><li>竖省略号：<code>\vdots</code></li><li>斜省略号：<code>\ddots</code></li></ul><p>显示效果：</p>\begin{bmatrix}{a_{11}}&{a_{12}}&{\cdots}&{a_{1n}}\\{a_{21}}&{a_{22}}&{\cdots}&{a_{2n}}\\{\vdots}&{\vdots}&{\ddots}&{\vdots}\\{a_{m1}}&{a_{m2}}&{\cdots}&{a_{mn}}\\\end{bmatrix} \tag{5}<p>示例：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;bmatrix&#125;</span><br><span class="line">&#123;a<span class="built_in">_</span>&#123;11&#125;&#125;<span class="built_in">&amp;</span>&#123;a<span class="built_in">_</span>&#123;12&#125;&#125;<span class="built_in">&amp;</span>&#123;<span class="keyword">\cdots</span>&#125;<span class="built_in">&amp;</span>&#123;a<span class="built_in">_</span>&#123;1n&#125;&#125;<span class="keyword">\\</span></span><br><span class="line">&#123;a<span class="built_in">_</span>&#123;21&#125;&#125;<span class="built_in">&amp;</span>&#123;a<span class="built_in">_</span>&#123;22&#125;&#125;<span class="built_in">&amp;</span>&#123;<span class="keyword">\cdots</span>&#125;<span class="built_in">&amp;</span>&#123;a<span class="built_in">_</span>&#123;2n&#125;&#125;<span class="keyword">\\</span></span><br><span class="line">&#123;<span class="keyword">\vdots</span>&#125;<span class="built_in">&amp;</span>&#123;<span class="keyword">\vdots</span>&#125;<span class="built_in">&amp;</span>&#123;<span class="keyword">\ddots</span>&#125;<span class="built_in">&amp;</span>&#123;<span class="keyword">\vdots</span>&#125;<span class="keyword">\\</span></span><br><span class="line">&#123;a<span class="built_in">_</span>&#123;m1&#125;&#125;<span class="built_in">&amp;</span>&#123;a<span class="built_in">_</span>&#123;m2&#125;&#125;<span class="built_in">&amp;</span>&#123;<span class="keyword">\cdots</span>&#125;<span class="built_in">&amp;</span>&#123;a<span class="built_in">_</span>&#123;mn&#125;&#125;<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\end</span>&#123;bmatrix&#125; <span class="keyword">\tag</span>&#123;5&#125;</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><h4 id="带参数的矩阵"><a class="markdownIt-Anchor" href="#带参数的矩阵"></a> 带参数的矩阵</h4><ul><li>需要array环境：起始、结束处以{array}声明</li><li>对齐方式：在{array}后以{}逐行统一声明</li><li>左对齐：<code>l</code>；居中：<code>c</code>；右对齐：<code>r</code></li><li>竖直线：在声明对齐方式时，插入 <code>|</code> 建立竖直线</li><li>插入水平线：<code>\hline</code></li></ul><h5 id="简表"><a class="markdownIt-Anchor" href="#简表"></a> 简表</h5><p>显示效果：</p>\begin{array}{c|lll}{↓}&{a}&{b}&{c}\\\hline{R_1}&{c}&{b}&{a}\\{R_2}&{b}&{c}&{c}\\\end{array} \tag{6}<p>示例：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;array&#125;&#123;c|lll&#125;</span><br><span class="line">&#123;↓&#125;<span class="built_in">&amp;</span>&#123;a&#125;<span class="built_in">&amp;</span>&#123;b&#125;<span class="built_in">&amp;</span>&#123;c&#125;<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line">&#123;R<span class="built_in">_</span>1&#125;<span class="built_in">&amp;</span>&#123;c&#125;<span class="built_in">&amp;</span>&#123;b&#125;<span class="built_in">&amp;</span>&#123;a&#125;<span class="keyword">\\</span></span><br><span class="line">&#123;R<span class="built_in">_</span>2&#125;<span class="built_in">&amp;</span>&#123;b&#125;<span class="built_in">&amp;</span>&#123;c&#125;<span class="built_in">&amp;</span>&#123;c&#125;<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\end</span>&#123;array&#125; <span class="keyword">\tag</span>&#123;6&#125;</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><h5 id="强调某列"><a class="markdownIt-Anchor" href="#强调某列"></a> 强调某列</h5><p>显示效果：</p>\left[\begin{array}{cc|c}1 & 2 & 3 \\4 & 5 & 6\end{array}\right] \tag{7}<p>示例：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span> </span><br><span class="line"><span class="keyword">\left</span>[</span><br><span class="line"><span class="keyword">\begin</span>&#123;array&#125;&#123;cc|c&#125;</span><br><span class="line">1 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 3 <span class="keyword">\\</span></span><br><span class="line">4 <span class="built_in">&amp;</span> 5 <span class="built_in">&amp;</span> 6</span><br><span class="line"><span class="keyword">\end</span>&#123;array&#125;</span><br><span class="line"><span class="keyword">\right</span>] <span class="keyword">\tag</span>&#123;7&#125;</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="方程组"><a class="markdownIt-Anchor" href="#方程组"></a> 方程组</h4><p>显示效果：</p>\begin{cases}a_1x+b_1y+c_1z=d_1\\a_2x+b_2y+c_2z=d_2\\a_3x+b_3y+c_3z=d_3\\\end{cases} \tag{8}<p>示例：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;cases&#125;</span><br><span class="line">a<span class="built_in">_</span>1x+b<span class="built_in">_</span>1y+c<span class="built_in">_</span>1z=d<span class="built_in">_</span>1<span class="keyword">\\</span></span><br><span class="line">a<span class="built_in">_</span>2x+b<span class="built_in">_</span>2y+c<span class="built_in">_</span>2z=d<span class="built_in">_</span>2<span class="keyword">\\</span></span><br><span class="line">a<span class="built_in">_</span>3x+b<span class="built_in">_</span>3y+c<span class="built_in">_</span>3z=d<span class="built_in">_</span>3<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\end</span>&#123;cases&#125; <span class="keyword">\tag</span>&#123;8&#125;</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><h2 id="逻辑运算"><a class="markdownIt-Anchor" href="#逻辑运算"></a> 逻辑运算</h2><table><thead><tr><th>公式/符号</th><th>显示效果</th><th>语法</th><th>示例</th></tr></thead><tbody><tr><td>等于</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>=</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">x+y=z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.58333em;"></span><span class="strut bottom" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span></td><td>=</td><td>$x + y = z$</td></tr><tr><td>大于</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>&gt;</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">x + y &gt; z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.58333em;"></span><span class="strut bottom" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">&gt;</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span></td><td>&gt;</td><td>$x + y &gt; z$</td></tr><tr><td>小于</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>&lt;</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">x + y &lt; z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.58333em;"></span><span class="strut bottom" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">&lt;</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span></td><td>&lt;</td><td>$x + y &lt; z$</td></tr><tr><td>大于等于</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>≥</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">x + y \geq z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.63597em;"></span><span class="strut bottom" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">≥</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span></td><td>\geq</td><td>$x + y \geq z$</td></tr><tr><td>小于等于</td><td>$ x+y \leq z$</td><td>\leq</td><td>$ x+y \leq z$</td></tr><tr><td>不等于</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>≠</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">x+y \neq z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.716em;"></span><span class="strut bottom" style="height:0.9309999999999999em;vertical-align:-0.215em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">≠</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span></td><td>\neq</td><td>$x+y \neq z$</td></tr><tr><td>不大于 等于</td><td>x + y \not\geq z</td><td>\not\geq 或者  \ngeq</td><td>$x + y \not\geq z$</td></tr><tr><td>不小于 等于</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>≰</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">x + y \nleq z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.79383em;"></span><span class="strut bottom" style="height:1.09657em;vertical-align:-0.30274em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel amsrm">≰</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span></td><td>\not\leq 或者 \nleq</td><td>$x + y \nleq z$</td></tr><tr><td>约等于</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>≈</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">x+y \approx z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.58333em;"></span><span class="strut bottom" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">≈</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span></td><td>\approx</td><td>$x+y \approx z$</td></tr><tr><td>恒定等于</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>≡</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">x + y \equiv z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.58333em;"></span><span class="strut bottom" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">≡</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span></td><td>\equiv</td><td>$x + y \equiv z$</td></tr></tbody></table><h2 id="集合运算"><a class="markdownIt-Anchor" href="#集合运算"></a> 集合运算</h2><table><thead><tr><th>公式/符号</th><th>显示效果</th><th>语法</th><th>示例</th></tr></thead><tbody><tr><td>属于</td><td>$ x \in y$</td><td>\in</td><td>$ x \in y$</td></tr><tr><td>不属于</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>∉</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \notin y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mrel">∉</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\not \in 或 \notin</td><td>$x \notin y$</td></tr><tr><td>子集</td><td>$ x \subset y$</td><td>\subset</td><td>$ x \subset y$</td></tr><tr><td>子集</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>⊃</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \supset y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.5391em;"></span><span class="strut bottom" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mrel">⊃</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\supset</td><td>$x \supset y$</td></tr><tr><td>真子集</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>⊆</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \subseteq y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.63597em;"></span><span class="strut bottom" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mrel">⊆</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\subseteq</td><td>$x \subseteq y$</td></tr><tr><td>真子集</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>⊇</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \supseteq y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.63597em;"></span><span class="strut bottom" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mrel">⊇</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\supseteq</td><td>$x \supseteq y$</td></tr><tr><td>非真子集</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>⊊</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \subsetneq y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.63597em;"></span><span class="strut bottom" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mrel amsrm">⊊</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\subsetneq</td><td>$x \subsetneq y$</td></tr><tr><td>非真子集</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>⊋</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \supsetneq y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.63597em;"></span><span class="strut bottom" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mrel amsrm">⊋</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\supsetneq</td><td>$x \supsetneq y$</td></tr><tr><td>并集</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>∪</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \cup y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.55556em;"></span><span class="strut bottom" style="height:0.75em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">∪</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\cup</td><td>$x \cup y$</td></tr><tr><td>交集</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>∩</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \cap y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.55556em;"></span><span class="strut bottom" style="height:0.75em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">∩</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\cap</td><td>$x \cap y$</td></tr><tr><td>差集</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>∖</mo><mi>s</mi></mrow><annotation encoding="application/x-tex">x \setminus s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">∖</span><span class="mord mathit">s</span></span></span></span></td><td>\setminus</td><td>$x \setminus s$</td></tr><tr><td>逻辑或</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>⋁</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \bigvee y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">⋁</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\bigvee</td><td>$x \bigvee y$</td></tr><tr><td>小的逻辑或</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>∨</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \vee y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.55556em;"></span><span class="strut bottom" style="height:0.75em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">∨</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\vee</td><td>$x \vee y$</td></tr><tr><td>逻辑与</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>⋀</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \bigwedge y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">⋀</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\bigwedge</td><td>$x \bigwedge y$</td></tr><tr><td>小的逻辑与</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>∧</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \wedge y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.55556em;"></span><span class="strut bottom" style="height:0.75em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">∧</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\wedge</td><td>$x \wedge y$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>⊔</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \sqcup y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.55556em;"></span><span class="strut bottom" style="height:0.75em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">⊔</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\sqcup</td><td>$x \sqcup y$</td></tr><tr><td>同或运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>⨀</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \bigodot y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">⨀</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\bigodot</td><td>$x \bigodot y$</td></tr><tr><td>小的同或运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>⊙</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \odot y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.58333em;"></span><span class="strut bottom" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">⊙</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\odot</td><td>$x \odot y$</td></tr><tr><td>同与运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>⨂</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \bigotimes y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">⨂</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\bigotimes</td><td>$x \bigotimes y$</td></tr><tr><td>小的同与运算</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>⊗</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \otimes y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.58333em;"></span><span class="strut bottom" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">⊗</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\otimes</td><td>$x \otimes y$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>⊕</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \oplus y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.58333em;"></span><span class="strut bottom" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mbin">⊕</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\oplus</td><td>$x \oplus y$</td></tr><tr><td>实数集合</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="double-struck">R</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbb{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68889em;"></span><span class="strut bottom" style="height:0.68889em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathbb">R</span></span></span></span></span></td><td>\mathbb{R}</td><td>$\mathbb{R}$</td></tr><tr><td>自然数集合</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="double-struck">Z</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbb{Z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68889em;"></span><span class="strut bottom" style="height:0.68889em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathbb">Z</span></span></span></span></span></td><td>\mathbb{Z}</td><td>$\mathbb{Z}$</td></tr><tr><td>空集</td><td>$ \emptyset $</td><td>\emptyset</td><td>$ \emptyset $</td></tr></tbody></table><h2 id="数学符号"><a class="markdownIt-Anchor" href="#数学符号"></a> 数学符号</h2><table><thead><tr><th>公式/符号</th><th>显示效果</th><th>语法</th><th>示例</th></tr></thead><tbody><tr><td>无穷</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">∞</span></span></span></span></td><td>\infty</td><td>$\infty$</td></tr><tr><td>虚数</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ı</mi></mrow><annotation encoding="application/x-tex">\imath</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mainit">ı</span></span></span></span></td><td>\imath</td><td>$\imath$</td></tr><tr><td>虚数</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ȷ</mi></mrow><annotation encoding="application/x-tex">\jmath</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mainit">ȷ</span></span></span></span></td><td>\jmath</td><td>$\jmath$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi></mrow><annotation encoding="application/x-tex">\ell</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">ℓ</span></span></span></span></td><td>\ell</td><td>$\ell$</td></tr><tr><td>帽子符号</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>a</mi></mrow><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord accent"><span class="vlist"><span style="top:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">a</span></span></span><span style="top:0em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="accent-body"><span>^</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></td><td>\hat{算式}</td><td>$\hat{a}$</td></tr><tr><td>宽帽子符号</td><td>\widehat{abc}</td><td>\widehat{算式}</td><td>$\widehat{abc}$</td></tr><tr><td>检查符号</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>a</mi></mrow><mo>ˇ</mo></mover></mrow><annotation encoding="application/x-tex">\check{a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.62847em;"></span><span class="strut bottom" style="height:0.62847em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord accent"><span class="vlist"><span style="top:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">a</span></span></span><span style="top:0em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="accent-body"><span>ˇ</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></td><td>\bar{算式}</td><td>$\check{a}$</td></tr><tr><td>短符号</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>a</mi></mrow><mo>˘</mo></mover></mrow><annotation encoding="application/x-tex">\breve{a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord accent"><span class="vlist"><span style="top:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">a</span></span></span><span style="top:0em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="accent-body"><span>˘</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></td><td>\breve{算式}</td><td>$\breve{a}$</td></tr><tr><td>波浪纹符号</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>a</mi></mrow><mo>~</mo></mover></mrow><annotation encoding="application/x-tex">\tilde{a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.6678599999999999em;"></span><span class="strut bottom" style="height:0.6678599999999999em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord accent"><span class="vlist"><span style="top:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">a</span></span></span><span style="top:-0.35em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="accent-body"><span>~</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></td><td>\tilde{算式}</td><td>$\tilde{a}$</td></tr><tr><td>宽波浪纹符号</td><td>\widetilde{abc}</td><td>\widetilde{算式}</td><td>$\widetilde{abc}$</td></tr><tr><td>短杠符号</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>a</mi></mrow><mo>¯</mo></mover></mrow><annotation encoding="application/x-tex">\bar{a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.56778em;"></span><span class="strut bottom" style="height:0.56778em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord accent"><span class="vlist"><span style="top:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">a</span></span></span><span style="top:0em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="accent-body"><span>¯</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></td><td>\bar{算式}</td><td>$\bar{a}$</td></tr><tr><td>向量符号</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>a</mi></mrow><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.71444em;"></span><span class="strut bottom" style="height:0.71444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord accent"><span class="vlist"><span style="top:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">a</span></span></span><span style="top:0em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="accent-body accent-vec"><span>⃗</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></td><td>\vec{算式}</td><td>$\vec{a}$</td></tr><tr><td>锐音符</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>a</mi></mrow><mo>´</mo></mover></mrow><annotation encoding="application/x-tex">\acute{a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord accent"><span class="vlist"><span style="top:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">a</span></span></span><span style="top:0em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="accent-body"><span>´</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></td><td>\acute{算式}</td><td>$\acute{a}$</td></tr><tr><td>沉音符</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>a</mi></mrow><mo>`</mo></mover></mrow><annotation encoding="application/x-tex">\grave{a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord accent"><span class="vlist"><span style="top:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">a</span></span></span><span style="top:0em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="accent-body"><span>`</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></td><td>\grave{算式}</td><td>$\grave{a}$</td></tr><tr><td>环符号</td><td>\mathring{a}</td><td>\mathring{算式}</td><td>$\mathring{a}$</td></tr><tr><td>一阶导数</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>a</mi></mrow><mo>˙</mo></mover></mrow><annotation encoding="application/x-tex">\dot{a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.66786em;"></span><span class="strut bottom" style="height:0.66786em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord accent"><span class="vlist"><span style="top:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">a</span></span></span><span style="top:0em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="accent-body"><span>˙</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></td><td>\dot{算式}</td><td>$\dot{a}$</td></tr><tr><td>二阶导数</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>a</mi></mrow><mo>¨</mo></mover></mrow><annotation encoding="application/x-tex">\ddot{a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.66786em;"></span><span class="strut bottom" style="height:0.66786em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord accent"><span class="vlist"><span style="top:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord textstyle cramped"><span class="mord mathit">a</span></span></span><span style="top:0em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="accent-body"><span>¨</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></td><td>\ddot{算式}</td><td>$\ddot{a}$</td></tr><tr><td>上箭头</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>↑</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \uparrow y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mrel">↑</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\uparrow</td><td>$x \uparrow y$</td></tr><tr><td>双上箭头</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>⇑</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \Uparrow y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mrel">⇑</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\Uparrow</td><td>$x \Uparrow y$</td></tr><tr><td>下箭头</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>↓</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \downarrow y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mrel">↓</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\downarrow</td><td>$x \downarrow y$</td></tr><tr><td>双下箭头</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>⇓</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \Downarrow y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mrel">⇓</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\Downarrow</td><td>$x \Downarrow y$</td></tr><tr><td>左箭头</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>←</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \leftarrow y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mrel">←</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\leftarrow</td><td>$x \leftarrow y$</td></tr><tr><td>双左箭头</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>⇐</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \Leftarrow y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mrel">⇐</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\Leftarrow</td><td>$x \Leftarrow y$</td></tr><tr><td>右箭头</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>→</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \rightarrow y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mrel">→</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\rightarrow</td><td>$x \rightarrow y$</td></tr><tr><td>双右箭头</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>⇒</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \Rightarrow y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mrel">⇒</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\Rightarrow</td><td>$x \Rightarrow y$</td></tr><tr><td>顶部左箭头</td><td>\overleftarrow{xyz}</td><td>\overleftarrow{算式}</td><td>$\overleftarrow{xyz}$</td></tr><tr><td>顶部右箭头</td><td>\overrightarrow{xyz}</td><td>\overrightarrow{算式}</td><td>$\overrightarrow{xyz}$</td></tr><tr><td>底端对其省略号</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">1,2,\ldots,n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.64444em;"></span><span class="strut bottom" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">1</span><span class="mpunct">,</span><span class="mord mathrm">2</span><span class="mpunct">,</span><span class="minner">…</span><span class="mpunct">,</span><span class="mord mathit">n</span></span></span></span></td><td>\ldots</td><td>$1,2,\ldots,n$</td></tr><tr><td>中线对齐省略号</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>x</mi><mn>1</mn><mn>1</mn></msubsup><mo>+</mo><msubsup><mi>x</mi><mn>2</mn><mn>2</mn></msubsup><mo>+</mo><mo>⋯</mo><mo>+</mo><msubsup><mi>x</mi><mi>n</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">x_1^1 + x_2^2 + \cdots + x_n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:1.0622159999999998em;vertical-align:-0.24810799999999997em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.24810799999999997em;margin-left:0em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.24810799999999997em;margin-left:0em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="minner">⋯</span><span class="mbin">+</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.247em;margin-left:0em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">n</span></span></span><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></td><td>\cdots</td><td>$x_1^1 + x_2^2 + \cdots + x_n^2$</td></tr><tr><td>竖直对齐省略号</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mtext> </mtext><mi mathvariant="normal">⋮</mi><mtext> </mtext><mi>y</mi></mrow><annotation encoding="application/x-tex">x \ \vdots \ y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.9em;"></span><span class="strut bottom" style="height:1.09444em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="mord mspace"> </span><span class="mord mathrm">⋮</span><span class="mord mspace"> </span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\vdots</td><td>$x \ \vdots \ y$</td></tr><tr><td>斜对齐对齐省略号</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>⋱</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \ddots y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.82em;"></span><span class="strut bottom" style="height:1.01444em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span><span class="minner">⋱</span><span class="mord mathit" style="margin-right:0.03588em;">y</span></span></span></span></td><td>\ddots</td><td>$x \ddots y$</td></tr></tbody></table><h2 id="字体"><a class="markdownIt-Anchor" href="#字体"></a> 字体</h2><table><thead><tr><th>公式/符号</th><th>显示效果</th><th>语法</th><th>示例</th></tr></thead><tbody><tr><td>字体 1</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="bold">A</mi><mi mathvariant="bold">B</mi><mi mathvariant="bold">C</mi><mi mathvariant="bold">a</mi><mi mathvariant="bold">b</mi><mi mathvariant="bold">c</mi><mn mathvariant="bold">1</mn><mn mathvariant="bold">2</mn><mn mathvariant="bold">3</mn></mrow></mrow><annotation encoding="application/x-tex">\mathbf{ABCabc123}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathbf">A</span><span class="mord mathbf">B</span><span class="mord mathbf">C</span><span class="mord mathbf">a</span><span class="mord mathbf">b</span><span class="mord mathbf">c</span><span class="mord mathbf">1</span><span class="mord mathbf">2</span><span class="mord mathbf">3</span></span></span></span></span></td><td>\mathbf{}</td><td>$\mathbf{ABCabc123}$</td></tr><tr><td>字体 2</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="script">A</mi><mi mathvariant="script">B</mi><mi mathvariant="script">C</mi><mi>a</mi><mi>b</mi><mi>c</mi><mn mathvariant="script">1</mn><mn mathvariant="script">2</mn><mn mathvariant="script">3</mn></mrow></mrow><annotation encoding="application/x-tex">\mathcal{ABCabc123}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathcal">A</span><span class="mord mathcal" style="margin-right:0.03041em;">B</span><span class="mord mathcal" style="margin-right:0.05834em;">C</span><span class="mord mathit">a</span><span class="mord mathit">b</span><span class="mord mathit">c</span><span class="mord mathcal">1</span><span class="mord mathcal">2</span><span class="mord mathcal">3</span></span></span></span></span></td><td>\mathcal{}</td><td>$\mathcal{ABCabc123}$</td></tr><tr><td>字体 3</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="fraktur">A</mi><mi mathvariant="fraktur">B</mi><mi mathvariant="fraktur">C</mi><mi mathvariant="fraktur">a</mi><mi mathvariant="fraktur">b</mi><mi mathvariant="fraktur">c</mi><mn mathvariant="fraktur">1</mn><mn mathvariant="fraktur">2</mn><mn mathvariant="fraktur">3</mn></mrow></mrow><annotation encoding="application/x-tex">\mathfrak{ABCabc123}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69141em;"></span><span class="strut bottom" style="height:0.88047em;vertical-align:-0.18906em;"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathfrak">A</span><span class="mord mathfrak">B</span><span class="mord mathfrak">C</span><span class="mord mathfrak">a</span><span class="mord mathfrak">b</span><span class="mord mathfrak">c</span><span class="mord mathfrak">1</span><span class="mord mathfrak">2</span><span class="mord mathfrak">3</span></span></span></span></span></td><td>\mathfrak{}</td><td>$\mathfrak{ABCabc123}$</td></tr><tr><td>字体 4</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="sans-serif">A</mi><mi mathvariant="sans-serif">B</mi><mi mathvariant="sans-serif">C</mi><mi mathvariant="sans-serif">a</mi><mi mathvariant="sans-serif">b</mi><mi mathvariant="sans-serif">c</mi><mn mathvariant="sans-serif">1</mn><mn mathvariant="sans-serif">2</mn><mn mathvariant="sans-serif">3</mn></mrow></mrow><annotation encoding="application/x-tex">\mathsf{ABCabc123}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathsf">A</span><span class="mord mathsf">B</span><span class="mord mathsf">C</span><span class="mord mathsf">a</span><span class="mord mathsf">b</span><span class="mord mathsf">c</span><span class="mord mathsf">1</span><span class="mord mathsf">2</span><span class="mord mathsf">3</span></span></span></span></span></td><td>\mathsf{}</td><td>$\mathsf{ABCabc123}$</td></tr><tr><td>字体 5</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="double-struck">A</mi><mi mathvariant="double-struck">B</mi><mi mathvariant="double-struck">C</mi><mi>a</mi><mi>b</mi><mi>c</mi><mn mathvariant="normal">1</mn><mn mathvariant="normal">2</mn><mn mathvariant="normal">3</mn></mrow></mrow><annotation encoding="application/x-tex">\mathbb{ABCabc123}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathbb">A</span><span class="mord mathbb">B</span><span class="mord mathbb">C</span><span class="mord mathit">a</span><span class="mord mathit">b</span><span class="mord mathit">c</span><span class="mord mathrm">1</span><span class="mord mathrm">2</span><span class="mord mathrm">3</span></span></span></span></span></td><td>\mathbb{}</td><td>$\mathbb{ABCabc123}$</td></tr></tbody></table><h2 id="其他符号"><a class="markdownIt-Anchor" href="#其他符号"></a> 其他符号</h2><table><thead><tr><th>公式/符号</th><th>显示效果</th><th>语法</th><th>示例</th></tr></thead><tbody><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∇</mi></mrow><annotation encoding="application/x-tex">\nabla</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">∇</span></span></span></span></td><td>\nabla</td><td>$\nabla$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ð</mi></mrow><annotation encoding="application/x-tex">\eth</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0em;"></span><span class="strut bottom" style="height:0em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">ð</span></span></span></span></td><td>\eth</td><td>$\eth$</td></tr><tr><td>梅花</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">♣</mi></mrow><annotation encoding="application/x-tex">\clubsuit</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.82407em;vertical-align:-0.12963em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">♣</span></span></span></span></td><td>\clubsuit</td><td>$\clubsuit$</td></tr><tr><td>方块</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">♢</mi></mrow><annotation encoding="application/x-tex">\diamondsuit</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.82407em;vertical-align:-0.12963em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">♢</span></span></span></span></td><td>\diamondsuit</td><td>$\diamondsuit$</td></tr><tr><td>红桃</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">♡</mi></mrow><annotation encoding="application/x-tex">\heartsuit</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.82407em;vertical-align:-0.12963em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">♡</span></span></span></span></td><td>\heartsuit</td><td>$\heartsuit$</td></tr><tr><td>黑桃</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">♠</mi></mrow><annotation encoding="application/x-tex">\spadesuit</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.82407em;vertical-align:-0.12963em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">♠</span></span></span></span></td><td>\spadesuit</td><td>$\spadesuit$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℑ</mi></mrow><annotation encoding="application/x-tex">\Im</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">ℑ</span></span></span></span></td><td>\Im</td><td>$\Im$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℜ</mi></mrow><annotation encoding="application/x-tex">\Re</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">ℜ</span></span></span></span></td><td>\Re</td><td>$\Re$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">∀</span></span></span></span></td><td>\forall</td><td>$\forall$</td></tr><tr><td>存在</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">∃</span></span></span></span></td><td>\exists</td><td>$\exists$</td></tr><tr><td>不存在</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∄</mi></mrow><annotation encoding="application/x-tex">\nexists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0em;"></span><span class="strut bottom" style="height:0em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">∄</span></span></span></span></td><td>\nexists</td><td>$\nexists$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\varnothing</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">∅</span></span></span></span></td><td>\varnothing</td><td>$\varnothing$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">♯</mi></mrow><annotation encoding="application/x-tex">\sharp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">♯</span></span></span></span></td><td>\sharp</td><td>$\sharp$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">♭</mi></mrow><annotation encoding="application/x-tex">\flat</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:0.75em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">♭</span></span></span></span></td><td>\flat</td><td>$\flat$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">♮</mi></mrow><annotation encoding="application/x-tex">\natural</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">♮</span></span></span></span></td><td>\natural</td><td>$\natural$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">k</mi></mrow><annotation encoding="application/x-tex">\Bbbk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">k</span></span></span></span></td><td>\Bbbk</td><td>$\Bbbk$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋆</mo></mrow><annotation encoding="application/x-tex">\star</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.46528em;"></span><span class="strut bottom" style="height:0.46528em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord">⋆</span></span></span></span></td><td>\star</td><td>$\star$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">╲</mi></mrow><annotation encoding="application/x-tex">\diagdown</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0em;"></span><span class="strut bottom" style="height:0em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">╲</span></span></span></span></td><td>\diagdown</td><td>$\diagdown$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">╱</mi></mrow><annotation encoding="application/x-tex">\diagup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0em;"></span><span class="strut bottom" style="height:0em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">╱</span></span></span></span></td><td>\diagup</td><td>$\diagup$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">◊</mi></mrow><annotation encoding="application/x-tex">\Diamond</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0em;"></span><span class="strut bottom" style="height:0em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">◊</span></span></span></span></td><td>\Diamond</td><td>$\Diamond$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Ⅎ</mi></mrow><annotation encoding="application/x-tex">\Finv</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0em;"></span><span class="strut bottom" style="height:0em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Ⅎ</span></span></span></span></td><td>\Finv</td><td>$\Finv$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">⅁</mi></mrow><annotation encoding="application/x-tex">\Game</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0em;"></span><span class="strut bottom" style="height:0em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">⅁</span></span></span></span></td><td>\Game</td><td>$\Game$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℏ</mi></mrow><annotation encoding="application/x-tex">\hbar</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68889em;"></span><span class="strut bottom" style="height:0.68889em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">ℏ</span></span></span></span></td><td>\hbar</td><td>$\hbar$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℏ</mi></mrow><annotation encoding="application/x-tex">\hslash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68889em;"></span><span class="strut bottom" style="height:0.68889em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">ℏ</span></span></span></span></td><td>\hslash</td><td>$\hslash$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">◊</mi></mrow><annotation encoding="application/x-tex">\lozenge</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0em;"></span><span class="strut bottom" style="height:0em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">◊</span></span></span></span></td><td>\lozenge</td><td>$\lozenge$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">⧫</mi></mrow><annotation encoding="application/x-tex">\blacklozenge</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0em;"></span><span class="strut bottom" style="height:0em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">⧫</span></span></span></span></td><td>\blacklozenge</td><td>$\blacklozenge$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">℧</mi></mrow><annotation encoding="application/x-tex">\mho</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0em;"></span><span class="strut bottom" style="height:0em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">℧</span></span></span></span></td><td>\mho</td><td>$\mho$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">□</mi></mrow><annotation encoding="application/x-tex">\square</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0em;"></span><span class="strut bottom" style="height:0em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">□</span></span></span></span></td><td>\square</td><td>$\square$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">■</mi></mrow><annotation encoding="application/x-tex">\blacksquare</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0em;"></span><span class="strut bottom" style="height:0em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">■</span></span></span></span></td><td>\blacksquare</td><td>$\blacksquare$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">√</mi></mrow><annotation encoding="application/x-tex">\surd</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.2em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">√</span></span></span></span></td><td>\surd</td><td>$\surd$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">℘</mi></mrow><annotation encoding="application/x-tex">\wp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">℘</span></span></span></span></td><td>\wp</td><td>$\wp$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∁</mi></mrow><annotation encoding="application/x-tex">\complement</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0em;"></span><span class="strut bottom" style="height:0em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">∁</span></span></span></span></td><td>\complement</td><td>$\complement$</td></tr><tr><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Ⓢ</mi></mrow><annotation encoding="application/x-tex">\circledS</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0em;"></span><span class="strut bottom" style="height:0em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Ⓢ</span></span></span></span></td><td>\circledS</td><td>$\circledS$</td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr></tbody></table><h2 id="希腊字母大写"><a class="markdownIt-Anchor" href="#希腊字母大写"></a> 希腊字母（大写）</h2><table><thead><tr><th>公式/符号</th><th>显示效果</th><th>语法</th><th>示例</th></tr></thead><tbody><tr><td>阿尔法Alpha</td><td>\Alpha</td><td>\Alpha</td><td>$\Alpha$</td></tr><tr><td>贝塔Beta</td><td>\Beta</td><td>\Beta</td><td>$\Beta$</td></tr><tr><td>伽马Gamma</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Γ</mi></mrow><annotation encoding="application/x-tex">\Gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Γ</span></span></span></span></td><td>\Gamma</td><td>$\Gamma$</td></tr><tr><td>德尔塔Delte</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Δ</span></span></span></span></td><td>\Delta</td><td>$\Delta$</td></tr><tr><td>艾普西隆Epsilon</td><td>\Epsilon</td><td>\Epsilon</td><td>$\Epsilon$</td></tr><tr><td>捷塔Zeta</td><td>\Zeta</td><td>\Zeta</td><td>$\Zeta$</td></tr><tr><td>依塔Eta</td><td>\Eta</td><td>\Eta</td><td>$\Eta$</td></tr><tr><td>西塔Theta</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Θ</mi></mrow><annotation encoding="application/x-tex">\Theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Θ</span></span></span></span></td><td>\Theta</td><td>$\Theta$</td></tr><tr><td>艾欧塔Iota</td><td>\Iota</td><td>\Iota</td><td>$\Iota$</td></tr><tr><td>卡帕Kappa</td><td>\Kappa</td><td>\Kappa</td><td>$\Kappa$</td></tr><tr><td>让姆达Lambda</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Λ</mi></mrow><annotation encoding="application/x-tex">\Lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Λ</span></span></span></span></td><td>\Lambda</td><td>$\Lambda$</td></tr><tr><td>谬Mu</td><td>\Mu</td><td>\Mu</td><td>$\Mu$</td></tr><tr><td>纽Nu</td><td>\Nu</td><td>\Nu</td><td>$\Nu$</td></tr><tr><td>克西Xi</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Ξ</mi></mrow><annotation encoding="application/x-tex">\Xi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Ξ</span></span></span></span></td><td>\Xi</td><td>$\Xi$</td></tr><tr><td>奥密克戎Omicron</td><td>\Omicron</td><td>\Omicron</td><td>$\Omicron$</td></tr><tr><td>派Pi</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Π</span></span></span></span></td><td>\Pi</td><td>$\Pi$</td></tr><tr><td>柔Rho</td><td>\Rho</td><td>\Rho</td><td>$\Rho$</td></tr><tr><td>西格玛Sigma</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Σ</mi></mrow><annotation encoding="application/x-tex">\Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Σ</span></span></span></span></td><td>\Sigma</td><td>$\Sigma$</td></tr><tr><td>陶Tau</td><td>\Tau</td><td>\Tau</td><td>$\Tau$</td></tr><tr><td>宇普西龙Upsilon</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Υ</mi></mrow><annotation encoding="application/x-tex">\Upsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Υ</span></span></span></span></td><td>\Upsilon</td><td>$\Upsilon$</td></tr><tr><td>佛爱Phi</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Φ</mi></mrow><annotation encoding="application/x-tex">\Phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Φ</span></span></span></span></td><td>\Phi</td><td>$\Phi$</td></tr><tr><td>西Chi</td><td>\Chi</td><td>\Chi</td><td>$\Chi$</td></tr><tr><td>普西Psi</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Ψ</mi></mrow><annotation encoding="application/x-tex">\Psi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Ψ</span></span></span></span></td><td>\Psi</td><td>$\Psi$</td></tr><tr><td>欧米伽Omega</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Ω</mi></mrow><annotation encoding="application/x-tex">\Omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Ω</span></span></span></span></td><td>\Omega</td><td>$\Omega$</td></tr></tbody></table><h2 id="希腊字母小写"><a class="markdownIt-Anchor" href="#希腊字母小写"></a> 希腊字母（小写）</h2><table><thead><tr><th>公式/符号</th><th>显示效果</th><th>语法</th><th>示例</th></tr></thead><tbody><tr><td>Alpha</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.0037em;">α</span></span></span></span></td><td>\alpha</td><td>$\alpha$</td></tr><tr><td>Beta</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.05278em;">β</span></span></span></span></td><td>\beta</td><td>$\beta$</td></tr><tr><td>Gamma</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.05556em;">γ</span></span></span></span></td><td>\gamma</td><td>$\gamma$</td></tr><tr><td>Delte</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.03785em;">δ</span></span></span></span></td><td>\delta</td><td>$\delta$</td></tr><tr><td>Epsilon</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">ϵ</span></span></span></span></td><td>\epsilon</td><td>$\epsilon$</td></tr><tr><td>Zeta</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ζ</mi></mrow><annotation encoding="application/x-tex">\zeta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.07378em;">ζ</span></span></span></span></td><td>\zeta</td><td>$\zeta$</td></tr><tr><td>Eta</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>η</mi></mrow><annotation encoding="application/x-tex">\eta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.03588em;">η</span></span></span></span></td><td>\eta</td><td>$\eta$</td></tr><tr><td>Theta</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.02778em;">θ</span></span></span></span></td><td>\theta</td><td>$\theta$</td></tr><tr><td>Iota</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ι</mi></mrow><annotation encoding="application/x-tex">\iota</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">ι</span></span></span></span></td><td>\iota</td><td>$\iota$</td></tr><tr><td>Kappa</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>κ</mi></mrow><annotation encoding="application/x-tex">\kappa</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">κ</span></span></span></span></td><td>\kappa</td><td>$\kappa$</td></tr><tr><td>Lambda</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">λ</span></span></span></span></td><td>\lambda</td><td>$\lambda$</td></tr><tr><td>Mu</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">μ</span></span></span></span></td><td>\mu</td><td>$\mu$</td></tr><tr><td>Nu</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ν</mi></mrow><annotation encoding="application/x-tex">\nu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.06366em;">ν</span></span></span></span></td><td>\nu</td><td>$\nu$</td></tr><tr><td>Xi</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ξ</mi></mrow><annotation encoding="application/x-tex">\xi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.04601em;">ξ</span></span></span></span></td><td>\xi</td><td>$\xi$</td></tr><tr><td>Omicron</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>o</mi></mrow><annotation encoding="application/x-tex">\omicron</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">o</span></span></span></span></td><td>\omicron</td><td>$\omicron$</td></tr><tr><td>Pi</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>π</mi></mrow><annotation encoding="application/x-tex">\pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.03588em;">π</span></span></span></span></td><td>\pi</td><td>$\pi$</td></tr><tr><td>Rho</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ρ</mi></mrow><annotation encoding="application/x-tex">\rho</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">ρ</span></span></span></span></td><td>\rho</td><td>$\rho$</td></tr><tr><td>Sigma</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.03588em;">σ</span></span></span></span></td><td>\sigma</td><td>$\sigma$</td></tr><tr><td>Tau</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>τ</mi></mrow><annotation encoding="application/x-tex">\tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.1132em;">τ</span></span></span></span></td><td>\tau</td><td>$\tau$</td></tr><tr><td>Upsilon</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>υ</mi></mrow><annotation encoding="application/x-tex">\upsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.03588em;">υ</span></span></span></span></td><td>\upsilon</td><td>$\upsilon$</td></tr><tr><td>Phi</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">ϕ</span></span></span></span></td><td>\phi</td><td>$\phi$</td></tr><tr><td>Chi</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>χ</mi></mrow><annotation encoding="application/x-tex">\chi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">χ</span></span></span></span></td><td>\chi</td><td>$\chi$</td></tr><tr><td>Psi</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ψ</mi></mrow><annotation encoding="application/x-tex">\psi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.03588em;">ψ</span></span></span></span></td><td>\psi</td><td>$\psi$</td></tr><tr><td>Omega</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ω</mi></mrow><annotation encoding="application/x-tex">\omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.03588em;">ω</span></span></span></span></td><td>\omega</td><td>$\omega$</td></tr></tbody></table><p>注：</p><ul><li><p>有一些大写的希腊字母 其写法与相应的拉丁字母相同或十分相似，因而不会被使用，例如：A、B、E、Z、H、I、K、M、N、O、P、T、Y、X。除此之外，由于小写的 ι（iota），ο（omicron）和 υ（upsilon）跟拉丁字母中的 i、o 和 u 很相似，所以也很少被使用。</p></li><li><p>部分字母有变量专用形式，以 <code>\var</code> 开头，如 epsilon - <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ε</mi></mrow><annotation encoding="application/x-tex">\varepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">ε</span></span></span></span> - \varepsilon；theta - <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϑ</mi></mrow><annotation encoding="application/x-tex">\vartheta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">ϑ</span></span></span></span> - \vartheta；rho- <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϱ</mi></mrow><annotation encoding="application/x-tex">\varrho</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">ϱ</span></span></span></span> -\varrho；</p><p>sigma - $\varsigma $ - \varsigma；phi - <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>φ</mi></mrow><annotation encoding="application/x-tex">\varphi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">φ</span></span></span></span> -\varphi</p></li></ul><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><blockquote><p><a href="https://www.studocu.com/it/document/universita-degli-studi-di-perugia/economia-della-crescita-e-dellinnovazione/simboli-latex/3529779">studocu</a></p><p><a href="https://www.cmor-faculty.rice.edu/~heinken/latex/symbols.pdf">latex-sybols-pdf</a></p><p><a href="https://blog.csdn.net/ji_meng/article/details/123598174">Markdown常用数学公式</a></p><p><a href="https://ctan.org/pkg/lshort">lshort – A short introduction to LATEX 2e</a></p><p><a href="https://blog.csdn.net/wq_0708/article/details/121214007">Markdown写矩阵</a></p><p><a href="https://baike.baidu.com/item/%E5%B8%8C%E8%85%8A%E5%AD%97%E6%AF%8D/4428067?fr=aladdin">百度百科-希腊字母</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;很多情况下，markdown编辑器都自带Latex的公式解析功能，因此我们可以直接使用Latex公式来展示数学公式的内容。&lt;/p&gt;
&lt;h2 id=&quot;行内独行公式&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#行内独行公式&quot;&gt;&lt;/a&gt; 行内&amp;amp</summary>
      
    
    
    
    <category term="写作" scheme="http://blog.heyb.top/categories/%E5%86%99%E4%BD%9C/"/>
    
    <category term="Markdown" scheme="http://blog.heyb.top/categories/%E5%86%99%E4%BD%9C/Markdown/"/>
    
    
    <category term="Markdown" scheme="http://blog.heyb.top/tags/Markdown/"/>
    
    <category term="数学" scheme="http://blog.heyb.top/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>2022年总结</title>
    <link href="http://blog.heyb.top/2022/12/31/2022-summary.html"/>
    <id>http://blog.heyb.top/2022/12/31/2022-summary.html</id>
    <published>2022-12-31T15:59:59.000Z</published>
    <updated>2022-12-31T16:03:24.453Z</updated>
    
    <content type="html"><![CDATA[<p>在一声声咳嗽中，就要迎来了新的一年。</p><p>我以为不出门我可以苟进新冠决赛圈，没想到在却是在冬至的时候发了烧，一连着圣诞节都睡了过去。</p><p>这一年所拥有、失去、遗憾、成长。以前总希望时间能够过得快些，希望自己快点长大，现在却总想着能够慢一些，好多事情都似乎没来得及做，却已经结结实实地完结了一年。</p><h2 id="学习"><a class="markdownIt-Anchor" href="#学习"></a> 学习</h2><p>今年在技术上进展缓慢，工作中用到的框架并不是主流的，多是做配置文件串联API 的工作，多是基于 MuleSoft 框架做的，现在也逐渐向 Springboot 迁移。所以更多学习的重心还是放在业余自学上。</p><p>今年就着个项目倒腾了一下vue3、typeScript和vite ，不得不说，换了vite之后，速度是真的快，调试服务和打包的速度都比用webpack快了太多了。同一项目下调试从平均需要 35-40 秒缩短到了 2 秒左右，对于开发的体验来说真的太舒服了。</p><p>此外今年主要学习的新语言是 go，对比Java来说，我感觉更轻便更灵活，学习了一些基础语法之后就可以上手开发一个应用。感觉可以适用于一些更中小型的应用如文件系统，小工具等。新的一年我期望会投入go的精力会更多一些，同时也希望能在容器化的内容多学习一些。期望能够持续地构建自己的知识框架，形成一些可复用的、较优的、结构化的方法论，避免遇到同样的问题不断重复的踩坑。</p><h2 id="感情"><a class="markdownIt-Anchor" href="#感情"></a> 感情</h2><p>今年的身份又多了一层，变成了从柳小姐的男朋友转变成了柳小姐的丈夫，和别人介绍的时候还没适应过来，还是「这是我的男/女朋友」，只是我们的关系更安定了一些。小环说，我跟她在一起之后似乎没有失眠过了，都是一躺下没多久就开始打呼噜了。想想我们的关系的确变得更「简单」了，有什么事情都可以直接和对方坦诚布公。在这段感情中我学习到了很多，开始以长远关系和长期价值去思考婚姻和家庭，争取从一个不错的男朋友成为一个优秀的丈夫。新的一年也期待能够再加一层身份，能够带着一个迷你的小环。</p><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><p>今年的时间多了，听的歌反而比去年少了很多（可能是因为在路上交通的时间少了），这里推荐三首我经常听的歌给大家：Bahamas - All The Time，JVKE - golden hour，伍佰 - 泪桥。</p><p>总觉得没有听到很抓耳的歌，刷了B站的 00-09 年百大华语金曲感慨以前的歌还是能打，也很庆幸自己经历过华语乐坛群星璀璨的年代。</p><p>今年和小环一起看了 55 部电影电视剧（加上我没跟她一起看的估计有 60+了）</p><p>大多时候我们都是刷了一些老剧，比较高分的有：</p><p>电影：无名之辈、我不是药神、Hello 树先生、让子弹飞、夏洛特烦恼，看不见的客人。</p><p>电视剧：庆余年、琅琊榜、国王:永远的君主、甄嬛传、寻秦记。</p><p>动漫：罗小黑、罗小黑战记。</p><p>这里我就不再做推荐了。</p><p>新的剧集有梦华录、风吹半夏，电影隐入尘烟都是今年值得一看的。</p><p>隐入尘烟看完，总感觉一口气郁结在心头，长叹一口气却也不能纾解。不由想起史铁生说的：“其实每时每刻我们都是幸运的，因为任何灾难的前面，都可能再加一个“更”字。”</p><h2 id="最后"><a class="markdownIt-Anchor" href="#最后"></a> 最后</h2><p>当下总是最好的时候，纵然有许多事情，我们唯有接受，努力，好好生活。</p><p>新的一年期望大家身体健康，平安喜乐，万事顺意。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在一声声咳嗽中，就要迎来了新的一年。&lt;/p&gt;
&lt;p&gt;我以为不出门我可以苟进新冠决赛圈，没想到在却是在冬至的时候发了烧，一连着圣诞节都睡了过去。&lt;/p&gt;
&lt;p&gt;这一年所拥有、失去、遗憾、成长。以前总希望时间能够过得快些，希望自己快点长大，现在却总想着能够慢一些，好多事情都似乎</summary>
      
    
    
    
    <category term="个人" scheme="http://blog.heyb.top/categories/%E4%B8%AA%E4%BA%BA/"/>
    
    
    <category term="个人" scheme="http://blog.heyb.top/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>「Docker」Docker 系列文章2 - Dockerfile</title>
    <link href="http://blog.heyb.top/2022/12/15/docker-docker-series-2---dockerfile.html"/>
    <id>http://blog.heyb.top/2022/12/15/docker-docker-series-2---dockerfile.html</id>
    <published>2022-12-15T15:35:33.000Z</published>
    <updated>2022-12-25T14:32:51.782Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h2><p>Dockerfile是一个文本文件，其中包含创建 Docker 镜像所需的步骤和指令。主要分为<strong>基础镜像信息、维护者信息、镜像操作指令和容器启动时指令</strong>四个部分，并支持以 <code>#</code> 开头的注释行。这些指令告诉 Docker 如何设置应用程序的运行环境，通常包括安装软件包、复制文件和设置环境变量的命令。</p><p>用户可以使用 Dockerfile 与 <code>docker build</code> 命令一起使用，用于创建 Docker 自定义镜像，然后可以用该镜像创建 Docker 容器。</p><h2 id="构建镜像"><a class="markdownIt-Anchor" href="#构建镜像"></a> 构建镜像</h2><p>例如，假设我们想要创建一个基于 go-gin 的应用程序，并使用 Docker 运行它。可以使用 Dockerfile 来指定应用程序所需的依赖项、工作目录和启动命令。</p><p>以下是执行步骤</p><ol><li><p>初始化 go 项目：在 Go 项目目录中初始化 <code>go.mod</code> 文件。在终端中输入 <code>go mod init</code> 并回车，这将创建 <code>go.mod</code> 文件。</p></li><li><p>安装 go-gin 框架：在项目中安装 Gin 框架。在终端中输入 <code>go get github.com/gin-gonic/gin</code> 并回车，这将安装 Gin 框架。</p></li><li><p>编写使用 Gin 框架的 Go 代码，<code>gin.go</code> 文件代码如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 测试 http 框架 https://github.com/gin-gonic/gin</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 默认返回一个已连接日志记录器和恢复中间件的引擎实例。</span></span><br><span class="line">r := gin.Default()</span><br><span class="line"><span class="comment">// 绑定路由 /ping，访问后执行func的方法</span></span><br><span class="line">r.GET(<span class="string">&quot;/ping&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 返回一个 json， 状态值为 200， H的内容为 map[string]</span></span><br><span class="line">c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line"><span class="string">&quot;message&quot;</span>: <span class="string">&quot;pong&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在0.0.0.0：8080上侦听和服务(对于Windows“为 localhost：8080”)</span></span><br><span class="line">err := r.Run()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;启动服务异常：&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>创建一个 <code>Dockerfile</code> 文件，并编写文件。</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用安装了Go的基本映像</span></span><br><span class="line"><span class="keyword">FROM</span> golang:latest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 维护者信息</span></span><br><span class="line"><span class="keyword">MAINTAINER</span> docker_user wsxc_0617@sina.cn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 镜像的操作指令</span></span><br><span class="line"><span class="comment"># 将工作目录设置为项目根目录</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将Go代码复制到容器的工作目录</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> . .</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 go module 模式，并设置代理服务</span></span><br><span class="line"><span class="keyword">ENV</span> GO111MODULE=on</span><br><span class="line"><span class="keyword">ENV</span> GOPROXY=https://goproxy.cn,direct</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建Go代码</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">env</span> GOOS=linux GOARCH=amd64  go build -o go-gin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 暴露应用程序的端口</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当容器启动时运行Go代码</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;./go-gin&quot;</span>]</span></span><br></pre></td></tr></table></figure><ul><li>在这个文件中，第一行必须需要使用 <code>FROM</code> 命令来指定要使用的基础镜像</li><li>使用 <code>COPY</code> 命令将 Go 代码复制到镜像中</li><li>使用 <code>ENV</code> 设置环境变量，这里设置 <code>go module</code> 的代理服务，避免 Go 依赖包下载失败</li><li>使用 <code>RUN go build</code> 命令来构建 Go 代码，<code>-o</code> 表示指定打包后输出的文件名称</li><li>在 <code>Dockerfile</code> 中运行的 Go 代码。可以使用 <code>CMD</code> 或 <code>ENTRYPOINT</code> 命令来运行 Go 代码，一般是执行 <code>go build</code> 构建好的程序名</li></ul></li><li><p>使用 <code>docker build</code> 命令来构建你的 Docker 镜像。在终端中输入 <code>docker build -t &lt;image-name&gt; .</code> 并回车，其中 <code>&lt;image-name&gt;</code> 是我们要为镜像指定的名称</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t go-gin .</span><br></pre></td></tr></table></figure><ul><li><p>在命令中 <code>-t</code> 指定镜像的名称和标记， 格式为 <code>name:tag</code>，如 <code>go-gin:latest</code></p></li><li><p>命令末尾的 <code>.</code> 表示构建上下文，即 Dockerfile 和需要包含在镜像中的文件的位置。也可以通过将 <code>.</code> 替换为包含Dockerfile的目录路径来指定不同的目录作为上下文。例如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t myimage:latest /path/to/dir</span><br></pre></td></tr></table></figure><p>这将使用 <code>/path/to/dir</code> 目录中的 Dockerfile 和所需文件构建镜像。</p><p>重要的是，上下文必须包括 Dockerfile 和构建镜像所需的所有文件。Docker 守护程序将使用上下文构建镜像，并为 Dockerfile 中的每条指令创建一个新层。<br>命令参考：<a href="https://docs.docker.com/engine/reference/commandline/build/">https://docs.docker.com/engine/reference/commandline/build/</a></p></li></ul><p>构建完成后，我们可以通过 <code>docker images</code> 查看构建好的镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p>可以看到如下信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">REPOSITORY                       TAG           IMAGE ID       CREATED          SIZE</span><br><span class="line">go-gin                           latest        d82303fc77be   34 seconds ago   1.13GB</span><br></pre></td></tr></table></figure></li><li><p>使用 <code>docker run</code> 命令来运行你的 Docker 镜像。在终端中输入 <code>docker run -p 8080:8080 &lt;image-name&gt;</code> 并回车，其中 <code>8080</code> 是你希望运行应用程序的端口。<br>我们运行 <code>docker run -p 8080:8080 go-gin</code> 来运行镜像。可以看到如下结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.</span><br><span class="line"></span><br><span class="line">[GIN-debug] [WARNING] Running in &quot;debug&quot; mode. Switch to &quot;release&quot; mode in production.</span><br><span class="line"> - using env:export GIN_MODE=release</span><br><span class="line"> - using code:gin.SetMode(gin.ReleaseMode)</span><br><span class="line"></span><br><span class="line">[GIN-debug] GET    /ping                     --&gt; main.main.func1 (3 handlers)</span><br><span class="line">[GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to set a value.</span><br><span class="line">Please check https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies for details.</span><br><span class="line">[GIN-debug] Environment variable PORT is undefined. Using port :8080 by default</span><br><span class="line">[GIN-debug] Listening and serving HTTP on :8080</span><br></pre></td></tr></table></figure><p>命令参考文档：<a href="https://docs.docker.com/engine/reference/run/">https://docs.docker.com/engine/reference/run/</a></p><p>通过浏览器访问 <code>http://localhost:8080/ping</code>  可以看到返回了信息 <code>&#123;&quot;message&quot;:&quot;pong&quot;&#125;</code></p></li></ol><h2 id="分段构建"><a class="markdownIt-Anchor" href="#分段构建"></a> 分段构建</h2><p>「Dockerfile 构建镜像太大了怎么处理」</p><p>在 Dockerfile 中，可以使用多个构建阶段来进行分段构建。分段构建的目的是为了在构建 Docker 镜像的过程中，更加高效地使用资源。</p><p>在 Dockerfile 中，每个构建阶段都是一个单独的上下文，在每个构建阶段中执行的操作都是独立的。在每个构建阶段结束时，Docker 会将其上下文打包成一个新的镜像层，并将其与前面的镜像层合并。</p><p>我们在上一步操作中可以看到我们的代码量很小，但是构建出来的镜像却有 1GB 大小。主要是因为依赖包等内容也一并打包到构建的镜像中去了，实际上我们仅需编译好 Go 的二进制文件即可运行。因此可以通过 Dockerfile 的分段构建来进行镜像的瘦身。</p><p>代码如下：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ---------- 构建 ---------- #</span></span><br><span class="line"><span class="comment"># 使用安装了Go的基本映像【并且设置别名】</span></span><br><span class="line"><span class="keyword">FROM</span> golang:latest as go_app_build</span><br><span class="line"><span class="comment"># 维护者信息</span></span><br><span class="line"><span class="keyword">MAINTAINER</span> docker_user wsxc_0617@sina.cn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 镜像的操作指令</span></span><br><span class="line"><span class="comment"># 将工作目录设置为项目根目录</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将Go代码复制到容器</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> . .</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 go module的代理服务</span></span><br><span class="line"><span class="keyword">ENV</span> GO111MODULE=on</span><br><span class="line"><span class="keyword">ENV</span> GOPROXY=https://goproxy.cn,direct</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建Go代码</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">env</span> GOOS=linux GOARCH=amd64 go build -o go-gin .</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------- 运行 ---------- #</span></span><br><span class="line"><span class="comment"># 运行环境设置为 alpine</span></span><br><span class="line"><span class="keyword">FROM</span> alpine:latest as go_app_run</span><br><span class="line"><span class="comment"># 【采用相同的目录为工作目录】</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"><span class="comment"># 【将构建镜像中编译好的二进制文件复制到运行镜像中】</span></span><br><span class="line"><span class="comment">#COPY --from=go_app_build /app .</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> --from=0 /app .</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示应用程序的端口</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当容器启动时运行Go代码</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;./go-gin&quot;</span>]</span></span><br></pre></td></tr></table></figure><p>在修改后的 Dockerfile 中，我们可以看到有两个构建阶段：“go_app_build” 和 “go_app_run”。</p><p>在 “go_app_build” 构建阶段中，我们执行了将 Go 代码复制到容器、设置 Go module 的代理服务以及构建 Go 代码的操作。</p><p>在 “go_app_run” 构建阶段中，我们执行了将编译好的二进制文件复制到运行镜像中的操作。</p><p>COPY 指令的 --from 选项允许你从其他构建阶段复制文件。可以使用 FROM 指令的名称来标识构建阶段，也可以使用数字来标识构建阶段。当使用数字标识构建阶段时，0 表示第一个构建阶段，1 表示第二个构建阶段，以此类推。</p><p>例如，在本例中，0 表示名为 “go_app_build” 的构建阶段，即在修改后的 Dockerfile 中的第一个构建阶段。</p><p>使用数字标识构建阶段的好处是，当我们添加、删除或重新排制构建阶段时，只需要更新相应的数字即可，而不需要更新所有的构建阶段名称。</p><p>例如，假设你在修改后的 Dockerfile 中再添加了一个构建阶段，那么只需要将这个新的构建阶段的标识符设置为 2，其他的构建阶段的标识符都不需要更改。这样可以避免出现因为构建阶段名称的更改而导致的潜在问题</p><p>我们使用 <code>docker build -t go-gin2 .</code> 命令，来构建名为 <code>go-gin2</code> 的镜像，并通过 <code>docker images</code> 查看构建好的镜像，结果如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">REPOSITORY                       TAG           IMAGE ID       CREATED          SIZE</span><br><span class="line">go-gin2                          latest        ddbe692c0268   56 minutes ago   36.1MB</span><br></pre></td></tr></table></figure><p>可以看到我们构建出来的镜像比之前小了很多，主要因为</p><blockquote><ol><li><p>同一个 Dockerfile 文件的多个 FROM 是多个不同的image，不同的 image 之间数据隔离，包括环境变量，但是不同的 image 之间可以通过 <code>--from</code> 来传递数据</p></li><li><p>同一个 Dockerfile 的多个 FROM 只有最后一个FROM 才会生成最终的镜像，因此编译阶段的环境没有在第二阶段中，第二阶段只是引用了第一阶段的生成物：二进制文件，所以最终生成的镜像文件比写一个 FROM 要小得多</p></li></ol></blockquote><p>分段构建的优点是，当构建过程中的某个操作失败时，Docker 只需要重新构建失败的构建阶段，而不需要重新构建整个镜像。这样可以提高构建效率，并减少构建失败的风险。</p><p>总的来说，分段构建是一种非常有用的技术，可以帮助我们提高 Docker 镜像的构建效率，并减少构建失败的风险。建议在编写 Dockerfile 时尽量使用分段构建，以便更好地利用 Docker 的构建功能。</p><h2 id="指令"><a class="markdownIt-Anchor" href="#指令"></a> 指令</h2><p>Dockerfile 指令的一般格式为<code>INSTRUCTION &lt;arguments&gt;</code>，下面分别做详细介绍。</p><h3 id="from"><a class="markdownIt-Anchor" href="#from"></a> FROM</h3><p>格式为<code>FROM &lt;image&gt;</code>或<code>FROM &lt;image&gt;:&lt;tag&gt;</code>。第一条指令必须为<code>FROM</code>指令，在同一个Dockerfile中创建多个镜像时可以使用多个<code>FROM</code>指令（每个镜像一次）。</p><h3 id="maintainer"><a class="markdownIt-Anchor" href="#maintainer"></a> MAINTAINER</h3><p>格式为<code>MAINTAINER &lt;name&gt;</code>，指定维护者信息。</p><h3 id="run"><a class="markdownIt-Anchor" href="#run"></a> RUN</h3><p>格式为<code>RUN &lt;command&gt;</code>或<code>RUN [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;]</code>。前者将在shell终端中运行命令，即<code>/bin/sh -c</code>；后者则使用exec执行。指定使用其他终端可以通过第二种方式实现。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RUN [&quot;/bin/bash&quot;, &quot;-c&quot;, &quot;echo hello&quot;]</span><br></pre></td></tr></table></figure><p>每条<code>RUN</code>指令将在当前镜像基础上执行指定命令，并提交为新的镜像，当命令较长时可使用<code>\</code>来换行。</p><h3 id="cmd"><a class="markdownIt-Anchor" href="#cmd"></a> CMD</h3><p>支持三种格式：</p><ul><li><code>CMD [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;]</code>，使用<code>exec</code>执行，推荐方式。</li><li><code>CMD command param1 param2</code>，在<code>/bin/sh</code>中执行，提供给需要交互的应用。</li><li><code>CMD [&quot;param1&quot;, &quot;param2&quot;]</code>，提供给<code>ENTRYPOINT</code>的默认参数</li></ul><p>指定启动容器时执行的命令，每个Dockerfile只能有一条<code>CMD</code>命令，如果指定了多条命令，只有最后一条会被执行。如果用户启动容器时指定了运行的命令则会覆盖掉<code>CMD</code>指定的命令。</p><h3 id="expose"><a class="markdownIt-Anchor" href="#expose"></a> EXPOSE</h3><p>格式为<code>EXPOSE &lt;port&gt; [&lt;port&gt;...]</code>，告诉Docker服务端容器暴露的端口号，供互联系统使用。</p><p>在启动容器时需要通过<code>-P</code>，Docker主机会自动分配一个端口转发到指定的端口；使用<code>-p</code>则可以具体指定哪个本地端口映射过来。</p><h3 id="env"><a class="markdownIt-Anchor" href="#env"></a> ENV</h3><p>格式<code>ENV &lt;key&gt; &lt;value&gt;</code>，指定一个环境变量，会被后续<code>RUN</code>指令使用，并在容器运行时保持。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ENV PG_MAJOR    9.3</span><br><span class="line">ENV PG_VERSION  9.3.4</span><br><span class="line">RUN curl -SL http://example.com/postgres-$PG_VERSION.tar.xz | tar -xJC /usr/src/postgres &amp;&amp; ...</span><br><span class="line">ENV PATH /usr/local/postgres-$PG_MAJOR/bin:$PATH</span><br></pre></td></tr></table></figure><h3 id="add"><a class="markdownIt-Anchor" href="#add"></a> ADD</h3><p>格式<code>ADD &lt;src&gt; &lt;dest&gt;</code>，复制指定的<code>&lt;src&gt;</code>到容器中的<code>&lt;dest&gt;</code>，其中<code>&lt;src&gt;</code>可以是Dockerfile所在目录的一个相对路径（文件或目录）；也可以是一个URL；还可以是一个tar文件（自动解压为目录）。</p><h3 id="copy"><a class="markdownIt-Anchor" href="#copy"></a> COPY</h3><p>格式<code>COPY &lt;src&gt; &lt;dest&gt;</code>，复制本地主机的<code>&lt;src&gt;</code>（为Dockerfile所在目录的相对路径，文件或目录）为容器中的<code>&lt;dest&gt;</code>，目标路径不存在时会自动创建。</p><h3 id="entrypoint"><a class="markdownIt-Anchor" href="#entrypoint"></a> ENTRYPOINT</h3><p>配置容器启动后执行的命令，且不可被<code>docker run</code>提供的参数覆盖。有两种格式：</p><ul><li><code>ENTRYPOINT [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;]</code></li><li><code>ENTRYPOINT command param1 param2</code>，shell中执行。</li></ul><p>每个Dockerfile中只能有一个<code>ENTRYPOINT</code>，当指定多个<code>ENTRYPOINT时</code>，只有最后一个生效。</p><h3 id="volume"><a class="markdownIt-Anchor" href="#volume"></a> VOLUME</h3><p>格式<code>VOLUME [&quot;/data&quot;]</code>，创建一个可以从本地主机或其他容器挂载的挂载点，一般用来存放数据库和需要保持的数据等。</p><h3 id="user"><a class="markdownIt-Anchor" href="#user"></a> USER</h3><p>格式<code>USER daemon</code>，指定运行容器时的用户名或UID，后续的<code>RUN</code>也会使用指定用户。</p><p>当服务不需要管理员权限时，可通过该命令指定运行用户，并可在之前创建所需要的用户。要临时获取管理员权限可使用<code>gosu</code>，而不推荐<code>sudo</code>。</p><h3 id="workdir"><a class="markdownIt-Anchor" href="#workdir"></a> WORKDIR</h3><p>格式<code>WORKDIR /path/to/workdir</code>，为后续的<code>RUN</code>、<code>CMD</code>、<code>ENTRYPOINT</code>指令配置工作目录。</p><p>可以使用多个<code>WORKDIR</code>指令，后续命令如果参数是相对路径，则会基于之前命令指定的路径。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">WORKDIR /a</span><br><span class="line">WORKDIR b</span><br><span class="line">WORKDIR c</span><br><span class="line">RUN pwd</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">最终路径为/a/b/c</span></span><br></pre></td></tr></table></figure><h3 id="onbuild"><a class="markdownIt-Anchor" href="#onbuild"></a> ONBUILD</h3><p>格式<code>ONBUILD [INSTRUCTION]</code>，配置当前所创建的镜像作为其他新创建的基础镜像时所执行的操作指令。</p><p>镜像image-A Dockerfile</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[...]</span><br><span class="line">ONBUILD ADD . /app/src</span><br><span class="line">ONBUILD RUN /usr/local/bin/python-build --dir /app/src</span><br><span class="line">[...]</span><br></pre></td></tr></table></figure><p>基于image-A创建新镜像，新的Dockerfile中使用<code>FROM images-A</code>指定基础镜像时，会自动执行<code>ONBUILD</code>指令内容，等价于在后面添加了两条指令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM images-A</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Automatically run the following 等价于自动运行以下命令</span></span><br><span class="line">ADD . /app/src</span><br><span class="line">RUN /usr/local/bin/python-build --dir /app/src</span><br></pre></td></tr></table></figure><p>使用<code>ONBUILD</code>指令的镜像推荐在标签中注明。例如<code>ruby:1.9-onbuild</code>。</p><blockquote><p>实用技巧：</p><p>如果你写 Dockerfile 时经常遇到一些运行错误，依赖错误等，你可以直接运行一个依赖的底，然后进入终端进行配置环境，成功后再把做过的步骤命令写道 Dockerfile 文件中，这样编写调试会快很多。</p><p>例如上面的底是<code>golang:latest</code>，我们可以运行<code>docker run -it -d golang:latest bash</code>，跑起来后进入容器终端配置依赖的软件，然后尝试跑起来自己的软件，最后把所有做过的步骤写入到 Dockerfile 就好了。</p><p>掌握好这个技巧，你的 Dockerfile 文件编写起来就非常的得心应手了。</p></blockquote><h2 id="扩展"><a class="markdownIt-Anchor" href="#扩展"></a> 扩展</h2><p>怎样上传到阿里云私有仓库？</p><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><blockquote><p><a href="https://docs.docker.com/engine/reference/builder/#run">官方文档</a></p><p><a href="https://www.jianshu.com/p/f272726db9c5">Docker安装与基本操作</a></p><p><a href="https://docker.easydoc.net/doc/81170005/cCewZWoN/N9VtYIIi">Docker 快速入门-制作自己的镜像</a></p><p><a href="https://www.jianshu.com/p/678b751d14ae">go 构建最小的镜像</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#简介&quot;&gt;&lt;/a&gt; 简介&lt;/h2&gt;
&lt;p&gt;Dockerfile是一个文本文件，其中包含创建 Docker 镜像所需的步骤和指令。主要分为&lt;strong&gt;基础镜像信息、维护者信息、镜像操作</summary>
      
    
    
    
    <category term="技术" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="容器" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/%E5%AE%B9%E5%99%A8/"/>
    
    <category term="Docker" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/%E5%AE%B9%E5%99%A8/Docker/"/>
    
    
    <category term="技术" scheme="http://blog.heyb.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="容器" scheme="http://blog.heyb.top/tags/%E5%AE%B9%E5%99%A8/"/>
    
    <category term="Docker" scheme="http://blog.heyb.top/tags/Docker/"/>
    
    <category term="Dockerfile" scheme="http://blog.heyb.top/tags/Dockerfile/"/>
    
  </entry>
  
  <entry>
    <title>「ChatGPT」OpenAI ChatGPT注册攻略</title>
    <link href="http://blog.heyb.top/2022/12/08/chatgpt-openai-chatgpt-registration-strategy.html"/>
    <id>http://blog.heyb.top/2022/12/08/chatgpt-openai-chatgpt-registration-strategy.html</id>
    <published>2022-12-08T09:22:20.000Z</published>
    <updated>2022-12-25T14:31:59.934Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h2><p>ChatGPT 是一种大型语言模型，由OpenAI训练而成。它的目的是通过对大量语言数据的学习，能够帮助人们更好地理解和生成自然语言。它可以用来完成各种自然语言处理任务，比如机器翻译 —— 将一段文本从一种语言翻译到另外一种语言，问答系统 —— 回答日常生活的常见问题、学术问题，文本生成 —— 生成文章、邮件，解释语言语法、语义等等。</p><p>以下是 chatGPT的使用案例，可以自己参考使用或摸索合适自己的方式</p><table><thead><tr><th>案例序号</th><th>案例名称</th><th>案例来源</th></tr></thead><tbody><tr><td>1</td><td>生成AI Prompt</td><td><a href="https://link.zhihu.com/?target=https%3A//twitter.com/GuyP/status/1598020781065527296">https://twitter.com/GuyP/status/1598020781065527296</a></td></tr><tr><td>2</td><td>编写iOS SwiftUI APP</td><td><a href="https://link.zhihu.com/?target=https%3A//twitter.com/avielgr/status/1598895550392197121">https://twitter.com/avielgr/status/1598895550392197121</a></td></tr><tr><td>3</td><td>学习技术</td><td><a href="https://link.zhihu.com/?target=https%3A//twitter.com/HamelHusain/status/1598834924848836609">https://twitter.com/HamelHusain/status/1598834924848836609</a></td></tr><tr><td>4</td><td>写出一个可以生成小鸟图片的Python脚本</td><td><a href="https://link.zhihu.com/?target=https%3A//twitter.com/bgavran3/status/1598857248536956928">https://twitter.com/bgavran3/status/1598857248536956928</a></td></tr><tr><td>5</td><td>写Javascript脚本</td><td><a href="https://link.zhihu.com/?target=https%3A//twitter.com/vertinski/status/1599099368472137729">https://twitter.com/vertinski/status/1599099368472137729</a></td></tr><tr><td>6</td><td>参与SAT考试</td><td><a href="https://link.zhihu.com/?target=https%3A//twitter.com/davidtsong/status/1598767389390573569">https://twitter.com/davidtsong/status/1598767389390573569</a></td></tr><tr><td>7</td><td>自然语言转成Latex</td><td><a href="https://link.zhihu.com/?target=https%3A//twitter.com/jdjkelly/status/1598021488795586561">https://twitter.com/jdjkelly/status/1598021488795586561</a></td></tr><tr><td>8</td><td>解释代码</td><td><a href="https://link.zhihu.com/?target=https%3A//twitter.com/goodside/status/1598129631609380864">https://twitter.com/goodside/status/1598129631609380864</a></td></tr><tr><td>9</td><td>改写故事</td><td><a href="https://link.zhihu.com/?target=https%3A//twitter.com/raphaelmilliere/status/1598469100535259136">https://twitter.com/raphaelmilliere/status/1598469100535259136</a></td></tr><tr><td>10</td><td>debugging代码</td><td><a href="https://link.zhihu.com/?target=https%3A//twitter.com/amasad/status/1598042665375105024">https://twitter.com/amasad/status/1598042665375105024</a></td></tr><tr><td>11</td><td>写计算机网络家庭作业</td><td><a href="https://link.zhihu.com/?target=https%3A//twitter.com/abhnvx/status/1598258353196929024">https://twitter.com/abhnvx/status/1598258353196929024</a></td></tr><tr><td>12</td><td>替代搜索引擎</td><td><a href="https://link.zhihu.com/?target=https%3A//twitter.com/RajJohri2019/status/1598492953764315137">https://twitter.com/RajJohri2019/status/1598492953764315137</a></td></tr><tr><td>13</td><td>创作短剧</td><td><a href="https://link.zhihu.com/?target=https%3A//twitter.com/rgodfrey/status/1598162900140445697">https://twitter.com/rgodfrey/status/1598162900140445697</a></td></tr><tr><td>14</td><td>创作食谱</td><td><a href="https://link.zhihu.com/?target=https%3A//twitter.com/stephsmithio/status/1598920887029628928">https://twitter.com/stephsmithio/status/1598920887029628928</a></td></tr><tr><td>15</td><td>反编译汇编代码</td><td><a href="https://link.zhihu.com/?target=https%3A//twitter.com/mahal0z/status/1598536939942006784">https://twitter.com/mahal0z/status/1598536939942006784</a></td></tr><tr><td>16</td><td>代写办公邮件</td><td><a href="https://link.zhihu.com/?target=https%3A//twitter.com/CubicleApril/status/1598753388895797282">https://twitter.com/CubicleApril/status/1598753388895797282</a></td></tr><tr><td>17</td><td>写年度总结报告</td><td><a href="https://link.zhihu.com/?target=https%3A//twitter.com/shanselman/status/1599073011050872832">https://twitter.com/shanselman/status/1599073011050872832</a></td></tr><tr><td>18</td><td>闲聊</td><td><a href="https://link.zhihu.com/?target=https%3A//twitter.com/t3dotgg/status/1598954493680713729">https://twitter.com/t3dotgg/status/1598954493680713729</a></td></tr><tr><td>19</td><td>撰写技术博客</td><td><a href="https://link.zhihu.com/?target=https%3A//twitter.com/goodside/status/1598235521675038722">https://twitter.com/goodside/status/1598235521675038722</a></td></tr><tr><td>20</td><td>逻辑推理问题</td><td><a href="https://link.zhihu.com/?target=https%3A//twitter.com/Robdeprop/status/1598285166971351040">https://twitter.com/Robdeprop/status/1598285166971351040</a></td></tr></tbody></table><h2 id="准备"><a class="markdownIt-Anchor" href="#准备"></a> 准备</h2><ul><li><p>留学代理，要求是非中国（及地区）的地址，如日韩、印度、新加坡、美国等</p></li><li><p>准备一个国外手机号或者用<a href="https://sms-activate.org/">接码平台 sms-activate</a></p></li></ul><h2 id="开始"><a class="markdownIt-Anchor" href="#开始"></a> 开始</h2><h3 id="接码平台"><a class="markdownIt-Anchor" href="#接码平台"></a> 接码平台</h3><p>打开接码平台 <a href="https://sms-activate.org/?ref=2684538">sms-activate.org</a>，注册一个账号。注册后在右上角个人信息中进行充值，这里单位是卢布</p><p>接码OpenAi的一次费用是大概10卢布（约 1 块多人民币），不过只能充美金，充值0.2美元即可，充值时下滑可以选择支付宝进行支付。</p><p>充值完成后我们去注册openAI的账号</p><h3 id="注册openai账号"><a class="markdownIt-Anchor" href="#注册openai账号"></a> 注册OpenAI账号</h3><p>首先是打开<a href="https://beta.openai.com/signup">ChatGPT的账户注册页面</a>。谷歌注册或者邮箱注册都可以，这里用邮箱注册作为例子。</p><p>用邮箱注册后有个验证邮件，进去邮箱，点开链接。（如果无法打开链接的话要注意邮件中是否允许了可执行脚本）</p><p>如果出现提示说不能在当前国家服务： <code>Not available OpenAI's services are not available in your country.</code></p><p>就是因为代理没有设置为全局，或者地区不对。</p><p>如果出现了这个提示，那么接下来怎么切换代理，都是没用的，可以在浏览器控制台清空状态</p><h3 id="解决地区问题"><a class="markdownIt-Anchor" href="#解决地区问题"></a> 解决地区问题</h3><p>首先要将代理地址切换到不是国内地区的代理（如港澳台）</p><p>然后，先复制下面这段代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">javascript</span>:<span class="variable language_">window</span>.<span class="property">localStorage</span>.<span class="title function_">removeItem</span>(<span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="variable language_">window</span>.<span class="property">localStorage</span>).<span class="title function_">find</span>(<span class="function"><span class="params">i</span>=&gt;</span>i.<span class="title function_">startsWith</span>(<span class="string">&#x27;@@auth0spajs&#x27;</span>)))</span><br></pre></td></tr></table></figure><p>打开浏览器控制台粘贴进去，然后按下回车键，接着刷新页面，如果代理没问题，就可以正常看到注册页面了。</p><h3 id="填写手机验证码"><a class="markdownIt-Anchor" href="#填写手机验证码"></a> 填写手机验证码</h3><p>到我们的接码网站上去，在左侧菜单栏搜索OpenAi，然后选择巴西（经测试可用）或印度（更实惠但未经测试），点击小黄车购买。</p><p>然后在右侧主页面会出现购买好的手机号，点击复制后回到 openAI的验证界面-verify your phone number，选择了对应国家地区然后粘贴手机号选send code。</p><p>回到接码平台的手机号界面，等待一会儿网站会提示验证码，我们复制粘贴即可。</p><p>如果申请Send code发送短信时，总是出现发送短信请求次数过多，无法发送的问题。</p><p>这个应该是ChatGPT的用户突然暴增导致的，官方也给了说明，大家耐心等待一会应该就可以。</p><p>现在我们可以愉快的进行使用了</p><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><p>需要注意的是</p><ul><li><p>ChatGPT目前是不联网的状态，所以回答的内容也是2021年之前的。</p></li><li><p>ChatGPT的回答不是 100%准确，仅可以作为参考。并且也和提问的技巧有关系：</p><p>如：问它能说一下Java工作中遇到的问题吗？</p><p>它会回答：</p><p>由于我是一个计算机程序，我没有工作，也没有遇到任何 Java 问题。我只能通过对已有信息的学习来回答问题。你可以提供一些关于 Java 的信息，我可以尝试为你解答问题。</p><p>如果问它：假设我是一名 多年经验的高级java开发程序员，你能尝试模拟说我在工作中遇到的问题吗</p><p>它就可以模拟情景来进行回答</p></li><li><p>ChatGPT使用英文提问会比使用中文提问效果会更好</p></li></ul><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><blockquote><p><a href="https://zhuanlan.zhihu.com/p/589017082">最强AI对话系统ChatGPT不完全使用指南——已发掘功能展览！</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#简介&quot;&gt;&lt;/a&gt; 简介&lt;/h2&gt;
&lt;p&gt;ChatGPT 是一种大型语言模型，由OpenAI训练而成。它的目的是通过对大量语言数据的学习，能够帮助人们更好地理解和生成自然语言。它可以用来</summary>
      
    
    
    
    <category term="技术" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="其他" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/%E5%85%B6%E4%BB%96/"/>
    
    <category term="AI" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/%E5%85%B6%E4%BB%96/AI/"/>
    
    <category term="ChatGPT" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/%E5%85%B6%E4%BB%96/AI/ChatGPT/"/>
    
    
    <category term="技术" scheme="http://blog.heyb.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="ChatGPT" scheme="http://blog.heyb.top/tags/ChatGPT/"/>
    
    <category term="OpenAI" scheme="http://blog.heyb.top/tags/OpenAI/"/>
    
  </entry>
  
  <entry>
    <title>「Docker」Docker 系列文章1 - 入门</title>
    <link href="http://blog.heyb.top/2022/12/04/docker-docker-series-1---getting-started.html"/>
    <id>http://blog.heyb.top/2022/12/04/docker-docker-series-1---getting-started.html</id>
    <published>2022-12-04T08:14:47.000Z</published>
    <updated>2022-12-25T14:32:35.853Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h2><p>Docker 是一个开源的容器管理平台，它允许开发人员在轻量级容器中运行应用程序。容器是一种轻量级的虚拟化技术，它允许将应用程序及其依赖项打包在一起，并在任何支持容器的环境中运行。这样，开发人员可以确保应用程序在不同的平台上保持一致，并且能够在任何地方快速部署和运行。</p><p>Docker可以简单理解为轻量级的虚拟机，但它使用独立于底层操作系统的容器来运行应用程序。与虚拟机相比，Docker 可以更快速地启动和运行应用程序，因为它不需要启动一个完整的操作系统来运行应用程序。这也使得 Docker 更容易在多个环境中进行部署，例如开发环境、测试环境和生产环境。</p><h3 id="优点"><a class="markdownIt-Anchor" href="#优点"></a> 优点</h3><ul><li>轻量级：可以通过一行命令完成启动和停止，方便快捷。</li><li>可移植：可以将程序及其依赖、运行环境一起打包为一个镜像，可以迁移到任意操作系统，在不同的环境中运行。</li><li>隔离：运行时利用沙箱机制形成隔离容器，各个应用互不干扰，可以有效地管理应用程序之间的依赖关系和资源限制。</li><li>Docker 的生态系统提供了丰富的工具，可以帮助开发人员构建、部署和管理容器化应用程序。</li></ul><h3 id="能做什么"><a class="markdownIt-Anchor" href="#能做什么"></a> 能做什么</h3><ol><li><p>快速部署，解决不同环境中系统差异的问题<br>在使用Docker前，我们在不同环境下（如开发环境、测试环境、生产环境等）需要安装、配置、维护不同的应用程序（如JDK、Tomcat、数据库等），不同应用在每个环境都需要做一遍同样的操作，工作量繁重。使用Docker可以自己创建空镜像从头构建（或使用公共仓库中构建好的镜像），直接能够在不同环境中一步到位搭建部署整套应用环境。而 Docker 的镜像提供了除内核外完整的运行时环境，确保了应用运行环境一致性，从而不会再出现“代码在我机器上没问题啊”的情况。</p></li><li><p>解决依赖问题，多个版本软件共存，不污染系统，例如 Python2、Python3，Redis4.0，Redis5.0</p><p>大型项目中依赖关系复杂，依赖的组件非常多，不同组件之间部署时往往会产生依赖兼容性问题。<br>例如：一个项目中，部署时需要依赖于node.js、Redis、RabbitMQ、MySQL等，这些服务部署时所需要的函数库、依赖项，甚至Node JS的版本都需要不相同，此时便会出现依赖兼容问题。Docker应用运行在容器中，使用沙箱机制可以将环境互相隔离。不同应用需要不同的版本我们就运行在不同的容器中即可。</p></li><li><p>更轻松的扩展和维护<br>基于上面的优点，使得Docker在应用复用更为容易，能够使得应用快速扩展，让服务弹性伸缩变得简单，能够轻松地完成动态管理的工作，根据业务需求实时扩展或拆除应用程序和服务。</p></li><li><p>快速安装测试/学习软件，用完就可以删除，不把时间浪费在安装软件上。例如 Redis / MongoDB / ElasticSearch / ELK</p></li></ol><h3 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h3><p>镜像（Image）：像是文件模板，可以理解为软件安装包，可以方便的进行传播和安装。一个镜像可以创建多个容器</p><p>容器（Container）：是由镜像创建的运行实例，可以理解为软件安装后的状态，每个软件运行环境都是独立的、隔离的，称之为容器。</p><p>仓库（Repository）：集中存放镜像文件的场所，可以理解为 Maven、Git 的仓库，当我们需要镜像文件的时候，可以从远程仓库中拉取。官方镜像仓库：<a href="https://hub.docker.com/">https://hub.docker.com/</a></p><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><p>桌面版：<a href="https://www.docker.com/products/docker-desktop">https://www.docker.com/products/docker-desktop</a><br>服务器版：<a href="https://docs.docker.com/engine/install/#server">https://docs.docker.com/engine/install/#server</a></p><h3 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h3><p>windows 打开桌面版的时候如果出现了如下问题</p><p><code>Hardware assisted virtualization and data execution protection must be enabled in the BIOS.</code></p><p>则需要开启 WSL2 功能</p><p>在控制面板-&gt;程序-&gt;启用或关闭 windows 功能，勾选Windows虚拟机监控程序平台和适用于Linux的Windows子系统，以开启 Windows 虚拟化和 Linux 子系统（WSL2)</p><p>如果出现 WSL 2 installation is incomplete.<br>The WSL2 Linux kernel is now installed using a separate MSI update package. Please click the link and follow the instructions to install the kernel update: xxx</p><p>则需要安装最新版本的 WSL2： <a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi</a></p><h2 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h2><p>镜像加速源</p><table><thead><tr><th>镜像加速器</th><th>镜像加速器地址</th></tr></thead><tbody><tr><td>Docker 中国官方镜像</td><td><a href="https://registry.docker-cn.com">https://registry.docker-cn.com</a></td></tr><tr><td>DaoCloud 镜像站</td><td><a href="http://f1361db2.m.daocloud.io">http://f1361db2.m.daocloud.io</a></td></tr><tr><td>Azure 中国镜像</td><td><a href="https://dockerhub.azk8s.cn">https://dockerhub.azk8s.cn</a></td></tr><tr><td>科大镜像站</td><td><a href="https://docker.mirrors.ustc.edu.cn">https://docker.mirrors.ustc.edu.cn</a></td></tr><tr><td>阿里云</td><td>https://&lt;your_code&gt;.mirror.aliyuncs.com</td></tr><tr><td>七牛云</td><td><a href="https://reg-mirror.qiniu.com">https://reg-mirror.qiniu.com</a></td></tr><tr><td>网易云</td><td><a href="https://hub-mirror.c.163.com">https://hub-mirror.c.163.com</a></td></tr><tr><td>腾讯云</td><td><a href="https://mirror.ccs.tencentyun.com">https://mirror.ccs.tencentyun.com</a></td></tr></tbody></table><p><img src="https://sjwx.easydoc.xyz/46901064/files/l25jdwrn.png" alt="img"></p><h2 id="安装软件"><a class="markdownIt-Anchor" href="#安装软件"></a> 安装软件</h2><p>传统应用安装，可能需要先安装许多的依赖。例如我们安装WordPress （一个基于 PHP 和 MySQL 的免费和开源内容管理系统（CMS））的话，则需要先安装Apache、Php、MySQL等环境后才可以正常安装WordPress。同一系统下也不方便安装多个版本的软件，有些软件还卸载不干净。</p><p>相对比之下Dokcer安装更简洁，一个命令就可以快速安装和卸载。也没有系统兼容的问题，Linux专享的软件也可以在Windows下使用。</p><h3 id="安装redis"><a class="markdownIt-Anchor" href="#安装redis"></a> 安装Redis</h3><p>在Redis官方网站中并没有提供Docker相关的安装方式。</p><p>可以通过Docker官方镜像仓库查找Redis镜像：<a href="https://hub.docker.com/_/redis">https://hub.docker.com/_/redis</a></p><p>通过命令 <code>docker pull redis</code> 来拉取镜像，也可以通过直接运行 <code>docker run</code> 来创建并运行容器：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 6379:6379 --name redis redis:latest</span><br></pre></td></tr></table></figure><p>然后会返回一串容器id（我这里是1c8f24cddd1d7a4accac19e1ef8f7ab68e70f663c3a8f184bbc732fd50f43abd），</p><p>就表示创建成功。如果有需要，我们也可以设置更多参数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --restart=always --log-opt max-size=100m --log-opt max-file=2 -p 6379:6379 --name redis -d redis --appendonly yes  --requirepass 123456</span><br></pre></td></tr></table></figure><ul><li><code>--restart=always</code> 为开机启动</li><li><code>-log</code> 为日志方面的设置</li><li><code>-p</code> 为将内部端口映射到外部的端口，将6379端口挂载出去，前面为宿主机端口，后面为镜像内端口</li><li><code>-name</code> 为容器名字</li><li><code>-d redis</code> 表示后台启动redis</li><li><code>-- appendonly yes</code> 开启 redis 持久化</li><li><code>-- requirepass</code> 为设置redis访问密码</li></ul><p>注意：生产环境尽量不要使用 latest 版本，应使用指定版本号</p><h3 id="查看状态"><a class="markdownIt-Anchor" href="#查看状态"></a> 查看状态</h3><p>通过以下命令查看容器运行状态：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a |grep &lt;容器名&gt;</span><br></pre></td></tr></table></figure><p>运行 <code>docker ps -a |grep redis</code>  得到以下结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1c8f24cddd1d  redis  &quot;docker-entrypoint.s…&quot;  47 seconds ago  Up 45 seconds  0.0.0.0:6379-&gt;6379/tcp  redis</span><br></pre></td></tr></table></figure><p>或者通过容器 id 来查看状态如：<code>docker ps -a | grep 1c8f</code></p><h3 id="查看容器运行日志"><a class="markdownIt-Anchor" href="#查看容器运行日志"></a> 查看容器运行日志</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs --since 30m &lt;容器名/id&gt;</span><br></pre></td></tr></table></figure><ul><li>–since 30m 是查看此容器30分钟之内的日志情况。</li></ul><p>运行<code>docker logs --since 30m redis</code> 或 <code>docker logs --since 30m 1c8f</code> 得到如下结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1:C 15 Dec 2022 08:23:37.361 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo</span><br><span class="line">1:C 15 Dec 2022 08:23:37.361 # Redis version=6.2.6, bits=64, commit=00000000, modified=0, pid=1, just started</span><br><span class="line">1:C 15 Dec 2022 08:23:37.361 # Configuration loaded</span><br><span class="line">1:M 15 Dec 2022 08:23:37.363 * monotonic clock: POSIX clock_gettime</span><br><span class="line">1:M 15 Dec 2022 08:23:37.366 * Running mode=standalone, port=6379.</span><br><span class="line">1:M 15 Dec 2022 08:23:37.366 # Server initialized</span><br><span class="line">1:M 15 Dec 2022 08:23:37.367 * Ready to accept connections</span><br></pre></td></tr></table></figure><h3 id="进入容器"><a class="markdownIt-Anchor" href="#进入容器"></a> 进入容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker extc -it &lt;容器&gt; &lt;命令&gt;</span><br></pre></td></tr></table></figure><p>运行 <code>docker exec -it redis redis-cli</code>  或   <code>docker exec -it 1c8f redis-cli</code>  就可以进入到redis 当中，刚才我们设置了密码，因此要用<code>auth</code>命令登录后才可以使用。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; auth 123456</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; set abc 1</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get abc</span><br><span class="line">&quot;1&quot;</span><br><span class="line">127.0.0.1:6379&gt; exit</span><br></pre></td></tr></table></figure><p>此时我们已经可以操作并查看到redis中的数据了，证明我们已经安装成功，接下来我们学习怎样停止或删除容器</p><h3 id="删除容器"><a class="markdownIt-Anchor" href="#删除容器"></a> 删除容器</h3><p>我们需要停止运行中的容器才可以删除</p><p>停止命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop &lt;容器名/id&gt;</span><br></pre></td></tr></table></figure><p>运行 <code>docker stop redis</code> 或 <code>docker stop 1c8f</code>停止容器</p><p>删除命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm &lt;容器名/id&gt;</span><br></pre></td></tr></table></figure><p>运行 <code>docker rm redis</code>  或 <code>docker rm 1c8f</code> 删除容器</p><p>通过 <code>docker ps -a</code> 查看 redis 容器已经被删除</p><h3 id="删除镜像"><a class="markdownIt-Anchor" href="#删除镜像"></a> 删除镜像</h3><p>查看全部镜像命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p>删除镜像命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi &lt;镜像id&gt;</span><br></pre></td></tr></table></figure><p>运行 <code>docker rmi 7614</code> 删除镜像， 这里的7614是我的redis的镜像id</p><h2 id="常用命令"><a class="markdownIt-Anchor" href="#常用命令"></a> 常用命令</h2><h3 id="镜像"><a class="markdownIt-Anchor" href="#镜像"></a> 镜像</h3><h4 id="获取镜像"><a class="markdownIt-Anchor" href="#获取镜像"></a> 获取镜像</h4><p><code>docker pull IMAGE_NAME[:Tag]</code> ：用于从 Docker 仓库下载镜像，如不显式指定TAG，则默认选择latest标签</p><h4 id="查看信息"><a class="markdownIt-Anchor" href="#查看信息"></a> 查看信息</h4><p><code>docker images</code>列出本地主机上已有的镜像信息</p><p><code>docker inspect IMAGE_ID</code>可以获取该镜像的详细信息。</p><h4 id="标签镜像"><a class="markdownIt-Anchor" href="#标签镜像"></a> 标签镜像</h4><p><code>docker tag REPOSITORY:TAG</code>可为本地镜像添加新的标签，例如 <code>docker tag ubuntu:latest latest_ubuntu:latest</code></p><h4 id="搜索镜像"><a class="markdownIt-Anchor" href="#搜索镜像"></a> 搜索镜像</h4><p><code>docker search IMAGE_NAME</code> ：用于在 Docker 仓库中搜索镜像，例如 <code>docker search mysql</code></p><p>可选参数：</p><ul><li><code>--automated=false</code> 仅显示自动创建的镜像</li><li><code>--no-trunc=false</code> 输出信息不截断显示</li><li><code>-s</code>，–starts=0 指定仅显示评价为指定星级以上的镜像</li></ul><h4 id="删除镜像-2"><a class="markdownIt-Anchor" href="#删除镜像-2"></a> 删除镜像</h4><p><code>docker rmi IMAGE[IMAGE...]</code>IMAGE可以为标签或ID。使用镜像ID来删除时，会先尝试删除所有指向该镜像的标签，然后删除该镜像文件本身。</p><blockquote><p>注意：当有该镜像创建的容器存在时，镜像文件默认是无法被删除的。</p></blockquote><p><code>docker ps -a</code>命令可以看到本机上存在的所有容器。</p><p>强制删除镜像用<code>docker rmi -f IMAGE</code>命令。使用<code>-f</code>参数来强制删除一个存在容器依赖的镜像会造成一些遗留问题。正确做法是先删除依赖镜像的所有容器，再来删除镜像。删除容器用<code>docker rm CONTAINER_ID</code>命令。</p><h4 id="创建镜像"><a class="markdownIt-Anchor" href="#创建镜像"></a> 创建镜像</h4><p><code>docker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]</code> 基于已有镜像的容器创建</p><p>可选参数：</p><ul><li><code>-a</code>，–author=“” 作者信息</li><li><code>-m</code>，–message&quot;&quot; 提交信息</li><li><code>-p</code>，–pause=true 提交时暂停容器运行</li></ul><p>举例如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost test]# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">ubuntu              14.04               dea1945146b9        6 weeks ago         188MB</span><br><span class="line">[root@localhost test]# docker run -ti ubuntu:14.04 /bin/bash</span><br><span class="line">root@098ab9bc25f8:/# touch test</span><br><span class="line">root@098ab9bc25f8:/# exit</span><br><span class="line">exit</span><br><span class="line">[root@localhost test]# docker commit -m &quot;Added a new file&quot; -a &quot;Docker Test&quot; 098ab9bc25f8 test</span><br><span class="line">sha256:68ceff3107a82641378dee544caeed48e6d544b4d74b525051381b7db7479d35</span><br><span class="line">[root@localhost test]# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">test                latest              68ceff3107a8        16 seconds ago      188MB</span><br><span class="line">ubuntu              14.04               dea1945146b9        6 weeks ago         188MB</span><br></pre></td></tr></table></figure><p>基于本地模板导入使用<code>cat 镜像压缩包 | docker import -REPOSITORY:TAG</code>命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost test]# ls</span><br><span class="line">ubuntu-14.04-x86_64-minimal.tar.gz</span><br><span class="line">[root@localhost test]# cat ubuntu-14.04-x86_64-minimal.tar.gz | docker import - ubuntu:14.04-server</span><br><span class="line">sha256:ae63a9e87332075323de0e2cb3e12dd6ea8c6078e006dd937dc0d670c4a8773d</span><br><span class="line">[root@localhost test]# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">ubuntu              14.04-server        ae63a9e87332        12 seconds ago      215MB</span><br><span class="line">test                latest              68ceff3107a8        About an hour ago   188MB</span><br><span class="line">ubuntu              14.04               dea1945146b9        6 weeks ago         188MB</span><br></pre></td></tr></table></figure><h4 id="存储镜像"><a class="markdownIt-Anchor" href="#存储镜像"></a> 存储镜像</h4><p><code>docker save -o 压缩包保存名 REPOSITORY:TAG</code> 可存出镜像。</p><p>举例如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost test]# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">ubuntu              14.04               dea1945146b9        6 weeks ago         188MB</span><br><span class="line">[root@localhost test]# docker save -o ubuntu_server.tar ubuntu:14.04</span><br><span class="line">[root@localhost test]# ls</span><br><span class="line">ubuntu_server.tar</span><br></pre></td></tr></table></figure><h4 id="载入镜像"><a class="markdownIt-Anchor" href="#载入镜像"></a> 载入镜像</h4><p><code>docker load --input 压缩包保存名</code>或者<code>docker load &lt; 压缩包保存名</code>可从导出的文件中重新载入镜像。</p><p>举例如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost test]# ls</span><br><span class="line">ubuntu_server.tar</span><br><span class="line">[root@localhost test]# docker load --input ubuntu_server.tar </span><br><span class="line">Loaded image: ubuntu:14.04</span><br><span class="line">[root@localhost test]# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">ubuntu              14.04               dea1945146b9        6 weeks ago         188MB</span><br></pre></td></tr></table></figure><h4 id="构建镜像"><a class="markdownIt-Anchor" href="#构建镜像"></a> 构建镜像</h4><p><code>docker build</code>：用于从 Dockerfile 创建一个新的镜像</p><h4 id="上传镜像"><a class="markdownIt-Anchor" href="#上传镜像"></a> 上传镜像</h4><p>可以使用<code>docker push NAME[:TAG]</code>上传镜像到仓库，默认上传到DockerHub官方仓库。第一次使用必须要先登录。</p><p>举例如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost test]# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">ubuntu              14.04-server        ae63a9e87332        4 minutes ago       215MB</span><br><span class="line">test                latest              68ceff3107a8        About an hour ago   188MB</span><br><span class="line">ubuntu              14.04               dea1945146b9        6 weeks ago         188MB</span><br><span class="line">[root@localhost test]# docker tag test:latest username/test:latest</span><br><span class="line">[root@localhost test]# docker images</span><br><span class="line">REPOSITORY            TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">ubuntu                14.04-server        ae63a9e87332        7 minutes ago       215MB</span><br><span class="line">username/test         latest              68ceff3107a8        About an hour ago   188MB</span><br><span class="line">test                  latest              68ceff3107a8        About an hour ago   188MB</span><br><span class="line">ubuntu                14.04               dea1945146b9        6 weeks ago         188MB</span><br><span class="line">[root@localhost test]# docker login</span><br><span class="line">Login with your Docker ID to push and pull images from Docker Hub. If you don&#x27;t have a Docker ID, head over to https://hub.docker.com to create one.</span><br><span class="line">Username: username</span><br><span class="line">Password: </span><br><span class="line">Login Succeeded</span><br><span class="line">[root@localhost test]# docker push username/test:latest</span><br><span class="line">The push refers to a repository [docker.io/username/test]</span><br><span class="line">786a798121af: Pushed </span><br><span class="line">7fb9ba64f896: Pushed </span><br><span class="line">4e1e6ac5b9d6: Pushed </span><br><span class="line">48daf661d621: Pushed </span><br><span class="line">bf59e7acf5c4: Pushed </span><br><span class="line">c47d9b229ca4: Pushed </span><br><span class="line">latest: digest: sha256:c46955d49b5b7cf15528b94d5c4fb7028b61c52cf00ee4d14073a92379e2237f size: 1566</span><br></pre></td></tr></table></figure><h3 id="容器"><a class="markdownIt-Anchor" href="#容器"></a> 容器</h3><h4 id="创建容器"><a class="markdownIt-Anchor" href="#创建容器"></a> 创建容器</h4><p><code>docker create CONTAINER_NAME</code> 命令来新建一个容器，新建的容器处于停止状态，可以使用<code>docker start &lt;CONTAINER_ID&gt;</code>命令来启动它。</p><h4 id="启动容器"><a class="markdownIt-Anchor" href="#启动容器"></a> 启动容器</h4><p>启动容器有两种方式：</p><ul><li>将在终止状态的容器重新启动，命令为  <code>docker start CONTAINER</code></li><li>基于镜像创建并运行一个新的容器，命令为 <code>docker run CONTAINER</code> ， 等价于先执行<code>docker create</code>，再执行<code>docker start</code>。</li></ul><p>可选参数：</p><ul><li><code>-t</code>，让Docker分配一个伪终端并绑定到容器的标准输入上</li><li><code>-i</code>，则让容器的标准输入保持打开</li><li><code>-d</code>，会让Docker容器在后台以守护形式运行，获取容器输出信息</li></ul><p>例如 <code>docker run -t -i ubuntu:14.04 /bin/bash</code> 会启动一个bash终端，允许用户进行交互，举例如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost test]# docker run -t -i ubuntu:14.04 /bin/bash</span><br><span class="line">root@eac23878c8bf:/# pwd</span><br><span class="line">/</span><br><span class="line">root@eac23878c8bf:/# ls</span><br><span class="line">bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var</span><br><span class="line">root@eac23878c8bf:/# ps</span><br><span class="line">   PID TTY          TIME CMD</span><br><span class="line">     1 pts/0    00:00:00 bash</span><br><span class="line">    15 pts/0    00:00:00 ps</span><br><span class="line">root@eac23878c8bf:/# exit</span><br><span class="line">exit</span><br><span class="line">[root@localhost test]# docker run -d ubuntu:14.04 /bin/sh -c &quot;while true; do echo hello word; sleep 1; done&quot;</span><br><span class="line">2105fbb444b3b028a1b26ec5879d8d282ccc2fa7d0a9776a8a86e808d3414843</span><br><span class="line">[root@localhost test]# docker ps -a</span><br><span class="line">CONTAINER ID     IMAGE            COMMAND                  CREATED           STATUS             PORTS     NAMES</span><br><span class="line">2105fbb444b3     ubuntu:14.04     &quot;/bin/sh -c &#x27;while...&quot;   11 seconds ago    Up 10 seconds                confident_payne</span><br><span class="line">eac23878c8bf     ubuntu:14.04     &quot;/bin/bash&quot;              2 minutes ago     Exited (0) 2 minutes ago     adoring_shockley</span><br><span class="line">[root@localhost test]# docker logs 2105fbb444b3</span><br><span class="line">hello word</span><br><span class="line">hello word</span><br><span class="line">hello word</span><br><span class="line">hello word</span><br><span class="line">...</span><br><span class="line">[root@localhost test]# docker stop 2105</span><br></pre></td></tr></table></figure><h4 id="停止容器"><a class="markdownIt-Anchor" href="#停止容器"></a> 停止容器</h4><p><code>docker stop  </code>命令用于停止一个正在运行的容器</p><p>可选参数：</p><ul><li><code>-t</code>， 指定停止容器前等待的秒数。默认值是10秒</li></ul><p>扩展：</p><p><code>docker ps -a -q</code> 命令为查看所有(<code>-a</code>)的容器ID(<code>-q</code>)，这条命令也可以提供给另外的命令组合使用，如下：</p><p><code>docker stop $(docker ps -a -q)</code> ，命令为停止所有容器</p><p><code>docker restart</code> 将一个运行态的容器终止然后再重新启动它。</p><h4 id="进入容器-2"><a class="markdownIt-Anchor" href="#进入容器-2"></a> 进入容器</h4><p>在运行容器的时候使用<code>-d</code>参数，容器会进入后台，用户无法看到容器中的信息，需要通过命令来进入到容器中进行操作。</p><p><code>docker attach CONTAINER</code> 它允许我们连接到正在运行的容器并在其中运行命令。可以使用它来在容器内部执行操作，例如查看容器的日志或运行容器内的应用程序。这条命令将会打开一个新的终端窗口，可以在容器内部运行命令。要退出容器，可以使用快捷键 <code>Ctrl+P</code> 和 <code>Ctrl+Q</code>。</p><p>注意，<code>docker attach</code> 命令只能用于连接正在运行的容器。如果要连接已停止的容器，我们需要使用 <code>docker exec</code> 命令。</p><p><code>docker exec</code> 命令的语法如下：</p><p><code>docker exec [OPTIONS] CONTAINER COMMAND [ARG...]</code></p><p>其中，<code>CONTAINER</code> 是要连接的容器的名称或 ID，<code>COMMAND</code> 是要在容器内部运行的命令，<code>ARG</code> 是命令的参数。</p><p>例如，假设想要在名为 <code>my_container</code> 的容器内部运行命令 <code>ls -l</code>，可以使用下面的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec my_container ls -l</span><br></pre></td></tr></table></figure><p>要在容器中使用 bash，举例如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost test]# docker exec -ti a0bb97c292d1 /bin/bash</span><br><span class="line">root@a0bb97c292d1:/# ls</span><br><span class="line">bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var</span><br><span class="line">root@a0bb97c292d1:/# exit</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><h4 id="删除容器-2"><a class="markdownIt-Anchor" href="#删除容器-2"></a> 删除容器</h4><p>可以使用<code>docker rm [OPTIONS] CONTAINER [CONTAINER...]</code>命令删除处于终止状态的容器。</p><p>可选参数：</p><ul><li><code>-f</code>，–force=false 强行终止并删除一个运行中的容器</li><li><code>-l</code>，–link=false 删除容器的连接，但保留容器</li><li><code>-v</code>，–volumes=false 删除容器挂载的数据卷</li></ul><p>扩展</p><p><code>docker rm $(docker ps -a -q)</code>，删除所有容器</p><h4 id="导入导出"><a class="markdownIt-Anchor" href="#导入导出"></a> 导入导出</h4><p>导出容器是指导出一个已经创建好的容器到一个文件，不管此时这个容器是否处于运行状态，可以使用<code>docker export CONTAINER</code>命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost test]# docker run -tid ubuntu:14.04</span><br><span class="line">547e74d47ec3eb30736aee22c1b7bf2acd6e71470a1ade4561007a10b3b14a36</span><br><span class="line">[root@localhost test]# docker ps -a</span><br><span class="line">CONTAINER ID     IMAGE            COMMAND          CREATED          STATUS           PORTS       NAMES</span><br><span class="line">547e74d47ec3     ubuntu:14.04     &quot;/bin/bash&quot;      6 seconds ago    Up 5 seconds                 unruffled_jennings</span><br><span class="line">[root@localhost test]# docker export 547 &gt; test.tar</span><br><span class="line">[root@localhost test]# ls</span><br><span class="line">test.tar </span><br></pre></td></tr></table></figure><p>导出的文件又可以使用<code>docker import</code>命令导入，成为镜像。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost test]# ls</span><br><span class="line">test.tar</span><br><span class="line">[root@localhost test]# cat test.tar | docker import - test/ubuntu:v1.0</span><br><span class="line">sha256:1ab7c63a882a9bc13ff4673081a237ba8785d47ba69458bfe976c0e5fc7b9c99</span><br><span class="line">[root@localhost test]# docker images</span><br><span class="line">REPOSITORY            TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">test/ubuntu           v1.0                1ab7c63a882a        22 seconds ago      175MB</span><br><span class="line">ubuntu                14.04-server        ae63a9e87332        2 hours ago         215MB</span><br><span class="line">securityweekly/test   latest              68ceff3107a8        3 hours ago         188MB</span><br><span class="line">ubuntu                14.04               dea1945146b9        6 weeks ago         188MB</span><br></pre></td></tr></table></figure><h3 id="其他命令"><a class="markdownIt-Anchor" href="#其他命令"></a> 其他命令</h3><ul><li><p><code>docker --help</code> 查看帮助命令</p></li><li><p><code>docker logs</code>：用于查看容器的日志输出。</p></li><li><p><code>docker volume ls</code> 查看 volume 列表</p></li><li><p><code>docker network ls</code> 查看网络列表</p></li></ul><p>这只是一些常用的 Docker 命令，Docker 还有很多其他的命令和功能。有关 Docker 命令的完整列表，可以参考 Docker 的<a href="https://docs.docker.com/engine/reference/commandline/run/">官方文档</a></p><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><blockquote><p><a href="https://docker.easydoc.net">Docker 快速入门</a></p><p><a href="https://www.jianshu.com/p/f272726db9c5">Docker安装与基本操作</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#简介&quot;&gt;&lt;/a&gt; 简介&lt;/h2&gt;
&lt;p&gt;Docker 是一个开源的容器管理平台，它允许开发人员在轻量级容器中运行应用程序。容器是一种轻量级的虚拟化技术，它允许将应用程序及其依赖项打包在</summary>
      
    
    
    
    <category term="技术" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="容器" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/%E5%AE%B9%E5%99%A8/"/>
    
    <category term="Docker" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/%E5%AE%B9%E5%99%A8/Docker/"/>
    
    
    <category term="技术" scheme="http://blog.heyb.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="容器" scheme="http://blog.heyb.top/tags/%E5%AE%B9%E5%99%A8/"/>
    
    <category term="Docker" scheme="http://blog.heyb.top/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>「RDS」华为云 RDS 恢复误删MySQL数据恢复流程</title>
    <link href="http://blog.heyb.top/2022/12/01/[rds]-huawei-cloud-rds-recovery-process-for-mistakenly-deleting-mysql-data.html"/>
    <id>http://blog.heyb.top/2022/12/01/[rds]-huawei-cloud-rds-recovery-process-for-mistakenly-deleting-mysql-data.html</id>
    <published>2022-11-30T16:00:00.000Z</published>
    <updated>2022-12-25T14:31:45.886Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>本文是记录 2021年4月25日云数据恢复操作</p><p>大致流程是通过 binlog 恢复 mysql 中的数据，我们购买的是华为云 RDS，所以直接在 RDS 进行操作。</p><p>RDS 它的恢复流程是会先将数据全量恢复到 指定日期，再重放 binlog 操作到指定时间点。</p><h2 id="过程"><a class="markdownIt-Anchor" href="#过程"></a> 过程</h2><ol><li><p>登录华为云服务器管理后台</p></li><li><p>在「关注资源」（或者左边菜单栏） - 选中 「云数据库 RDS」</p></li><li><p>在 RDS 控制台中选中 「备份管理」，下载<em><strong>两个备份数据</strong></em>。一个是今天0425日的（是我服务器停机后手动备份的，时间点为：2021/04/25 14:57:39）， 一个是昨日RDS 自动备份的（时间点为2021/04/24 20:51:38）</p></li><li><p>在 RDS 控制台中选中「数据库管理服务（DAS）」，此时会新打开一个 DAS窗口</p></li><li><p>在 DAS 控制台菜单中选中「开发工具」，点击实例名称，如rds-001(192.168.10.20</p></li><li><p>在上菜单栏中选择「binlog」标签 =&gt; 「归档日志」-「起止时间」- 输入具体日期，如 2021/04/24 21:30:00 到 2021/04/24  23:59:59</p></li><li><p>点击解析日志，再点查看日志详细内容，找到我们具体注释操作（动作描述为数据表 xxx 发生 DDL 操作）的具体时间（变更时间）， 举个例子为 22 点整，我们记录下来，届时要回滚的操作就是要指定到这个**#时间点#**</p></li><li><p>回到 RDS 窗口，在 RDS 控制台中选中 「实例管理」，点击实例的名称 - 如rds -001 296ce7f544bd4e889d2e38b934bf80cain01 进入到具体实例的详情中</p></li><li><p>在左侧菜单选择「备份恢复」，选择 「binlog备份」标签</p></li><li><p>「恢复到指定时间点」是指整个库一起恢复，「表级时间点恢复」可以勾选具体表来进行恢复，我们依据需求进行选择，时间点设置到我们进行 DDL操作前的 <strong>#时间点#</strong>，然后进行恢复</p></li><li><p>恢复后我们要恢复对误操作时间点之后的系统操作（即普通用户操作），有两种方法，一种是直接比对时间点后的数据（如根据时间去查询数据，然后比对两份数据），另外一种是在 DAS 中解析 binlog，依据日志对数据重新进行设置值，直至最终恢复完毕</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#背景&quot;&gt;&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;本文是记录 2021年4月25日云数据恢复操作&lt;/p&gt;
&lt;p&gt;大致流程是通过 binlog 恢复 mysql 中的数据，我们购买的是华为云 RD</summary>
      
    
    
    
    <category term="技术" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="RDS" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/RDS/"/>
    
    <category term="华为云" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/RDS/%E5%8D%8E%E4%B8%BA%E4%BA%91/"/>
    
    
    <category term="技术" scheme="http://blog.heyb.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="华为云" scheme="http://blog.heyb.top/tags/%E5%8D%8E%E4%B8%BA%E4%BA%91/"/>
    
    <category term="RDS" scheme="http://blog.heyb.top/tags/RDS/"/>
    
  </entry>
  
  <entry>
    <title>「Go」Go-搭建IM即时通讯系列文章1-搭建基础框架</title>
    <link href="http://blog.heyb.top/2022/11/27/go-go---building-im-instant-messaging-series-1---building-the-infrastructure.html"/>
    <id>http://blog.heyb.top/2022/11/27/go-go---building-im-instant-messaging-series-1---building-the-infrastructure.html</id>
    <published>2022-11-27T15:06:20.000Z</published>
    <updated>2022-12-25T14:29:19.675Z</updated>
    
    <content type="html"><![CDATA[<p>通过「Go」Go 组件系列文章，我们已经了解了一些组件的基本使用。下面我们将以实现登录功能为目标来完整的搭建一个基础框架。</p><p>和上述步骤一样，我们从配置项搭建开始，在  <code>项目根目录/src/main/</code> 目录下新建一个 <code>config</code> 目录，用于存放配置文件。在该目录下新建 <code>database</code>、<code>settings</code> 目录，并分别新建 <code>database.go</code> 和 <code>settings.go</code> 文件，用做初始化读取配置（viper）以及初始化数据库操作（grom）。</p><h2 id="viper-读取配置"><a class="markdownIt-Anchor" href="#viper-读取配置"></a> Viper 读取配置</h2><p><code>settings.go</code> 提供了读取配置并设置到全局实体提供给其他类使用，代码如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Package settings</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">此文件用于读取配置文件 app.yml，并设置到对应实体，以提供给其他文件使用。</span></span><br><span class="line"><span class="comment">因此该文件需要优先进行初始化操作</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">package</span> settings</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/spf13/viper&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义实体装载配置文件内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Settings 设置</span></span><br><span class="line"><span class="keyword">type</span> Settings <span class="keyword">struct</span> &#123;</span><br><span class="line">Server   Server   <span class="string">`mapstructure:&quot;server&quot;`</span></span><br><span class="line">Database Database <span class="string">`mapstructure:&quot;db&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Setting = &amp;Settings&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Server 服务</span></span><br><span class="line"><span class="keyword">type</span> Server <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="comment">// Url 地址</span></span><br><span class="line">Url <span class="type">string</span> <span class="string">`mapstructure:&quot;url&quot;`</span></span><br><span class="line"><span class="comment">// Port 端口</span></span><br><span class="line">Port <span class="type">int</span> <span class="string">`mapstructure:&quot;port&quot;`</span></span><br><span class="line"><span class="comment">// ReadTimeout 读取超时</span></span><br><span class="line">ReadTimeout time.Duration <span class="string">`mapstructure:&quot;readTimeout&quot;`</span></span><br><span class="line"><span class="comment">// WriteTimeout 写入超时</span></span><br><span class="line">WriteTimeout time.Duration <span class="string">`mapstructure:&quot;writeTimeout&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ServerSetting = &amp;Server&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Database 数据库</span></span><br><span class="line"><span class="keyword">type</span> Database <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="comment">// Type 类型</span></span><br><span class="line">Type        <span class="type">string</span> <span class="string">`mapstructure:&quot;type&quot;`</span></span><br><span class="line">User        <span class="type">string</span> <span class="string">`mapstructure:&quot;user&quot;`</span></span><br><span class="line">Password    <span class="type">string</span> <span class="string">`mapstructure:&quot;password&quot;`</span></span><br><span class="line">Host        <span class="type">string</span> <span class="string">`mapstructure:&quot;host&quot;`</span></span><br><span class="line">Name        <span class="type">string</span> <span class="string">`mapstructure:&quot;name&quot;`</span></span><br><span class="line">TablePrefix <span class="type">string</span> <span class="string">`mapstructure:&quot;prefix&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> DatabaseSetting = &amp;Database&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Setup 设置</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Setup</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 配置文件名(不带扩展名，即 app.yml 只需要app这部分)</span></span><br><span class="line">viper.SetConfigName(<span class="string">&quot;app&quot;</span>)</span><br><span class="line"><span class="comment">// 如果配置文件名称中没有扩展名，则为必填项</span></span><br><span class="line">viper.SetConfigType(<span class="string">&quot;yaml&quot;</span>)</span><br><span class="line"><span class="comment">// 在其中查找配置文件的路径</span></span><br><span class="line">viper.AddConfigPath(<span class="string">&quot;src/resource/&quot;</span>)</span><br><span class="line"><span class="comment">// 查找并读取配置文件</span></span><br><span class="line">err := viper.ReadInConfig()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// 处理读取配置文件时出现的错误</span></span><br><span class="line"><span class="built_in">panic</span>(fmt.Errorf(<span class="string">&quot;读取配置异常: %w&quot;</span>, err))</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;初始化配置文件成功&quot;</span>)</span><br><span class="line">viper.WatchConfig()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将配置信息解析为实体</span></span><br><span class="line">err = viper.UnmarshalKey(<span class="string">&quot;settings&quot;</span>, Setting)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(fmt.Errorf(<span class="string">&quot;读取配置异常，解析失败: %w&quot;</span>, err))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置为全局变量，后续有其他配置则新增实体和变量即可</span></span><br><span class="line">ServerSetting = &amp;Setting.Server</span><br><span class="line">DatabaseSetting = &amp;Setting.Database</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置初始值</span></span><br><span class="line"><span class="comment">// 超时时间单位设置为秒</span></span><br><span class="line">ServerSetting.ReadTimeout = ServerSetting.ReadTimeout * time.Second</span><br><span class="line">ServerSetting.WriteTimeout = ServerSetting.WriteTimeout * time.Second</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>该类主要操作</p><ol><li>读取配置文件并解析为实体</li><li>设置全局变量提供给其他类使用</li><li>设置初始值</li></ol><h2 id="gorm-连接数据库"><a class="markdownIt-Anchor" href="#gorm-连接数据库"></a> Gorm 连接数据库</h2><p><code>database.go</code> 提供了初始化数据库连接的操作，代码如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> database</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/driver/mysql&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/gorm&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/gorm/logger&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line"><span class="string">&quot;star-im/src/main/config/settings&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// DBS 定义全局变量，提供给其他方法调用</span></span><br><span class="line"><span class="keyword">var</span> DBS *gorm.DB</span><br><span class="line"></span><br><span class="line"><span class="comment">// Setup 初始化数据库连接</span></span><br><span class="line"><span class="comment">// https://gorm.io/zh_CN/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Setup</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> err <span class="type">error</span></span><br><span class="line"><span class="comment">//定义连接路径</span></span><br><span class="line">dsn := fmt.Sprintf(<span class="string">&quot;%s:%s@tcp(%s)/%s?charset=utf8&amp;parseTime=True&amp;loc=Local&quot;</span>,</span><br><span class="line">settings.DatabaseSetting.User,</span><br><span class="line">settings.DatabaseSetting.Password,</span><br><span class="line">settings.DatabaseSetting.Host,</span><br><span class="line">settings.DatabaseSetting.Name)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接数据库，并设置基本的配置</span></span><br><span class="line"><span class="comment">// 日志</span></span><br><span class="line">newLogger := logger.New(</span><br><span class="line">log.New(os.Stdout, <span class="string">&quot;\r\n&quot;</span>, log.LstdFlags), <span class="comment">// io writer（日志输出的目标，前缀和日志包含的内容）</span></span><br><span class="line">logger.Config&#123;</span><br><span class="line"><span class="comment">// 慢 SQL 阈值</span></span><br><span class="line">SlowThreshold: time.Second,</span><br><span class="line"><span class="comment">// 日志级别</span></span><br><span class="line">LogLevel: logger.Silent,</span><br><span class="line"><span class="comment">// 忽略ErrRecordNotFound（记录未找到）错误</span></span><br><span class="line">IgnoreRecordNotFoundError: <span class="literal">true</span>,</span><br><span class="line"><span class="comment">// 彩色打印</span></span><br><span class="line">Colorful: <span class="literal">true</span>,</span><br><span class="line">&#125;,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">DBS, err = gorm.Open(mysql.Open(dsn), &amp;gorm.Config&#123;</span><br><span class="line">Logger: newLogger,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(fmt.Errorf(<span class="string">&quot;初始化数据库异常: %w&quot;</span>, err))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取通用数据库对象 sql.DB ，然后使用其提供的功能</span></span><br><span class="line">sqlDB, err := DBS.DB()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用于设置连接池中空闲连接的最大数量。</span></span><br><span class="line">sqlDB.SetMaxIdleConns(<span class="number">10</span>)</span><br><span class="line"><span class="comment">// 设置打开数据库连接的最大数量。</span></span><br><span class="line">sqlDB.SetMaxOpenConns(<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置了连接可复用的最大时间。</span></span><br><span class="line">sqlDB.SetConnMaxLifetime(time.Hour)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>该类主要操作</p><ol><li>读取数据库连接配置</li><li>初始化数据库连接</li><li>定义了 慢 SQL 日志配置</li><li>设置了数据库连接池配置</li><li>返回全局变量DBS供其他类使用</li></ol><h2 id="init-加载配置"><a class="markdownIt-Anchor" href="#init-加载配置"></a> Init 加载配置</h2><p>在  <code>项目根目录/src/main/config</code> 目录下新建 <code>init.go</code> 文件，用于初始化上面两个配置项。</p><p><code>init.go</code> 代码如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> config</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;star-im/src/main/config/database&quot;</span></span><br><span class="line"><span class="string">&quot;star-im/src/main/config/redis&quot;</span></span><br><span class="line"><span class="string">&quot;star-im/src/main/config/settings&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Initial 初始化</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Initial</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 初始化配置</span></span><br><span class="line">settings.Setup()</span><br><span class="line"><span class="comment">// 初始化数据库连接</span></span><br><span class="line">database.Setup()</span><br><span class="line">  <span class="comment">// 后续有其他配置项可以在下面添加……</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>该文件到时候放在main方法中执行即可</p><h2 id="main-程序入口"><a class="markdownIt-Anchor" href="#main-程序入口"></a> Main 程序入口</h2><p>在  <code>项目根目录</code> 下新建一个 <code>main.go</code> 作为我们作为http程序主入口，参考 <code>gin</code> 章节初始化<code>gin</code></p><p><code>main.go</code> 代码如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line"><span class="string">&quot;star-im/src/main/config&quot;</span></span><br><span class="line"><span class="string">&quot;star-im/src/main/config/settings&quot;</span></span><br><span class="line"><span class="string">&quot;star-im/src/main/routers&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// init 初始化</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 初始化配置项</span></span><br><span class="line">config.Initial()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 路由</span></span><br><span class="line">routersInit := routers.Setup()</span><br><span class="line"><span class="comment">// 读取超时</span></span><br><span class="line">readTimeout := settings.ServerSetting.ReadTimeout</span><br><span class="line"><span class="comment">// 写入超时</span></span><br><span class="line">writeTimeout := settings.ServerSetting.WriteTimeout</span><br><span class="line"><span class="comment">// 端口</span></span><br><span class="line">endPoint := fmt.Sprintf(<span class="string">&quot;:%d&quot;</span>, settings.ServerSetting.Port)</span><br><span class="line"><span class="comment">// 最大 header 数</span></span><br><span class="line">maxHeaderBytes := <span class="number">1</span> &lt;&lt; <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置 http Server</span></span><br><span class="line">server := &amp;http.Server&#123;</span><br><span class="line">Addr:           endPoint,</span><br><span class="line">Handler:        routersInit,</span><br><span class="line">ReadTimeout:    readTimeout,</span><br><span class="line">WriteTimeout:   writeTimeout,</span><br><span class="line">MaxHeaderBytes: maxHeaderBytes,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log.Printf(<span class="string">&quot;[info] 启动http服务器侦听 %s&quot;</span>, endPoint)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动服务</span></span><br><span class="line">err := server.ListenAndServe()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// 启动异常</span></span><br><span class="line"><span class="built_in">panic</span>(fmt.Errorf(<span class="string">&quot;启动服务异常：%w&quot;</span>, err))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>该类主要操作</p><ol><li>初始化配置</li><li>初始化路由配置以及服务基础设置</li></ol><p><code>routers.Setup()</code> ，路由等信息单独放在另外一个目录 <code>routers</code>中来统一管理。</p><h2 id="router-路由配置"><a class="markdownIt-Anchor" href="#router-路由配置"></a> router 路由配置</h2><p>在  <code>项目根目录/src/main/</code> 目录下新建一个 <code>routers</code> 目录，并按照层级建立 <code>api/v1</code> 两个目录，用于存放路由接口。v1<br>表示接口版本号，方便后续迭代接口版本。</p><p>在 <code>项目根目录/src/main/routers/api</code> 目录下创建 <code>health.go</code> ，代码如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> api</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"><span class="string">&quot;star-im/src/main/common/app&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Ping 接口连通性测试</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Ping</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 直接返回成功结果</span></span><br><span class="line">c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line"><span class="string">&quot;msg&quot;</span>: <span class="string">&quot;成功&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该类主要做连通性测试，因此直接返回json成功数据</p><p>在 <code>项目根目录/src/main/routers</code>  目录下创建 <code>router.go</code> 文件用于初始化路由配置，代码如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> routers</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"><span class="string">&quot;io&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line"><span class="string">&quot;star-im/src/main/handler&quot;</span></span><br><span class="line"><span class="string">&quot;star-im/src/main/routers/api&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Setup 初始化路由</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Setup</span><span class="params">()</span></span> *gin.Engine &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"><span class="comment">// 记录到文件</span></span><br><span class="line">f, _ := os.Create(<span class="string">&quot;gin.log&quot;</span>)</span><br><span class="line">gin.DefaultWriter = io.MultiWriter(f)</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 使用中间件</span></span><br><span class="line">  <span class="comment">// 统一日志</span></span><br><span class="line">r.Use(gin.Logger())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不需要鉴权</span></span><br><span class="line">r.GET(<span class="string">&quot;/ping&quot;</span>, api.Ping)</span><br><span class="line">  </span><br><span class="line"><span class="keyword">return</span> r</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该类主要操作</p><ol><li>初始化路由设置</li><li>指定记录日志到文件</li><li>指定具体的路由地址以及请求方式和响应函数</li></ol><p>这时候我们启动根目录下的 <code>main</code>函数即可启动服务，通过浏览器访问：<a href="http://localhost:8081/ping">http://localhost:8081/ping</a> 可以得到返回值</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>到这一步我们已经能够提供一个提供基础访问的应用，后续我们继续完善应用的内容。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;通过「Go」Go 组件系列文章，我们已经了解了一些组件的基本使用。下面我们将以实现登录功能为目标来完整的搭建一个基础框架。&lt;/p&gt;
&lt;p&gt;和上述步骤一样，我们从配置项搭建开始，在  &lt;code&gt;项目根目录/src/main/&lt;/code&gt; 目录下新建一个 &lt;code&gt;con</summary>
      
    
    
    
    <category term="技术" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Golang" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/Golang/"/>
    
    
    <category term="技术" scheme="http://blog.heyb.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Golang" scheme="http://blog.heyb.top/tags/Golang/"/>
    
  </entry>
  
  <entry>
    <title>「Go」Go-搭建IM即时通讯系列文章2-统一返回值及异常处理</title>
    <link href="http://blog.heyb.top/2022/11/27/go-go---building-im-instant-messaging-series-2---unified-return-values-and-exception-handling.html"/>
    <id>http://blog.heyb.top/2022/11/27/go-go---building-im-instant-messaging-series-2---unified-return-values-and-exception-handling.html</id>
    <published>2022-11-27T15:06:20.000Z</published>
    <updated>2022-12-25T14:29:33.480Z</updated>
    
    <content type="html"><![CDATA[<p>在软件开发过程中，通过定义统一返回值还可以提高框架的可用性和可维护性，让开发人员更容易理解和使用框架中的各种功能。同时统一异常处理能够帮助我们更好地控制程序的流程，能够让我们更好地捕获异常并作出相应的处理。这样做可以帮助我们减少代码重复，提高代码的可读性和可维护性。</p><h2 id="统一返回值"><a class="markdownIt-Anchor" href="#统一返回值"></a> 统一返回值</h2><p>我们规范约定返回值参数有利于我们对数据进行管理以及提升前后端开发的效率。</p><p>在  <code>项目根目录/src/main/</code> 目录下新建一个<code>common/app</code> 层级目录，并在 <code>app </code>目录下分别建立 <code>code.go</code>、<code>msg.go</code>、 <code>response.go</code> 用于存放 返回值、返回消息、统一返回值的实体对象。</p><p><code>code.go</code> 主要定义返回值常量，代码如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> app</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;net/http&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">  <span class="comment">// 成功使用 200</span></span><br><span class="line">SUCCESS = http.StatusOK</span><br><span class="line">  <span class="comment">// 异常使用 -1</span></span><br><span class="line">ERROR   = <span class="number">-1</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><code>msg.go</code> 主要定义返回值常量对应的消息内容，代码如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> app</span><br><span class="line"></span><br><span class="line"><span class="comment">// MessageMap 返回值常量对应的消息内容，消息集合：&#123;消息码，消息内容&#125;</span></span><br><span class="line"><span class="keyword">var</span> MessageMap = <span class="keyword">map</span>[<span class="type">int</span>]<span class="type">string</span>&#123;</span><br><span class="line">SUCCESS: <span class="string">&quot;成功&quot;</span>,</span><br><span class="line">ERROR:   <span class="string">&quot;失败&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// GetMsg 根据代码获取返回信息</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetMsg</span><span class="params">(code <span class="type">int</span>)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">msg, ok := MessageMap[code]</span><br><span class="line"><span class="keyword">if</span> ok &#123;</span><br><span class="line"><span class="keyword">return</span> msg</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> MessageMap[ERROR]</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>response.go</code> 主要定义返回值的对象，代码如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> app</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Response 响应对象</span></span><br><span class="line"><span class="keyword">type</span> Response <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="comment">// 响应编码</span></span><br><span class="line">Code <span class="type">int</span> <span class="string">`json:&quot;code&quot;`</span></span><br><span class="line"><span class="comment">// 返回消息</span></span><br><span class="line">Msg <span class="type">string</span> <span class="string">`json:&quot;msg&quot;`</span></span><br><span class="line"><span class="comment">// 返回数据</span></span><br><span class="line">Data <span class="keyword">interface</span>&#123;&#125; <span class="string">`json:&quot;data&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Res 设置 gin.JSON 的内容</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Res</span><span class="params">(c *gin.Context, httpCode, errCode <span class="type">int</span>, data <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">c.JSON(httpCode, Response&#123;</span><br><span class="line">Code: errCode,</span><br><span class="line">Msg:  GetMsg(errCode),</span><br><span class="line">Data: data,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Success 返回成功结果</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Success</span><span class="params">(c *gin.Context, data <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">Res(c, http.StatusOK, SUCCESS, data)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Error 返回错误结果，异常结果放在统一异常处理 handler中</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Error</span><span class="params">(c *gin.Context, data <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">Res(c, http.StatusOK, ERROR, data)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这时我们可以修改 <code>src/main/routers/api/health.go</code> 中返回的结果如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> api</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"><span class="string">&quot;star-im/src/main/common/app&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Ping 接口连通性测试</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Ping</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 直接返回成功结果</span></span><br><span class="line">app.Success(c, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这时候我们通过浏览器访问 <a href="http://localhost:8081/ping%EF%BC%8C%E5%BE%97%E5%88%B0%E5%A6%82%E4%B8%8B%E8%BF%94%E5%9B%9E%EF%BC%9A">http://localhost:8081/ping，得到如下返回：</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span><span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span><span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这时候我们就可以根据不同的返回值进行不同的业务处理了</p><h2 id="统一异常处理"><a class="markdownIt-Anchor" href="#统一异常处理"></a> 统一异常处理</h2><p>我们需要统一处理系统的异常信息并让异常结果也显示为统一的返回结果对象，那么需要进行统一异常处理。</p><p>在  <code>项目根目录/src/main/</code> 目录下新建一个 <code>handler</code> 目录，并在目录下新建一个 <code>exception.go</code> 文件，用于处理异常信息</p><p><code>exception.go</code> 代码如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> handler</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line"><span class="string">&quot;runtime/debug&quot;</span></span><br><span class="line"><span class="string">&quot;star-im/src/main/common/app&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Recover 注意 Recover 要尽量放在router.User的第一个被加载</span></span><br><span class="line"><span class="comment">// 如不是的话，在recover前的中间件或路由，将不能被拦截到</span></span><br><span class="line"><span class="comment">// 程序的原理是：</span></span><br><span class="line"><span class="comment">// 1.请求进来，执行recover</span></span><br><span class="line"><span class="comment">// 2.程序异常，抛出panic</span></span><br><span class="line"><span class="comment">// 3.panic被 recover捕获，返回异常信息，并Abort,终止这次请求</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Recover</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := <span class="built_in">recover</span>()</span><br><span class="line"><span class="keyword">if</span> r != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">//打印错误堆栈信息</span></span><br><span class="line">log.Printf(<span class="string">&quot;panic: %v\n&quot;</span>, r)</span><br><span class="line">debug.PrintStack()</span><br><span class="line"><span class="comment">//封装通用json返回</span></span><br><span class="line">c.JSON(http.StatusOK, app.Response&#123;</span><br><span class="line">Code: app.ERROR,</span><br><span class="line">Msg:  ErrorToString(r),</span><br><span class="line">Data: <span class="literal">nil</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//终止后续接口调用，不加的话recover到异常后，还会继续执行接口里后续代码</span></span><br><span class="line">c.Abort()</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="comment">//加载完 defer recover，继续后续接口调用</span></span><br><span class="line">c.Next()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ErrorToString recover错误，转string</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ErrorToString</span><span class="params">(r <span class="keyword">interface</span>&#123;&#125;)</span></span> <span class="type">string</span> &#123;</span><br><span class="line"><span class="keyword">switch</span> v := r.(<span class="keyword">type</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="type">error</span>:</span><br><span class="line"><span class="keyword">return</span> v.Error()</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> r.(<span class="type">string</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>该类主要捕获panic异常，并返回 json 信息给客户端</p><p>在 <code>src/main/routers/router.go</code> 文件中添加如下代码即可。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 统一异常处理</span></span><br><span class="line">r.Use(handler.Recover)</span><br></pre></td></tr></table></figure><p>此时我们可以修改<code>router</code>中 <code>/ping</code> 的方法来测试结果</p><p>将 <code>src/main/routers/router.go</code> 中如下代码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r.GET(<span class="string">&quot;/ping&quot;</span>, api.Ping)</span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">r.GET(<span class="string">&quot;/ping&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 无意抛出 panic</span></span><br><span class="line"><span class="keyword">var</span> slice = []<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line">slice[<span class="number">6</span>] = <span class="number">6</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>然后重启项目，通过浏览器访问 <a href="http://localhost:8081/ping%EF%BC%8C%E5%BE%97%E5%88%B0%E5%A6%82%E4%B8%8B%E8%BF%94%E5%9B%9E%EF%BC%9A">http://localhost:8081/ping，得到如下返回：</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span><span class="number">-1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span><span class="string">&quot;runtime error: index out of range [6] with length 5&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>现在我们得到的就是统一的异常返回值，这里的 msg 可以根据需要再进行修改。</p><p>在业务中我们可以通过判断业务逻辑，再进行抛出异常，如将刚才函数中的内容修改为如下代码：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">r.GET(<span class="string">&quot;/ping&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">   <span class="comment">// 抛出 panic, true这里可以改为自己的业务处理逻辑</span></span><br><span class="line">   <span class="keyword">if</span> <span class="literal">true</span> &#123;</span><br><span class="line">      <span class="built_in">panic</span>(<span class="string">&quot;抛出了指定的异常信息&quot;</span>)</span><br><span class="line">   &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>通过浏览器访问 <a href="http://localhost:8081/ping%EF%BC%8C%E5%BE%97%E5%88%B0%E5%A6%82%E4%B8%8B%E8%BF%94%E5%9B%9E%EF%BC%9A">http://localhost:8081/ping，得到如下返回：</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span><span class="number">-1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span><span class="string">&quot;抛出了指定的异常信息&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>可以看到成功捕获了 panic 抛出的异常信息，这可以很方便我们做业务逻辑的时候处理异常。（测试成功后记得把ping的函数恢复回之前的）</p><p>gin router 中也提供了针对 NoRoute 和 NoMethod 的处理，在 <code>router.go</code> 中添加</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 处理404</span></span><br><span class="line">r.NoRoute(handler.HandleNotFound)</span><br><span class="line">r.NoMethod(handler.HandleNotFound)</span><br></pre></td></tr></table></figure><p>在 <code>src/main/handler/exception.go</code> 中添加处理方法，直接返回处理结果即可</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HandleNotFound</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">  <span class="comment">// 我这里使用的是统一返回值</span></span><br><span class="line">app.ErrorWithCode(c, app.NOT_FOUND, <span class="literal">nil</span>)</span><br><span class="line">  <span class="comment">// // 你们也可以直接使用普通的返回结果，如下</span></span><br><span class="line">  <span class="comment">// c.JSON(http.StatusOK, gin.H&#123;</span></span><br><span class="line"><span class="comment">//&quot;msg&quot;: &quot;找不到资源&quot;,</span></span><br><span class="line">  <span class="comment">//    &quot;code&quot;: 404,</span></span><br><span class="line">  <span class="comment">//    &quot;data&quot;: &quot;&quot;</span></span><br><span class="line">  <span class="comment">// &#125;)</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="swag-接口文档"><a class="markdownIt-Anchor" href="#swag-接口文档"></a> swag 接口文档</h2><p>Swagger是一种API框架，它可以为REST APIs定义、生成、测试和文档化。它使用一种名为Swagger元数据的特殊格式来描述API，并使用Swagger UI来展示API的定义。这使得开发人员可以在不离开API文档的情况下测试API，并且可以轻松地为API创建文档。</p><p>我们引入 Swagger 来生成接口文档，方便统一管理接口及调试。</p><p>相关链接：</p><p><a href="https://github.com/swaggo/swag/blob/master/README_zh-CN.md">GitHub</a></p><h3 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go install github.com/swaggo/swag/cmd/swag@latest</span><br></pre></td></tr></table></figure><h3 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swag init -o &quot;src/main/docs&quot;</span><br></pre></td></tr></table></figure><ul><li>-o 为 output，指定输出目录，默认为“./docs”</li></ul><p>其他更多文章参考 <a href="https://github.com/swaggo/swag/blob/v1.8.8/README_zh-CN.md">GitHub中文文档</a></p><p>在主程序入口 <code>main.go</code> 中可以添加如下注释：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @title           Star-IM</span></span><br><span class="line"><span class="comment">// @version         1.0</span></span><br><span class="line"><span class="comment">// @description     即时通讯接口文档</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  ……</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 <code>src/main/routers/api/health.go</code> 文件中添加如下注释</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Ping</span></span><br><span class="line"><span class="comment">// @Summary      健康检查</span></span><br><span class="line"><span class="comment">// @Description  接口连通性测试</span></span><br><span class="line"><span class="comment">// @Tags         测试</span></span><br><span class="line"><span class="comment">// @Success      200  &#123;object&#125;  app.Response</span></span><br><span class="line"><span class="comment">// @Router       /ping [get]</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Ping</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">  ……</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 <code>src/main/routers/router.go</code> 加入swagger接口文档的访问，并引入指定了目录的swagger文件</p><p>代码如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> routers</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">swaggerFiles <span class="string">&quot;github.com/swaggo/files&quot;</span></span><br><span class="line">ginSwagger <span class="string">&quot;github.com/swaggo/gin-swagger&quot;</span></span><br><span class="line"><span class="string">&quot;io&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line">_ <span class="string">&quot;star-im/src/main/docs&quot;</span></span><br><span class="line"><span class="string">&quot;star-im/src/main/handler&quot;</span></span><br><span class="line"><span class="string">&quot;star-im/src/main/routers/api&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Setup 初始化路由</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Setup</span><span class="params">()</span></span> *gin.Engine &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"><span class="comment">// 记录到文件</span></span><br><span class="line">f, _ := os.Create(<span class="string">&quot;gin.log&quot;</span>)</span><br><span class="line">gin.DefaultWriter = io.MultiWriter(f)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用中间件</span></span><br><span class="line"><span class="comment">// 统一异常处理</span></span><br><span class="line">r.Use(handler.Recover)</span><br><span class="line"><span class="comment">// 统一日志</span></span><br><span class="line">r.Use(gin.Logger())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不需要鉴权</span></span><br><span class="line">r.GET(<span class="string">&quot;/ping&quot;</span>, api.Ping)</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/swagger/*any&quot;</span>, ginSwagger.WrapHandler(swaggerFiles.Handler))</span><br><span class="line"><span class="keyword">return</span> r</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要变更内容为</p><ul><li><code>import  _ &quot;star-im/src/main/docs&quot;</code></li><li><code>import swaggerFiles &quot;github.com/swaggo/files&quot;</code></li><li><code>import ginSwagger &quot;github.com/swaggo/gin-swagger&quot;</code></li><li><code>r.GET(&quot;/swagger/*any&quot;, ginSwagger.WrapHandler(swaggerFiles.Handler))</code></li></ul><h4 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h4><p>通过浏览器访问 <a href="http://localhost:8081/swagger/index.html#/">http://localhost:8081/swagger/index.html#/</a> 可以进入到swagger 接口文档的管理界面</p><p>至此，当前目录结构为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── LICENSE</span><br><span class="line">├── README.md</span><br><span class="line">├── doc</span><br><span class="line">│   └── build</span><br><span class="line">│       └── 1-framwork.md</span><br><span class="line">├── gin.log</span><br><span class="line">├── go.mod</span><br><span class="line">├── go.sum</span><br><span class="line">├── main.go</span><br><span class="line">└── src</span><br><span class="line">    ├── main</span><br><span class="line">    │   ├── common</span><br><span class="line">    │   │   └── app</span><br><span class="line">    │   │       ├── code.go</span><br><span class="line">    │   │       ├── msg.go</span><br><span class="line">    │   │       └── response.go</span><br><span class="line">    │   ├── config</span><br><span class="line">    │   │   ├── database</span><br><span class="line">    │   │   │   └── database.go</span><br><span class="line">    │   │   ├── init.go</span><br><span class="line">    │   │   └── settings</span><br><span class="line">    │   │       └── settings.go</span><br><span class="line">    │   ├── docs</span><br><span class="line">    │   │   ├── docs.go</span><br><span class="line">    │   │   ├── swagger.json</span><br><span class="line">    │   │   └── swagger.yaml</span><br><span class="line">    │   ├── handler</span><br><span class="line">    │   │   └── exception.go</span><br><span class="line">    │   ├── models</span><br><span class="line">    │   │   └── model.go</span><br><span class="line">    │   ├── routers</span><br><span class="line">    │   │   ├── api</span><br><span class="line">    │   │   │   ├── health.go</span><br><span class="line">    │   │   │   └── v1</span><br><span class="line">    │   │   └── router.go</span><br><span class="line">    │   └── util</span><br><span class="line">    ├── resource</span><br><span class="line">    │   └── app.yml</span><br><span class="line">    └── test</span><br><span class="line">        └── pkg</span><br><span class="line">            ├── test_gin.go</span><br><span class="line">            ├── test_gorm.go</span><br><span class="line">            ├── test_jwt.go</span><br><span class="line">            ├── test_redis.go</span><br><span class="line">            └── test_viper.go</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在软件开发过程中，通过定义统一返回值还可以提高框架的可用性和可维护性，让开发人员更容易理解和使用框架中的各种功能。同时统一异常处理能够帮助我们更好地控制程序的流程，能够让我们更好地捕获异常并作出相应的处理。这样做可以帮助我们减少代码重复，提高代码的可读性和可维护性。&lt;/p&gt;</summary>
      
    
    
    
    <category term="技术" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Golang" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/Golang/"/>
    
    
    <category term="技术" scheme="http://blog.heyb.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Golang" scheme="http://blog.heyb.top/tags/Golang/"/>
    
  </entry>
  
  <entry>
    <title>「Windows」Windows “因为在此系统上禁止运行脚本”解决办法</title>
    <link href="http://blog.heyb.top/2022/11/26/windows-windows-because-running-scripts-on-this-system-is-disabled-solution.html"/>
    <id>http://blog.heyb.top/2022/11/26/windows-windows-because-running-scripts-on-this-system-is-disabled-solution.html</id>
    <published>2022-11-26T09:11:21.000Z</published>
    <updated>2022-12-25T14:31:30.051Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>最近升级了windows11，然后在系统上安装一些常用工具，遇到了如下的问题。</p><blockquote><p>nrm : 无法加载文件 C:\Users\用户名\AppData\Roaming\npm\nrm.ps1，因为在此系统上禁止运行脚本。</p></blockquote><p><img src="https://pic1.zhimg.com/80/v2-15867761d0618599271045d3cd2fc838_1440w.jpg" alt="img"></p><h2 id="解决方法"><a class="markdownIt-Anchor" href="#解决方法"></a> 解决方法</h2><p>处理方案在提示中有，可以通过访问链接查看：<a href="https://go.microsoft.com/fwlink/?LinkID=135170">https://go.microsoft.com/fwlink/?LinkID=135170</a></p><p>核心是power shell的安全策略，将 nrm 命令视为了不安全脚本，不允许执行。只需要放开权限就行。</p><p>我们通过管理员权限运行power shell，然后输入命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set-ExecutionPolicy RemoteSigned</span><br></pre></td></tr></table></figure><p><img src="https://pic3.zhimg.com/80/v2-9e4bb9af3b778d0d91ce7bdb4eacbdca_1440w.jpg" alt="img"></p><p>选择“是”，就OK了。</p><p>如果要恢复策略则设置则执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set-ExecutionPolicy Default</span><br></pre></td></tr></table></figure><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><blockquote><p><a href="https://zhuanlan.zhihu.com/p/493496089">https://zhuanlan.zhihu.com/p/493496089</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#背景&quot;&gt;&lt;/a&gt; 背景&lt;/h2&gt;
&lt;p&gt;最近升级了windows11，然后在系统上安装一些常用工具，遇到了如下的问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;nrm : 无法加载文件</summary>
      
    
    
    
    <category term="技术" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Windows" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/Windows/"/>
    
    
    <category term="技术" scheme="http://blog.heyb.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Windows" scheme="http://blog.heyb.top/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>「Go」Go 组件系列文章4-gin</title>
    <link href="http://blog.heyb.top/2022/11/23/go-go-component-series-4-gin.html"/>
    <id>http://blog.heyb.top/2022/11/23/go-go-component-series-4-gin.html</id>
    <published>2022-11-23T09:54:20.000Z</published>
    <updated>2022-12-25T14:28:59.028Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h2><p>Go Gin是一个用Go语言编写的HTTP  Web框架。它旨在提供一个简洁而强大的方式来构建Web应用程序。它因为 <a href="https://github.com/julienschmidt/httprouter">httprouter</a> 的性能提高了40倍。具有良好的性能，并且提供了许多有用的功能，例如路由，中间件，模板渲染等。它还具有很好的扩展性，可以与其他Go库和框架集成使用。</p><p>相关链接：</p><p><a href="https://github.com/gin-gonic/gin">GitHub</a></p><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get github.com/gin-gonic/gin</span><br></pre></td></tr></table></figure><h2 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h2><p>在  <code>项目根目录/src/test/pkg</code> 目录下新建 <code>test_gin.go</code> 测试文件</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 默认返回一个已连接日志记录器和恢复中间件的引擎实例。</span></span><br><span class="line">r := gin.Default()</span><br><span class="line"><span class="comment">// 绑定路由 /ping，访问后执行func的方法</span></span><br><span class="line">r.GET(<span class="string">&quot;/ping&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 返回一个 json， 状态值为 200， H的内容为 map[string]</span></span><br><span class="line">c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line"><span class="string">&quot;message&quot;</span>: <span class="string">&quot;pong&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在0.0.0.0：8080上侦听和服务(对于Windows“为 localhost：8080”)</span></span><br><span class="line">err := r.Run()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;启动服务异常：&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通过浏览器访问：<a href="http://localhost:8081/ping">http://localhost:8081/ping</a></p><p>得到如下信息：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pong&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>此时我们就已经完成了http框架的测试，官方 GitHub<br>文档有提供不同请求方式、参数绑定、文件上传等示例，可以参考学习。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#简介&quot;&gt;&lt;/a&gt; 简介&lt;/h2&gt;
&lt;p&gt;Go Gin是一个用Go语言编写的HTTP  Web框架。它旨在提供一个简洁而强大的方式来构建Web应用程序。它因为 &lt;a href=&quot;http</summary>
      
    
    
    
    <category term="技术" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Golang" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/Golang/"/>
    
    
    <category term="技术" scheme="http://blog.heyb.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Golang" scheme="http://blog.heyb.top/tags/Golang/"/>
    
    <category term="gin" scheme="http://blog.heyb.top/tags/gin/"/>
    
  </entry>
  
  <entry>
    <title>「Go」Go 组件系列文章3-gorm</title>
    <link href="http://blog.heyb.top/2022/11/22/go-go-component-series-3-gorm.html"/>
    <id>http://blog.heyb.top/2022/11/22/go-go-component-series-3-gorm.html</id>
    <published>2022-11-22T09:22:20.000Z</published>
    <updated>2022-12-25T14:28:47.622Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h2><p>GORM 是一个用于构建 Go 语言应用程序的对象关系映射（ORM）库。它可以帮助开发人员在 Go 语言项目中更轻松地使用数据库。它支持多种数据库，包括 MySQL、PostgreSQL 和 SQLite，并提供了一组简单易用的 API，可以让开发人员使用 Go 语言的结构体来描述数据库表和字段，并通过这些结构体来执行数据库操作。并支持事务、批量操作等等。和<code>Java</code>的<code>hibernate</code>框架相似。</p><p>相关链接：</p><p><a href="https://github.com/go-gorm/gorm">GitHub</a></p><p><a href="https://gorm.io/zh_CN/docs/index.html">GORM中文网</a></p><h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><h3 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h3><p>要使用 <a href="http://gorm.io/gorm%EF%BC%8C%E9%A6%96%E5%85%88%E9%9C%80%E8%A6%81%E5%AE%89%E8%A3%85%E5%AE%83%E3%80%82%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8">gorm.io/gorm，首先需要安装它。可以使用</a> Go 语言的包管理工具 go mod 来安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">go get gorm.io/gorm</span><br><span class="line">go get gorm.io/driver/mysql</span><br></pre></td></tr></table></figure><p>安装完成后，在 Go 语言项目中就可以引入 gorm 包并使用它了。首先，需要创建一个 gorm.DB 类型的变量，用于表示与数据库的连接：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;gorm.io/gorm&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> db *gorm.DB</span><br></pre></td></tr></table></figure><p>然后，使用 gorm.Open() 函数来连接到数据库：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">db, err := gorm.Open(<span class="string">&quot;mysql&quot;</span>, <span class="string">&quot;user:password@/dbname?charset=utf8&amp;parseTime=True&amp;loc=Local&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">  <span class="built_in">panic</span>(<span class="string">&quot;failed to connect database&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> db.Close()</span><br></pre></td></tr></table></figure><p>其中 user 和password 为连接数据库的用户和密码，dbname 为库名，后面设置根据自己需求设置。</p><p>以下为完整实例：</p><p>创建数据库的步骤忽略，我们约定数据库名称为star-im，用户名和密码均为root。</p><p>在  <code>项目根目录/src/test/pkg</code> 目录下新建 <code>test_gorm.go</code> 测试文件，代码如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/driver/mysql&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/gorm&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// TestProduct 定义一个实体</span></span><br><span class="line"><span class="keyword">type</span> TestProduct <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="comment">// gorm.Model 提供了基础实体的定义，包含了id, CreatedAt, UpdatedAt, DeletedAt 字段</span></span><br><span class="line">gorm.Model</span><br><span class="line"><span class="comment">// Name 商品名称</span></span><br><span class="line">Name <span class="type">string</span></span><br><span class="line"><span class="comment">// Price 商品价格</span></span><br><span class="line">Price <span class="type">uint</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 测试 ORM 框架 —— 连接 MySQL https://github.com/go-gorm/gorm</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 连接信息，字符串中内容分别为：用户名:密码@连接方式(Host:Port)/数据库名?字符集&amp;解析时间&amp;默认时间</span></span><br><span class="line"><span class="comment">// 更多参数详见：https://github.com/go-sql-driver/mysql#parameters</span></span><br><span class="line">dsn := <span class="string">&quot;root:root@tcp(127.0.0.1:3306)/star-im?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span></span><br><span class="line"><span class="comment">// 连接数据库，并设置基本的配置</span></span><br><span class="line">db, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config&#123;&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// 如果连接有异常则打印</span></span><br><span class="line">fmt.Println(<span class="string">&quot;连接数据库失败：&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 迁移 schema，如果数据库该表没有则创建表</span></span><br><span class="line">err = db.AutoMigrate(&amp;TestProduct&#123;&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;创建数据库表异常：&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create 创建记录</span></span><br><span class="line"><span class="comment">// 定义实体</span></span><br><span class="line">product := &amp;TestProduct&#123;Name: <span class="string">&quot;奶茶&quot;</span>, Price: <span class="number">100</span>&#125;</span><br><span class="line"><span class="comment">// 创建记录</span></span><br><span class="line">result := db.Create(product)</span><br><span class="line"><span class="comment">// 创建成功后会返回插入数据的主键给实体赋值 ID</span></span><br><span class="line">fmt.Println(<span class="string">&quot;ID为：&quot;</span>, product.ID)</span><br><span class="line">fmt.Println(<span class="string">&quot;如果有异常，则会输出：&quot;</span>, result.Error)</span><br><span class="line">fmt.Println(<span class="string">&quot;返回插入记录的条数：&quot;</span>, result.RowsAffected)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Find 查询</span></span><br><span class="line">prod := db.First(&amp;product, <span class="string">&quot;name = ?&quot;</span>, <span class="string">&quot;奶茶&quot;</span>)</span><br><span class="line">fmt.Println(<span class="string">&quot;查询数:&quot;</span>, prod.RowsAffected)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查找后返回实体</span></span><br><span class="line">prod2 := TestProduct&#123;&#125;</span><br><span class="line">db.Where(<span class="string">&quot;name = ?&quot;</span>, <span class="string">&quot;奶茶&quot;</span>).First(&amp;prod2)</span><br><span class="line">fmt.Println(<span class="string">&quot;实体：&quot;</span>, prod2)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Update - 修改</span></span><br><span class="line"><span class="comment">// 将 product 的 price 更新为 200</span></span><br><span class="line">db.Model(&amp;product).Update(<span class="string">&quot;Price&quot;</span>, <span class="number">200</span>)</span><br><span class="line"><span class="comment">// Update - 更新多个字段</span></span><br><span class="line">db.Model(&amp;product).Updates(TestProduct&#123;Price: <span class="number">200</span>, Name: <span class="string">&quot;蛋糕&quot;</span>&#125;)</span><br><span class="line"><span class="comment">// 仅更新非零值字段</span></span><br><span class="line">db.Model(&amp;product).Updates(<span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;<span class="string">&quot;Price&quot;</span>: <span class="number">200</span>, <span class="string">&quot;Name&quot;</span>: <span class="string">&quot;蛋糕&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Delete - 逻辑删除 product，会修改 deleted_at，标记为删除</span></span><br><span class="line">db.Delete(&amp;product, <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>执行程序后在控制台输出如下结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ID为： 1</span><br><span class="line">如果有异常，则会输出： &lt;nil&gt;</span><br><span class="line">返回插入记录的条数： 1</span><br><span class="line">查询数: 1</span><br><span class="line">实体： &#123;&#123;1 2022-11-22 16:53:58.969 +0800 CST 2022-11-22 16:53:58.969 +0800 CST &#123;0001-01-01 00:00:00 +0000 UTC false&#125;&#125; 奶茶 100&#125;</span><br></pre></td></tr></table></figure><p>其他更多操作请参考 <a href="https://gorm.io/zh_CN/docs/index.html">GORM中文网</a> ，以及 <a href="https://gorm.io/zh_CN/docs/constraints.html">约束</a>、<a href="https://gorm.io/zh_CN/docs/generic_interface.html">连接池</a> 、<a href="https://gorm.io/zh_CN/docs/logger.html">日志</a> 等配置可根据自身需求学习设置。我在后续过程中也会讲解并设置。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#简介&quot;&gt;&lt;/a&gt; 简介&lt;/h2&gt;
&lt;p&gt;GORM 是一个用于构建 Go 语言应用程序的对象关系映射（ORM）库。它可以帮助开发人员在 Go 语言项目中更轻松地使用数据库。它支持多种数据</summary>
      
    
    
    
    <category term="技术" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Golang" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/Golang/"/>
    
    
    <category term="技术" scheme="http://blog.heyb.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Golang" scheme="http://blog.heyb.top/tags/Golang/"/>
    
    <category term="gorm" scheme="http://blog.heyb.top/tags/gorm/"/>
    
  </entry>
  
  <entry>
    <title>「Go」Go 组件系列文章2-viper</title>
    <link href="http://blog.heyb.top/2022/11/21/go-go-component-series-2-viper.html"/>
    <id>http://blog.heyb.top/2022/11/21/go-go-component-series-2-viper.html</id>
    <published>2022-11-21T11:41:20.000Z</published>
    <updated>2022-12-25T14:28:33.077Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h2><p>Viper是一个完整的Go应用程序配置解决方案，可以用于读取 JSON、TOML、YAML、HCL、env file和Java properties 配置文件。可以使用简单的方法来读取和设置配置值，并且可以设置默认值和类型转换器来确保程序始终能够读取到有效的配置值。</p><p>我们通常将一些配置信息，如数据库的访问路径，端口号等存放在配置文件中方便统一修改。</p><p>在 Java 中通常为 <code>application.yml</code> 或者 <code>applicatiton.properties</code> 文件，然后在 springboot 框架下使<br>用 <code>@ConfigurationProperties(prefix=”setting_name”) </code> 或者 <code>@Value(“valueStr”)</code> 的形式来读取。</p><p>Viper 就是 go 用于做这一部分的工作类库</p><p>相关链接：</p><p><a href="https://github.com/spf13/viper">GitHub</a></p><p><a href="https://pkg.go.dev/github.com/spf13/viper">PKG</a></p><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><p>在项目中打开命令行执行如下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get github.com/spf13/viper</span><br></pre></td></tr></table></figure><h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><p>在 <code>项目根目录/src/resource</code> 资源目录下新建一个 <code>app.yml</code> 配置文件，并写入以下配置项</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">settings:</span></span><br><span class="line">  <span class="attr">server:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">localhost</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8081</span></span><br></pre></td></tr></table></figure><p>注：我们现在约定 <code>settings </code> 为配置项根节点，之后新增例如 <code>settings:database</code>之类的节点，则是在settings下新增一个 <code>database </code>节点，而不是重复设置多一个 <code>settings</code>。 其他新增/修改项也遵循此说法。</p><p>如在settings下新增 <code>database </code>内容， 并修改 <code>server</code>下的端口号为9999，示例如下：</p><p>正确示例为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">settings:</span></span><br><span class="line">  <span class="attr">server:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">localhost</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9999</span></span><br><span class="line"><span class="attr">database:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">mysql</span></span><br></pre></td></tr></table></figure><p>错误示例为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">settings:</span></span><br><span class="line">  <span class="attr">server:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">localhost</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line">    </span><br><span class="line"><span class="attr">server:</span>   </span><br><span class="line"><span class="attr">port:</span> <span class="number">9999</span></span><br><span class="line"><span class="attr">settings:</span></span><br><span class="line"><span class="attr">database:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">mysql</span></span><br></pre></td></tr></table></figure><h2 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h2><p>在  <code>项目根目录/src/test</code> 目录下新建一个 <code>pkg</code> 目录，用于测试引入的第三方类库。在目录下新建 <code>test_viper.go</code> 测试文件</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main 方法必须使用 main 包</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入依赖</span></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/spf13/viper&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主要执行的方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  </span><br><span class="line"><span class="comment">// 配置文件名(不带扩展名，即 app.yml 只需要app这部分)</span></span><br><span class="line">viper.SetConfigName(<span class="string">&quot;app&quot;</span>)</span><br><span class="line"><span class="comment">// 如果配置文件名称中没有扩展名，则为必填项</span></span><br><span class="line">viper.SetConfigType(<span class="string">&quot;yaml&quot;</span>)</span><br><span class="line"><span class="comment">// 在其中查找配置文件的路径</span></span><br><span class="line">viper.AddConfigPath(<span class="string">&quot;src/resource/&quot;</span>)</span><br><span class="line"><span class="comment">// 查找并读取配置文件</span></span><br><span class="line">err := viper.ReadInConfig()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// 处理读取配置文件时出现的错误</span></span><br><span class="line"><span class="built_in">panic</span>(fmt.Errorf(<span class="string">&quot;读取配置异常，原因为: %w&quot;</span>, err))</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">// 打印内容到控制台</span></span><br><span class="line">fmt.Println(<span class="string">&quot;初始化 app 配置成功&quot;</span>)</span><br><span class="line"><span class="comment">// 获取配置文件中的参数</span></span><br><span class="line">url := viper.GetString(<span class="string">&quot;settings.server.url&quot;</span>)</span><br><span class="line">port := viper.GetString(<span class="string">&quot;settings.server.port&quot;</span>)</span><br><span class="line"><span class="comment">// 打印参数</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;配置中的服务器地址及端口号为：%s:%s&quot;</span>, url, port)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>执行程序后在控制台输出如下结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">初始化 app 配置成功</span><br><span class="line">配置中的服务器地址及端口号为：localhost:8081</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#简介&quot;&gt;&lt;/a&gt; 简介&lt;/h2&gt;
&lt;p&gt;Viper是一个完整的Go应用程序配置解决方案，可以用于读取 JSON、TOML、YAML、HCL、env file和Java properti</summary>
      
    
    
    
    <category term="技术" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Golang" scheme="http://blog.heyb.top/categories/%E6%8A%80%E6%9C%AF/Golang/"/>
    
    
    <category term="技术" scheme="http://blog.heyb.top/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Golang" scheme="http://blog.heyb.top/tags/Golang/"/>
    
    <category term="viper" scheme="http://blog.heyb.top/tags/viper/"/>
    
  </entry>
  
</feed>
