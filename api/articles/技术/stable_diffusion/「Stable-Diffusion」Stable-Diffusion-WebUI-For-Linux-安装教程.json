{"title":"「Stable-Diffusion」Stable-Diffusion-WebUI-For-Linux-安装教程","slug":"技术/stable_diffusion/「Stable-Diffusion」Stable-Diffusion-WebUI-For-Linux-安装教程","date":"2023-07-08T14:40:34.000Z","updated":"2023-07-16T15:08:43.940Z","comments":true,"path":"api/articles/技术/stable_diffusion/「Stable-Diffusion」Stable-Diffusion-WebUI-For-Linux-安装教程.json","excerpt":null,"covers":null,"content":"<h2 id=\"背景\"><a class=\"markdownIt-Anchor\" href=\"#背景\"></a> 背景</h2>\n<p>之前我们讲解了如何在Mac 上搭建 Stable-Diffusion-WebUI，但是因为仅能使用CPU的原因，生成图片特别慢。</p>\n<p>本文讲解如何在一台有GPU的Linux服务器上部署。</p>\n<h2 id=\"配置服务器\"><a class=\"markdownIt-Anchor\" href=\"#配置服务器\"></a> 配置服务器</h2>\n<p>首先我们在云服务器商申请购买一台服务器，GPU建议使用 12GB 以上显存的。</p>\n<p>系统镜像我这里选择的是公共镜像CentOS-64位-CentOS 8.4 64位。一定要选择后台自动安装GPU驱动，避免自己手动安装GPU驱动。然后等待一会等系统安装好驱动后再进行安装stable-diffusion-webui</p>\n<p>带宽计费方式可以选择按使用流量计费，带宽值建议拉到 100Mbps，因为安装时需要下载的依赖和模型非常多，非常大，后续我们可以再动态调配带宽。</p>\n<h2 id=\"查看显卡驱动\"><a class=\"markdownIt-Anchor\" href=\"#查看显卡驱动\"></a> 查看显卡驱动</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvidia-smi</span><br></pre></td></tr></table></figure>\n<p>如果显示了一个表格，里面有NVIDIA、Driver Version、CUDA version等信息，则代表GPU驱动已经安装完成。</p>\n<p><code>nvcc -V</code> 也可以查看版本信息，在腾讯云中如果返回 <code>nvcc: command not found</code> 则需要配置一下环境变量。</p>\n<p>进入环境配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">进入环境配置</span></span><br><span class=\"line\">vim ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<p>添加 cuda 环境设置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">在PATH 中添加 /usr/local/cuda/bin，如</span></span><br><span class=\"line\">PATH=$PATH:/usr/local/cuda/bin</span><br><span class=\"line\"></span><br><span class=\"line\">export PATH</span><br></pre></td></tr></table></figure>\n<p>然后按 <code>Esc</code> 退出，输入 <code>:wq</code> 保存 <code>bash_profile</code>， 然后在输入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装-anaconda\"><a class=\"markdownIt-Anchor\" href=\"#安装-anaconda\"></a> 安装 Anaconda</h2>\n<p>官方仓库下载</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://repo.anaconda.com/archive/Anaconda3-2023.03-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n<p>通过清华镜像仓库下载</p>\n<p><a href=\"https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/\">清华大学开源软件镜像站 Anaconda Archive</a> 可以查看现在最新版本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2023.03-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n<p>如果遇到不能下载的，则在 <code>wget </code>后添加参数 <code>wget -U NoSuchBrowser</code>，完整如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -U NoSuchBrowser https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2023.03-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n<p>下载后安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh Anaconda3-2023.03-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n<p>提示enter按回车，提示yes or no的地方全部输入yes即可，安装完成后执行 “bash”命令，重新载入bash终端，确保conda命令可用。安装后还可以配置 Conda 镜像（参考文章：<a href=\"https://mirror.tuna.tsinghua.edu.cn/help/anaconda/\">anaconda 镜像站使用帮助</a>）</p>\n<p>验证安装，可以看到输出信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda info</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装-pytorch\"><a class=\"markdownIt-Anchor\" href=\"#安装-pytorch\"></a> 安装 PyTorch</h2>\n<p>pytorch需要安装到anaconda的虚拟环境中，所以使用conda时需要先有一个虚拟环境并进入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">若还没有虚拟环境需要创建一个，&lt;env_name&gt;是环境名称，python选择指定的版本，sd需要的python&gt;3.10 <span class=\"comment\">#conda create -n &lt;env_name&gt; python=x.xx.x</span></span></span><br><span class=\"line\">conda create -n sd python=3.10.11</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">启动虚拟环境，activate就是启动，sd是环境名称</span></span><br><span class=\"line\">conda activate sd</span><br></pre></td></tr></table></figure>\n<p>去pytorch官网配置自己服务器所需要的pytorch：<a href=\"https://pytorch.org/get-started/locally/\">Start Locally | PyTorch</a></p>\n<p>Pytorch build选择stable稳定版，操作系统是linux，由于上面安装了anaconda所以package选择conda，语言python，服务器上 CUDA是12.0所以选择了CUDA11.8</p>\n<p>选择完成之后下面会有提示的执行代码（Run this Command:），执行pytorch的安装：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install pytorch torchvision torchaudio pytorch-cuda=11.8 -c pytorch -c nvidia</span><br></pre></td></tr></table></figure>\n<p>如果出现提示需要升级conda版本的就输入，没有的话就跳过这步。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda update -n base -c defaults conda</span><br></pre></td></tr></table></figure>\n<p>验证安装结果</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">首先要启动我们的sd虚拟环境，因为我们所有与stable diffusion有关的配置环境都是建立在这个虚拟环境之下的python，pytorch等都是如此</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">进入虚拟环境</span></span><br><span class=\"line\">conda activate sd</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">进入python环境</span></span><br><span class=\"line\">python</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">导入torch</span></span><br><span class=\"line\">import torch</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">查看torch的版本</span></span><br><span class=\"line\">torch.__version__  #各有两条下划线</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">查看cuda版本</span></span><br><span class=\"line\">torch.version.cuda</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">查看GPU是否运行</span></span><br><span class=\"line\">torch.cuda.is_available()</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">退出</span></span><br><span class=\"line\">exit()</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装-stable-diffusion-web-ui\"><a class=\"markdownIt-Anchor\" href=\"#安装-stable-diffusion-web-ui\"></a> 安装 Stable Diffusion-Web-UI</h2>\n<h3 id=\"依赖安装\"><a class=\"markdownIt-Anchor\" href=\"#依赖安装\"></a> 依赖安装</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install mesa-libGL -y</span><br><span class=\"line\">sudo yum install git -y</span><br></pre></td></tr></table></figure>\n<h3 id=\"下载-web-ui\"><a class=\"markdownIt-Anchor\" href=\"#下载-web-ui\"></a> 下载 web-ui</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash &lt;(wget -qO- https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/webui.sh)</span><br></pre></td></tr></table></figure>\n<p>或者通过 git 命令下载（此处使用了镜像源）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.moeyy.xyz/https://github.com/AUTOMATIC1111/stable-diffusion-webui.git</span><br></pre></td></tr></table></figure>\n<p>如果提示错误 <code>OpenSSL SSL_read: Connection was reset, errno 10054</code></p>\n<p>则需要关闭 <code>git</code> 的 <code>https</code> 证书验证，然后重新执行下载</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global http.sslVerify false</span><br></pre></td></tr></table></figure>\n<h3 id=\"预先配置\"><a class=\"markdownIt-Anchor\" href=\"#预先配置\"></a> 预先配置</h3>\n<p>下载完成之后我们进行一些预先的配置，防止后面配置失败。</p>\n<h4 id=\"配置-pip\"><a class=\"markdownIt-Anchor\" href=\"#配置-pip\"></a> 配置 pip</h4>\n<p>设置 pip 源，这里设置的是腾讯云内源</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip config set global.index-url http://mirrors.cloud.tencent.com/pypi/simple</span><br><span class=\"line\">pip config set global.trusted-host mirrors.cloud.tencent.com</span><br></pre></td></tr></table></figure>\n<p>更新 pip 版本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install --upgrade pip</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置-sd\"><a class=\"markdownIt-Anchor\" href=\"#配置-sd\"></a> 配置 SD</h4>\n<p>链接换源。打开 <code>stable-diffusion-webui/modules/launch.until.py</code> 文件</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">torch_command = os.environ.get(<span class=\"string\">&#x27;TORCH_COMMAND&#x27;</span>, <span class=\"string\">&quot;pip install torch==2.0.1 torchvision==0.15.2&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>每个<a href=\"https://github.com/\">https://github.com/</a>  （就在上一步的下面几行，每一个网址都要改）链接前面添加<a href=\"https://ghproxy.com/%EF%BC%8C%E6%9B%BF%E6%8D%A2%E4%B8%BA%E4%BB%A5%E4%B8%8B%E5%86%85%E5%AE%B9\">https://ghproxy.com/，替换为以下内容</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gfpgan_package = os.environ.get(<span class=\"string\">&#x27;GFPGAN_PACKAGE&#x27;</span>, <span class=\"string\">&quot;https://ghproxy.com/https://github.com/TencentARC/GFPGAN/archive/8d2447a2d918f8eba5a4a01463fd48e45126a379.zip&quot;</span>)</span><br><span class=\"line\">clip_package = os.environ.get(<span class=\"string\">&#x27;CLIP_PACKAGE&#x27;</span>, <span class=\"string\">&quot;https://ghproxy.com/https://github.com/openai/CLIP/archive/d50d76daa670286dd6cacf3bcd80b5e4823fc8e1.zip&quot;</span>)</span><br><span class=\"line\">openclip_package = os.environ.get(<span class=\"string\">&#x27;OPENCLIP_PACKAGE&#x27;</span>, <span class=\"string\">&quot;https://ghproxy.com/https://github.com/mlfoundations/open_clip/archive/bb6e834e9c70d9c27d0dc3ecedeebeaeb1ffad6b.zip&quot;</span>)</span><br><span class=\"line\">stable_diffusion_repo = os.environ.get(<span class=\"string\">&#x27;STABLE_DIFFUSION_REPO&#x27;</span>, <span class=\"string\">&quot;https://ghproxy.com/https://github.com/Stability-AI/stablediffusion.git&quot;</span>)</span><br><span class=\"line\">taming_transformers_repo = os.environ.get(<span class=\"string\">&#x27;TAMING_TRANSFORMERS_REPO&#x27;</span>, <span class=\"string\">&quot;https://ghproxy.com/https://github.com/CompVis/taming-transformers.git&quot;</span>)</span><br><span class=\"line\">k_diffusion_repo = os.environ.get(<span class=\"string\">&#x27;K_DIFFUSION_REPO&#x27;</span>, <span class=\"string\">&#x27;https://ghproxy.com/https://github.com/crowsonkb/k-diffusion.git&#x27;</span>)</span><br><span class=\"line\">codeformer_repo = os.environ.get(<span class=\"string\">&#x27;CODEFORMER_REPO&#x27;</span>, <span class=\"string\">&#x27;https://ghproxy.com/https://github.com/sczhou/CodeFormer.git&#x27;</span>)</span><br><span class=\"line\">blip_repo = os.environ.get(<span class=\"string\">&#x27;BLIP_REPO&#x27;</span>, <span class=\"string\">&#x27;https://ghproxy.com/https://github.com/salesforce/BLIP.git&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置用户\"><a class=\"markdownIt-Anchor\" href=\"#配置用户\"></a> 配置用户</h4>\n<p>通常 SD 不允许使用 root 用户进行，我们需要额外创建一个用户</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adduser sd  （创建账户sd）</span><br><span class=\"line\">passwd sd  （创建密码）</span><br><span class=\"line\">usermod -aG wheel sd （增加sudo权限）</span><br><span class=\"line\">su - sd (切换为sd用户)</span><br></pre></td></tr></table></figure>\n<p>或者修改 <code>stable-diffusion-webui</code> 目录下的 <code>webui.sh</code>  文件，禁掉用户判断</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">修改 can_run_as_root 为 1</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">this script cannot be run as root by default</span></span><br><span class=\"line\">can_run_as_root=1</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">或者找到下面的代码进行注释</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Do not run as root</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"keyword\">if</span> [[ $(<span class=\"built_in\">id</span> -u) -eq 0 &amp;&amp; can_run_as_root -eq 0 ]]</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"keyword\">then</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">    <span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\n%s\\n&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;delimiter&#125;</span>&quot;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">    <span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\e[1m\\e[31mERROR: This script must not be launched as root, aborting...\\e[0m&quot;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">    <span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\n%s\\n&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;delimiter&#125;</span>&quot;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">    <span class=\"built_in\">exit</span> 1</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"keyword\">else</span></span></span><br><span class=\"line\">    printf &quot;\\n%s\\n&quot; &quot;$&#123;delimiter&#125;&quot;</span><br><span class=\"line\">    printf &quot;Running on \\e[1m\\e[32m%s\\e[0m user&quot; &quot;$(whoami)&quot;</span><br><span class=\"line\">    printf &quot;\\n%s\\n&quot; &quot;$&#123;delimiter&#125;&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"keyword\">fi</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"启动\"><a class=\"markdownIt-Anchor\" href=\"#启动\"></a> 启动</h4>\n<p>cd 到 stable-diffusion-webui目录下执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./webui.sh --share</span><br></pre></td></tr></table></figure>\n<ul>\n<li>-- share 会启动启动公网环境，给出一个随机的地址，每次启动都会随机生成。因此建议使用 --listen 参数，再做映射转发，这点后续再讲</li>\n</ul>\n<p>第一次执行会自动下载基础模型，如果下载速度还行就耐心等待，如果网络慢的同学，可以先“ctrl+C”断开下载步骤，然后到C站随便下个大模型上传上去。</p>\n<p>命令行中也会有提示安装的目录，通常是放在 stable-diffusion-webui/models/Stable-diffusion 中</p>\n<p>启动成功后，出现http:/0.0.0.0:7860就说明已启动成功，如果是用share命令还会映射一个随机的外网访问地址。</p>\n<p>例如：<a href=\"https://9ac95a343d5d32d1c6.gradio.live/\">https://9ac95a343d5d32d1c6.gradio.live/</a> ，访问即可</p>\n<h2 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h2>\n<blockquote>\n<p><a href=\"https://cloud.tencent.com/developer/article/2244682\">基于腾讯云CVM搭建stable-diffusion-webui环境-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>\n<p><a href=\"https://www.bilibili.com/read/cv24784581?from=search&amp;spm_id_from=333.337.0.0\">Stable Diffusion云服务器部署完整版教程 - 哔哩哔哩 (bilibili.com)</a></p>\n</blockquote>\n","more":"<h2 id=\"背景\"><a class=\"markdownIt-Anchor\" href=\"#背景\"></a> 背景</h2>\n<p>之前我们讲解了如何在Mac 上搭建 Stable-Diffusion-WebUI，但是因为仅能使用CPU的原因，生成图片特别慢。</p>\n<p>本文讲解如何在一台有GPU的Linux服务器上部署。</p>\n<h2 id=\"配置服务器\"><a class=\"markdownIt-Anchor\" href=\"#配置服务器\"></a> 配置服务器</h2>\n<p>首先我们在云服务器商申请购买一台服务器，GPU建议使用 12GB 以上显存的。</p>\n<p>系统镜像我这里选择的是公共镜像CentOS-64位-CentOS 8.4 64位。一定要选择后台自动安装GPU驱动，避免自己手动安装GPU驱动。然后等待一会等系统安装好驱动后再进行安装stable-diffusion-webui</p>\n<p>带宽计费方式可以选择按使用流量计费，带宽值建议拉到 100Mbps，因为安装时需要下载的依赖和模型非常多，非常大，后续我们可以再动态调配带宽。</p>\n<h2 id=\"查看显卡驱动\"><a class=\"markdownIt-Anchor\" href=\"#查看显卡驱动\"></a> 查看显卡驱动</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvidia-smi</span><br></pre></td></tr></table></figure>\n<p>如果显示了一个表格，里面有NVIDIA、Driver Version、CUDA version等信息，则代表GPU驱动已经安装完成。</p>\n<p><code>nvcc -V</code> 也可以查看版本信息，在腾讯云中如果返回 <code>nvcc: command not found</code> 则需要配置一下环境变量。</p>\n<p>进入环境配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">进入环境配置</span></span><br><span class=\"line\">vim ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<p>添加 cuda 环境设置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">在PATH 中添加 /usr/local/cuda/bin，如</span></span><br><span class=\"line\">PATH=$PATH:/usr/local/cuda/bin</span><br><span class=\"line\"></span><br><span class=\"line\">export PATH</span><br></pre></td></tr></table></figure>\n<p>然后按 <code>Esc</code> 退出，输入 <code>:wq</code> 保存 <code>bash_profile</code>， 然后在输入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装-anaconda\"><a class=\"markdownIt-Anchor\" href=\"#安装-anaconda\"></a> 安装 Anaconda</h2>\n<p>官方仓库下载</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://repo.anaconda.com/archive/Anaconda3-2023.03-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n<p>通过清华镜像仓库下载</p>\n<p><a href=\"https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/\">清华大学开源软件镜像站 Anaconda Archive</a> 可以查看现在最新版本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2023.03-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n<p>如果遇到不能下载的，则在 <code>wget </code>后添加参数 <code>wget -U NoSuchBrowser</code>，完整如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -U NoSuchBrowser https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2023.03-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n<p>下载后安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh Anaconda3-2023.03-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n<p>提示enter按回车，提示yes or no的地方全部输入yes即可，安装完成后执行 “bash”命令，重新载入bash终端，确保conda命令可用。安装后还可以配置 Conda 镜像（参考文章：<a href=\"https://mirror.tuna.tsinghua.edu.cn/help/anaconda/\">anaconda 镜像站使用帮助</a>）</p>\n<p>验证安装，可以看到输出信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda info</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装-pytorch\"><a class=\"markdownIt-Anchor\" href=\"#安装-pytorch\"></a> 安装 PyTorch</h2>\n<p>pytorch需要安装到anaconda的虚拟环境中，所以使用conda时需要先有一个虚拟环境并进入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">若还没有虚拟环境需要创建一个，&lt;env_name&gt;是环境名称，python选择指定的版本，sd需要的python&gt;3.10 <span class=\"comment\">#conda create -n &lt;env_name&gt; python=x.xx.x</span></span></span><br><span class=\"line\">conda create -n sd python=3.10.11</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">启动虚拟环境，activate就是启动，sd是环境名称</span></span><br><span class=\"line\">conda activate sd</span><br></pre></td></tr></table></figure>\n<p>去pytorch官网配置自己服务器所需要的pytorch：<a href=\"https://pytorch.org/get-started/locally/\">Start Locally | PyTorch</a></p>\n<p>Pytorch build选择stable稳定版，操作系统是linux，由于上面安装了anaconda所以package选择conda，语言python，服务器上 CUDA是12.0所以选择了CUDA11.8</p>\n<p>选择完成之后下面会有提示的执行代码（Run this Command:），执行pytorch的安装：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install pytorch torchvision torchaudio pytorch-cuda=11.8 -c pytorch -c nvidia</span><br></pre></td></tr></table></figure>\n<p>如果出现提示需要升级conda版本的就输入，没有的话就跳过这步。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda update -n base -c defaults conda</span><br></pre></td></tr></table></figure>\n<p>验证安装结果</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">首先要启动我们的sd虚拟环境，因为我们所有与stable diffusion有关的配置环境都是建立在这个虚拟环境之下的python，pytorch等都是如此</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">进入虚拟环境</span></span><br><span class=\"line\">conda activate sd</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">进入python环境</span></span><br><span class=\"line\">python</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">导入torch</span></span><br><span class=\"line\">import torch</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">查看torch的版本</span></span><br><span class=\"line\">torch.__version__  #各有两条下划线</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">查看cuda版本</span></span><br><span class=\"line\">torch.version.cuda</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">查看GPU是否运行</span></span><br><span class=\"line\">torch.cuda.is_available()</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">退出</span></span><br><span class=\"line\">exit()</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装-stable-diffusion-web-ui\"><a class=\"markdownIt-Anchor\" href=\"#安装-stable-diffusion-web-ui\"></a> 安装 Stable Diffusion-Web-UI</h2>\n<h3 id=\"依赖安装\"><a class=\"markdownIt-Anchor\" href=\"#依赖安装\"></a> 依赖安装</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install mesa-libGL -y</span><br><span class=\"line\">sudo yum install git -y</span><br></pre></td></tr></table></figure>\n<h3 id=\"下载-web-ui\"><a class=\"markdownIt-Anchor\" href=\"#下载-web-ui\"></a> 下载 web-ui</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash &lt;(wget -qO- https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/webui.sh)</span><br></pre></td></tr></table></figure>\n<p>或者通过 git 命令下载（此处使用了镜像源）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.moeyy.xyz/https://github.com/AUTOMATIC1111/stable-diffusion-webui.git</span><br></pre></td></tr></table></figure>\n<p>如果提示错误 <code>OpenSSL SSL_read: Connection was reset, errno 10054</code></p>\n<p>则需要关闭 <code>git</code> 的 <code>https</code> 证书验证，然后重新执行下载</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global http.sslVerify false</span><br></pre></td></tr></table></figure>\n<h3 id=\"预先配置\"><a class=\"markdownIt-Anchor\" href=\"#预先配置\"></a> 预先配置</h3>\n<p>下载完成之后我们进行一些预先的配置，防止后面配置失败。</p>\n<h4 id=\"配置-pip\"><a class=\"markdownIt-Anchor\" href=\"#配置-pip\"></a> 配置 pip</h4>\n<p>设置 pip 源，这里设置的是腾讯云内源</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip config set global.index-url http://mirrors.cloud.tencent.com/pypi/simple</span><br><span class=\"line\">pip config set global.trusted-host mirrors.cloud.tencent.com</span><br></pre></td></tr></table></figure>\n<p>更新 pip 版本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install --upgrade pip</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置-sd\"><a class=\"markdownIt-Anchor\" href=\"#配置-sd\"></a> 配置 SD</h4>\n<p>链接换源。打开 <code>stable-diffusion-webui/modules/launch.until.py</code> 文件</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">torch_command = os.environ.get(<span class=\"string\">&#x27;TORCH_COMMAND&#x27;</span>, <span class=\"string\">&quot;pip install torch==2.0.1 torchvision==0.15.2&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>每个<a href=\"https://github.com/\">https://github.com/</a>  （就在上一步的下面几行，每一个网址都要改）链接前面添加<a href=\"https://ghproxy.com/%EF%BC%8C%E6%9B%BF%E6%8D%A2%E4%B8%BA%E4%BB%A5%E4%B8%8B%E5%86%85%E5%AE%B9\">https://ghproxy.com/，替换为以下内容</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gfpgan_package = os.environ.get(<span class=\"string\">&#x27;GFPGAN_PACKAGE&#x27;</span>, <span class=\"string\">&quot;https://ghproxy.com/https://github.com/TencentARC/GFPGAN/archive/8d2447a2d918f8eba5a4a01463fd48e45126a379.zip&quot;</span>)</span><br><span class=\"line\">clip_package = os.environ.get(<span class=\"string\">&#x27;CLIP_PACKAGE&#x27;</span>, <span class=\"string\">&quot;https://ghproxy.com/https://github.com/openai/CLIP/archive/d50d76daa670286dd6cacf3bcd80b5e4823fc8e1.zip&quot;</span>)</span><br><span class=\"line\">openclip_package = os.environ.get(<span class=\"string\">&#x27;OPENCLIP_PACKAGE&#x27;</span>, <span class=\"string\">&quot;https://ghproxy.com/https://github.com/mlfoundations/open_clip/archive/bb6e834e9c70d9c27d0dc3ecedeebeaeb1ffad6b.zip&quot;</span>)</span><br><span class=\"line\">stable_diffusion_repo = os.environ.get(<span class=\"string\">&#x27;STABLE_DIFFUSION_REPO&#x27;</span>, <span class=\"string\">&quot;https://ghproxy.com/https://github.com/Stability-AI/stablediffusion.git&quot;</span>)</span><br><span class=\"line\">taming_transformers_repo = os.environ.get(<span class=\"string\">&#x27;TAMING_TRANSFORMERS_REPO&#x27;</span>, <span class=\"string\">&quot;https://ghproxy.com/https://github.com/CompVis/taming-transformers.git&quot;</span>)</span><br><span class=\"line\">k_diffusion_repo = os.environ.get(<span class=\"string\">&#x27;K_DIFFUSION_REPO&#x27;</span>, <span class=\"string\">&#x27;https://ghproxy.com/https://github.com/crowsonkb/k-diffusion.git&#x27;</span>)</span><br><span class=\"line\">codeformer_repo = os.environ.get(<span class=\"string\">&#x27;CODEFORMER_REPO&#x27;</span>, <span class=\"string\">&#x27;https://ghproxy.com/https://github.com/sczhou/CodeFormer.git&#x27;</span>)</span><br><span class=\"line\">blip_repo = os.environ.get(<span class=\"string\">&#x27;BLIP_REPO&#x27;</span>, <span class=\"string\">&#x27;https://ghproxy.com/https://github.com/salesforce/BLIP.git&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置用户\"><a class=\"markdownIt-Anchor\" href=\"#配置用户\"></a> 配置用户</h4>\n<p>通常 SD 不允许使用 root 用户进行，我们需要额外创建一个用户</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adduser sd  （创建账户sd）</span><br><span class=\"line\">passwd sd  （创建密码）</span><br><span class=\"line\">usermod -aG wheel sd （增加sudo权限）</span><br><span class=\"line\">su - sd (切换为sd用户)</span><br></pre></td></tr></table></figure>\n<p>或者修改 <code>stable-diffusion-webui</code> 目录下的 <code>webui.sh</code>  文件，禁掉用户判断</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">修改 can_run_as_root 为 1</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">this script cannot be run as root by default</span></span><br><span class=\"line\">can_run_as_root=1</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">或者找到下面的代码进行注释</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Do not run as root</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"keyword\">if</span> [[ $(<span class=\"built_in\">id</span> -u) -eq 0 &amp;&amp; can_run_as_root -eq 0 ]]</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"keyword\">then</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">    <span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\n%s\\n&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;delimiter&#125;</span>&quot;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">    <span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\e[1m\\e[31mERROR: This script must not be launched as root, aborting...\\e[0m&quot;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">    <span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\n%s\\n&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;delimiter&#125;</span>&quot;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">    <span class=\"built_in\">exit</span> 1</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"keyword\">else</span></span></span><br><span class=\"line\">    printf &quot;\\n%s\\n&quot; &quot;$&#123;delimiter&#125;&quot;</span><br><span class=\"line\">    printf &quot;Running on \\e[1m\\e[32m%s\\e[0m user&quot; &quot;$(whoami)&quot;</span><br><span class=\"line\">    printf &quot;\\n%s\\n&quot; &quot;$&#123;delimiter&#125;&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"keyword\">fi</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"启动\"><a class=\"markdownIt-Anchor\" href=\"#启动\"></a> 启动</h4>\n<p>cd 到 stable-diffusion-webui目录下执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./webui.sh --share</span><br></pre></td></tr></table></figure>\n<ul>\n<li>-- share 会启动启动公网环境，给出一个随机的地址，每次启动都会随机生成。因此建议使用 --listen 参数，再做映射转发，这点后续再讲</li>\n</ul>\n<p>第一次执行会自动下载基础模型，如果下载速度还行就耐心等待，如果网络慢的同学，可以先“ctrl+C”断开下载步骤，然后到C站随便下个大模型上传上去。</p>\n<p>命令行中也会有提示安装的目录，通常是放在 stable-diffusion-webui/models/Stable-diffusion 中</p>\n<p>启动成功后，出现http:/0.0.0.0:7860就说明已启动成功，如果是用share命令还会映射一个随机的外网访问地址。</p>\n<p>例如：<a href=\"https://9ac95a343d5d32d1c6.gradio.live/\">https://9ac95a343d5d32d1c6.gradio.live/</a> ，访问即可</p>\n<h2 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h2>\n<blockquote>\n<p><a href=\"https://cloud.tencent.com/developer/article/2244682\">基于腾讯云CVM搭建stable-diffusion-webui环境-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>\n<p><a href=\"https://www.bilibili.com/read/cv24784581?from=search&amp;spm_id_from=333.337.0.0\">Stable Diffusion云服务器部署完整版教程 - 哔哩哔哩 (bilibili.com)</a></p>\n</blockquote>\n","categories":[{"name":"技术","path":"api/categories/技术.json"},{"name":"AI","path":"api/categories/AI.json"},{"name":"Stable Diffusion","path":"api/categories/Stable Diffusion.json"}],"tags":[{"name":"技术","path":"api/tags/技术.json"},{"name":"AI","path":"api/tags/AI.json"},{"name":"Stable Diffusion","path":"api/tags/Stable Diffusion.json"}]}