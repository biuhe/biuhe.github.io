{"title":"「Stable Diffusion」Stable Diffusion Web UI 安装教程","slug":"技术/stable_diffusion/「Stable-Diffusion」Stable-Diffusion-WebUI-For-Mac-安装教程","date":"2023-06-27T14:40:34.000Z","updated":"2023-07-16T15:08:22.586Z","comments":true,"path":"api/articles/技术/stable_diffusion/「Stable-Diffusion」Stable-Diffusion-WebUI-For-Mac-安装教程.json","excerpt":null,"covers":null,"content":"<h2 id=\"介绍\"><a class=\"markdownIt-Anchor\" href=\"#介绍\"></a> 介绍</h2>\n<p>什么是 Stable Diffusion</p>\n<p>CompVis/stable-diffusion 是一个开源项目，它实现了一种基于稳定扩散（Stable Diffusion）的生成对抗网络（GAN）训练方法。这个项目旨在提高 GAN 训练的稳定性和生成图像的质量。</p>\n<p>该项目主要包括以下特点：</p>\n<ol>\n<li>稳定扩散技术：通过引入噪声和扩散过程来平滑生成器和判别器之间的优化过程，从而提高训练稳定性。</li>\n<li>高质量图像生成：利用稳定扩散技术，生成器能够产生更高质量、更真实的图像。</li>\n<li>易于使用：项目提供了预训练模型和示例代码，方便用户快速上手和测试。</li>\n</ol>\n<p>CompVis/stable-diffusion 可以应用于各种图像生成任务，如将文本描述转换为图像（Text2Img）、风格迁移、超分辨率等。这个项目对于研究人员和开发者来说是一个有价值的资源，可以帮助他们更好地理解和实践基于稳定扩散的 GAN 训练方法。</p>\n<p>通俗一些说法是：</p>\n<blockquote>\n<p>Stable Diffusion是2022年发布的<a href=\"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%E6%B7%B1%E5%BA%A6%E5%AD%B8%E7%BF%92\">深度学习</a><a href=\"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/zh-cn/%E6%96%87%E6%9C%AC%E5%88%B0%E5%9B%BE%E5%83%8F%E7%94%9F%E6%88%90%E6%A8%A1%E5%9E%8B\">文本到图像生成模型</a>，它主要用于根据文本的描述产生详细图像，尽管它也可以应用于其他任务，如<a href=\"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%E5%9B%BE%E5%83%8F%E4%BF%AE%E5%A4%8D\">内补绘制</a>、外补绘制，以及在<a href=\"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/w/index.php%3Ftitle%3D%E6%8F%90%E7%A4%BA%E8%A9%9E%26action%3Dedit%26redlink%3D1\">提示词</a>（<a href=\"https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Prompt_engineering\">英语</a>）指导下产生图生图的翻译。</p>\n<p>该模型由互联网上数百万图像和文本描述对训练而来，通过理解文本描述与图像信息的内在关联，不断利用扩散过程进而得到满意的生成图片</p>\n</blockquote>\n<p>根据<a href=\"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/zh-cn/Stable_Diffusion\">维基百科</a>的描述可以得知，Stable Diffusion主要用于 <strong>文本生成图像</strong> 的深度学习模型，也就是常说的txt2img的应用场景中：通过给定 <strong>文本提示词（text prompt）</strong>，该模型会输出一张匹配提示词的图片。</p>\n<p>例如输入文本提示词：“A cute cat”，Stable Diffusion会输出一张带有可爱猫咪的图片。</p>\n<p>Github: <a href=\"https://github.com/CompVis/stable-diffusion\">CompVis/stable-diffusion: A latent text-to-image diffusion model (github.com)</a></p>\n<p>Stable Diffusion是基于“潜在扩散模型”（latent diffusion model；LDM）的模型，官方项目其实并不适合新手直接使用，好在有一些基于 stable-diffusion 封装的 <code>webui</code> 开源项目，可以通过界面交互的方式来使用，极大的降低了使用门槛，以下是几个比较火的 <code>webui</code> 项目：</p>\n<p>Stable-Diffusion-WebUI ： <a href=\"https://github.com/AUTOMATIC1111/stable-diffusion-webui\">AUTOMATIC1111/stable-diffusion-webui: Stable Diffusion web UI</a></p>\n<p>Sygil-WebUI：<a href=\"https://github.com/Sygil-Dev/sygil-webui\">Sygil-Dev/sygil-webui: Stable Diffusion web UI</a></p>\n<p>下面我们主要使用的是 Stable-Diffusion-WebUI进行讲解安装和使用</p>\n<h2 id=\"安装\"><a class=\"markdownIt-Anchor\" href=\"#安装\"></a> 安装</h2>\n<p>依赖环境  Git 、Python 3.10.6</p>\n<p>在 Github 地址（ <a href=\"https://github.com/AUTOMATIC1111/stable-diffusion-webui\">AUTOMATIC1111/stable-diffusion-webui: Stable Diffusion web UI</a>）中下载项目到本地。</p>\n<p>打开 <code>stable-diffusion-webui/modules/launch.until.py</code> 文件</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">torch_command = os.environ.get(<span class=\"string\">&#x27;TORCH_COMMAND&#x27;</span>, <span class=\"string\">&quot;pip install torch==2.0.1 torchvision==0.15.2&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>每个<a href=\"https://github.com/\">https://github.com/</a>  （就在上一步的下面几行，每一个网址都要改）链接前面添加<a href=\"https://ghproxy.com/%EF%BC%8C%E6%9B%BF%E6%8D%A2%E4%B8%BA%E4%BB%A5%E4%B8%8B%E5%86%85%E5%AE%B9\">https://ghproxy.com/，替换为以下内容</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gfpgan_package = os.environ.get(<span class=\"string\">&#x27;GFPGAN_PACKAGE&#x27;</span>, <span class=\"string\">&quot;https://ghproxy.com/https://github.com/TencentARC/GFPGAN/archive/8d2447a2d918f8eba5a4a01463fd48e45126a379.zip&quot;</span>)</span><br><span class=\"line\">clip_package = os.environ.get(<span class=\"string\">&#x27;CLIP_PACKAGE&#x27;</span>, <span class=\"string\">&quot;https://ghproxy.com/https://github.com/openai/CLIP/archive/d50d76daa670286dd6cacf3bcd80b5e4823fc8e1.zip&quot;</span>)</span><br><span class=\"line\">openclip_package = os.environ.get(<span class=\"string\">&#x27;OPENCLIP_PACKAGE&#x27;</span>, <span class=\"string\">&quot;https://ghproxy.com/https://github.com/mlfoundations/open_clip/archive/bb6e834e9c70d9c27d0dc3ecedeebeaeb1ffad6b.zip&quot;</span>)</span><br><span class=\"line\">stable_diffusion_repo = os.environ.get(<span class=\"string\">&#x27;STABLE_DIFFUSION_REPO&#x27;</span>, <span class=\"string\">&quot;https://ghproxy.com/https://github.com/Stability-AI/stablediffusion.git&quot;</span>)</span><br><span class=\"line\">taming_transformers_repo = os.environ.get(<span class=\"string\">&#x27;TAMING_TRANSFORMERS_REPO&#x27;</span>, <span class=\"string\">&quot;https://ghproxy.com/https://github.com/CompVis/taming-transformers.git&quot;</span>)</span><br><span class=\"line\">k_diffusion_repo = os.environ.get(<span class=\"string\">&#x27;K_DIFFUSION_REPO&#x27;</span>, <span class=\"string\">&#x27;https://ghproxy.com/https://github.com/crowsonkb/k-diffusion.git&#x27;</span>)</span><br><span class=\"line\">codeformer_repo = os.environ.get(<span class=\"string\">&#x27;CODEFORMER_REPO&#x27;</span>, <span class=\"string\">&#x27;https://ghproxy.com/https://github.com/sczhou/CodeFormer.git&#x27;</span>)</span><br><span class=\"line\">blip_repo = os.environ.get(<span class=\"string\">&#x27;BLIP_REPO&#x27;</span>, <span class=\"string\">&#x27;https://ghproxy.com/https://github.com/salesforce/BLIP.git&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>命令行进入到 stable-diffusion-webui 项目中下载依赖</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install requirements.txt</span><br></pre></td></tr></table></figure>\n<p>下载完成之后用命令行执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./webui.sh</span><br></pre></td></tr></table></figure>\n<p>等待启动完毕会提示</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Running on local URL:  http://127.0.0.1:7860</span><br></pre></td></tr></table></figure>\n<p>访问 <a href=\"http://127.0.0.1:7860\">http://127.0.0.1:7860</a> 网站即可</p>\n<h2 id=\"汉化\"><a class=\"markdownIt-Anchor\" href=\"#汉化\"></a> 汉化</h2>\n<p>访问网页后找到 <code>Extensions </code>菜单，选中 <code>Available </code>标签，将 <code>Hide extensions with tags</code> 全部取消勾选，然后点击 <code>Load From</code> 重新加载扩展列表</p>\n<p>在搜索框 <code>Search</code> 中搜索 <code>zh_Hans</code>  然后下载 <code>zh_Hans Localization</code></p>\n<p>下载后在 <code>Installed </code> 标签勾选 <code>stable-diffusion-webui-localization-zh_Hans</code> 插件，然后点击 <code>Apply and restart UI</code> 按钮。</p>\n<p>然后到 <code>Settings</code> 菜单 -&gt; <code>User interface</code> -&gt; <code>localization </code> 中勾选 <code>zh_CN</code> ， 点击 <code>Apply Settings</code>， 然后 <code>restart UI</code> 重启完就变成中文界面了。</p>\n<p>如果有直接下载汉化包的用户，可以将文件放置<code>\\stable-diffusion-webui\\extensions</code>这个目录下，之后重新载入网址，按照 <code>Settings </code>设置步骤依次点击就可以变成中文版。</p>\n<h2 id=\"使用\"><a class=\"markdownIt-Anchor\" href=\"#使用\"></a> 使用</h2>\n<p>在使用前我们需要下载不同的SD基础模型。</p>\n<p>模型站：</p>\n<p><a href=\"https://civitai.com/\">https://civitai.com/</a></p>\n<p><a href=\"https://huggingface.co/\">https://huggingface.co/</a></p>\n<p><a href=\"https://www.liblibai.com/\">https://www.liblibai.com/</a></p>\n<p><a href=\"https://www.liandange.com/\">https://www.liandange.com/</a></p>\n<p><a href=\"https://i-desai.com/#/\">https://i-desai.com/#/</a></p>\n<p><a href=\"https://aigccafe.com/\">https://aigccafe.com/</a> 不用翻墙</p>\n<p>以及基础模型</p>\n<p><a href=\"https://huggingface.co/models?pipeline_tag=text-to-image&amp;sort=downloads\">Models - Hugging Face</a></p>\n<p><a href=\"https://huggingface.co/stabilityai/stable-diffusion-2-1/resolve/main/v2-1_768-ema-pruned.ckpt\">https://huggingface.co/stabilityai/stable-diffusion-2-1/resolve/main/v2-1_768-ema-pruned.ckpt</a></p>\n<p><code>Checkpoint </code>模型文件通常以 <code>.safetensors</code> 或者 <code>.ckpt</code> 结尾，在模型站中会有标签标记，下载后放置在</p>\n<p><code>stable-diffusion-webui/module/stable-diffusion-webui/</code> 目录下</p>\n<p><code>Lora</code>模型文件通常以 <code>.safetensors</code>结尾，下载后放置在<code>stable-diffusion-webui/module/lora/</code> 目录下</p>\n<p>安装完之后就可以愉快使用了</p>\n<h2 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h2>\n<blockquote>\n<p><a href=\"https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Installation-on-Apple-Silicon\">Installation on Apple Silicon · AUTOMATIC1111/stable-diffusion-webui Wiki</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/620714629\">Stable Diffusion简介 - 知乎</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/617997179#%E8%83%8C%E6%99%AF\">喂饭级stable_diffusion_webUI使用教程 - 知乎</a></p>\n</blockquote>\n","more":"<h2 id=\"介绍\"><a class=\"markdownIt-Anchor\" href=\"#介绍\"></a> 介绍</h2>\n<p>什么是 Stable Diffusion</p>\n<p>CompVis/stable-diffusion 是一个开源项目，它实现了一种基于稳定扩散（Stable Diffusion）的生成对抗网络（GAN）训练方法。这个项目旨在提高 GAN 训练的稳定性和生成图像的质量。</p>\n<p>该项目主要包括以下特点：</p>\n<ol>\n<li>稳定扩散技术：通过引入噪声和扩散过程来平滑生成器和判别器之间的优化过程，从而提高训练稳定性。</li>\n<li>高质量图像生成：利用稳定扩散技术，生成器能够产生更高质量、更真实的图像。</li>\n<li>易于使用：项目提供了预训练模型和示例代码，方便用户快速上手和测试。</li>\n</ol>\n<p>CompVis/stable-diffusion 可以应用于各种图像生成任务，如将文本描述转换为图像（Text2Img）、风格迁移、超分辨率等。这个项目对于研究人员和开发者来说是一个有价值的资源，可以帮助他们更好地理解和实践基于稳定扩散的 GAN 训练方法。</p>\n<p>通俗一些说法是：</p>\n<blockquote>\n<p>Stable Diffusion是2022年发布的<a href=\"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%E6%B7%B1%E5%BA%A6%E5%AD%B8%E7%BF%92\">深度学习</a><a href=\"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/zh-cn/%E6%96%87%E6%9C%AC%E5%88%B0%E5%9B%BE%E5%83%8F%E7%94%9F%E6%88%90%E6%A8%A1%E5%9E%8B\">文本到图像生成模型</a>，它主要用于根据文本的描述产生详细图像，尽管它也可以应用于其他任务，如<a href=\"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%E5%9B%BE%E5%83%8F%E4%BF%AE%E5%A4%8D\">内补绘制</a>、外补绘制，以及在<a href=\"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/w/index.php%3Ftitle%3D%E6%8F%90%E7%A4%BA%E8%A9%9E%26action%3Dedit%26redlink%3D1\">提示词</a>（<a href=\"https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Prompt_engineering\">英语</a>）指导下产生图生图的翻译。</p>\n<p>该模型由互联网上数百万图像和文本描述对训练而来，通过理解文本描述与图像信息的内在关联，不断利用扩散过程进而得到满意的生成图片</p>\n</blockquote>\n<p>根据<a href=\"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/zh-cn/Stable_Diffusion\">维基百科</a>的描述可以得知，Stable Diffusion主要用于 <strong>文本生成图像</strong> 的深度学习模型，也就是常说的txt2img的应用场景中：通过给定 <strong>文本提示词（text prompt）</strong>，该模型会输出一张匹配提示词的图片。</p>\n<p>例如输入文本提示词：“A cute cat”，Stable Diffusion会输出一张带有可爱猫咪的图片。</p>\n<p>Github: <a href=\"https://github.com/CompVis/stable-diffusion\">CompVis/stable-diffusion: A latent text-to-image diffusion model (github.com)</a></p>\n<p>Stable Diffusion是基于“潜在扩散模型”（latent diffusion model；LDM）的模型，官方项目其实并不适合新手直接使用，好在有一些基于 stable-diffusion 封装的 <code>webui</code> 开源项目，可以通过界面交互的方式来使用，极大的降低了使用门槛，以下是几个比较火的 <code>webui</code> 项目：</p>\n<p>Stable-Diffusion-WebUI ： <a href=\"https://github.com/AUTOMATIC1111/stable-diffusion-webui\">AUTOMATIC1111/stable-diffusion-webui: Stable Diffusion web UI</a></p>\n<p>Sygil-WebUI：<a href=\"https://github.com/Sygil-Dev/sygil-webui\">Sygil-Dev/sygil-webui: Stable Diffusion web UI</a></p>\n<p>下面我们主要使用的是 Stable-Diffusion-WebUI进行讲解安装和使用</p>\n<h2 id=\"安装\"><a class=\"markdownIt-Anchor\" href=\"#安装\"></a> 安装</h2>\n<p>依赖环境  Git 、Python 3.10.6</p>\n<p>在 Github 地址（ <a href=\"https://github.com/AUTOMATIC1111/stable-diffusion-webui\">AUTOMATIC1111/stable-diffusion-webui: Stable Diffusion web UI</a>）中下载项目到本地。</p>\n<p>打开 <code>stable-diffusion-webui/modules/launch.until.py</code> 文件</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">torch_command = os.environ.get(<span class=\"string\">&#x27;TORCH_COMMAND&#x27;</span>, <span class=\"string\">&quot;pip install torch==2.0.1 torchvision==0.15.2&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>每个<a href=\"https://github.com/\">https://github.com/</a>  （就在上一步的下面几行，每一个网址都要改）链接前面添加<a href=\"https://ghproxy.com/%EF%BC%8C%E6%9B%BF%E6%8D%A2%E4%B8%BA%E4%BB%A5%E4%B8%8B%E5%86%85%E5%AE%B9\">https://ghproxy.com/，替换为以下内容</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gfpgan_package = os.environ.get(<span class=\"string\">&#x27;GFPGAN_PACKAGE&#x27;</span>, <span class=\"string\">&quot;https://ghproxy.com/https://github.com/TencentARC/GFPGAN/archive/8d2447a2d918f8eba5a4a01463fd48e45126a379.zip&quot;</span>)</span><br><span class=\"line\">clip_package = os.environ.get(<span class=\"string\">&#x27;CLIP_PACKAGE&#x27;</span>, <span class=\"string\">&quot;https://ghproxy.com/https://github.com/openai/CLIP/archive/d50d76daa670286dd6cacf3bcd80b5e4823fc8e1.zip&quot;</span>)</span><br><span class=\"line\">openclip_package = os.environ.get(<span class=\"string\">&#x27;OPENCLIP_PACKAGE&#x27;</span>, <span class=\"string\">&quot;https://ghproxy.com/https://github.com/mlfoundations/open_clip/archive/bb6e834e9c70d9c27d0dc3ecedeebeaeb1ffad6b.zip&quot;</span>)</span><br><span class=\"line\">stable_diffusion_repo = os.environ.get(<span class=\"string\">&#x27;STABLE_DIFFUSION_REPO&#x27;</span>, <span class=\"string\">&quot;https://ghproxy.com/https://github.com/Stability-AI/stablediffusion.git&quot;</span>)</span><br><span class=\"line\">taming_transformers_repo = os.environ.get(<span class=\"string\">&#x27;TAMING_TRANSFORMERS_REPO&#x27;</span>, <span class=\"string\">&quot;https://ghproxy.com/https://github.com/CompVis/taming-transformers.git&quot;</span>)</span><br><span class=\"line\">k_diffusion_repo = os.environ.get(<span class=\"string\">&#x27;K_DIFFUSION_REPO&#x27;</span>, <span class=\"string\">&#x27;https://ghproxy.com/https://github.com/crowsonkb/k-diffusion.git&#x27;</span>)</span><br><span class=\"line\">codeformer_repo = os.environ.get(<span class=\"string\">&#x27;CODEFORMER_REPO&#x27;</span>, <span class=\"string\">&#x27;https://ghproxy.com/https://github.com/sczhou/CodeFormer.git&#x27;</span>)</span><br><span class=\"line\">blip_repo = os.environ.get(<span class=\"string\">&#x27;BLIP_REPO&#x27;</span>, <span class=\"string\">&#x27;https://ghproxy.com/https://github.com/salesforce/BLIP.git&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>命令行进入到 stable-diffusion-webui 项目中下载依赖</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install requirements.txt</span><br></pre></td></tr></table></figure>\n<p>下载完成之后用命令行执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./webui.sh</span><br></pre></td></tr></table></figure>\n<p>等待启动完毕会提示</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Running on local URL:  http://127.0.0.1:7860</span><br></pre></td></tr></table></figure>\n<p>访问 <a href=\"http://127.0.0.1:7860\">http://127.0.0.1:7860</a> 网站即可</p>\n<h2 id=\"汉化\"><a class=\"markdownIt-Anchor\" href=\"#汉化\"></a> 汉化</h2>\n<p>访问网页后找到 <code>Extensions </code>菜单，选中 <code>Available </code>标签，将 <code>Hide extensions with tags</code> 全部取消勾选，然后点击 <code>Load From</code> 重新加载扩展列表</p>\n<p>在搜索框 <code>Search</code> 中搜索 <code>zh_Hans</code>  然后下载 <code>zh_Hans Localization</code></p>\n<p>下载后在 <code>Installed </code> 标签勾选 <code>stable-diffusion-webui-localization-zh_Hans</code> 插件，然后点击 <code>Apply and restart UI</code> 按钮。</p>\n<p>然后到 <code>Settings</code> 菜单 -&gt; <code>User interface</code> -&gt; <code>localization </code> 中勾选 <code>zh_CN</code> ， 点击 <code>Apply Settings</code>， 然后 <code>restart UI</code> 重启完就变成中文界面了。</p>\n<p>如果有直接下载汉化包的用户，可以将文件放置<code>\\stable-diffusion-webui\\extensions</code>这个目录下，之后重新载入网址，按照 <code>Settings </code>设置步骤依次点击就可以变成中文版。</p>\n<h2 id=\"使用\"><a class=\"markdownIt-Anchor\" href=\"#使用\"></a> 使用</h2>\n<p>在使用前我们需要下载不同的SD基础模型。</p>\n<p>模型站：</p>\n<p><a href=\"https://civitai.com/\">https://civitai.com/</a></p>\n<p><a href=\"https://huggingface.co/\">https://huggingface.co/</a></p>\n<p><a href=\"https://www.liblibai.com/\">https://www.liblibai.com/</a></p>\n<p><a href=\"https://www.liandange.com/\">https://www.liandange.com/</a></p>\n<p><a href=\"https://i-desai.com/#/\">https://i-desai.com/#/</a></p>\n<p><a href=\"https://aigccafe.com/\">https://aigccafe.com/</a> 不用翻墙</p>\n<p>以及基础模型</p>\n<p><a href=\"https://huggingface.co/models?pipeline_tag=text-to-image&amp;sort=downloads\">Models - Hugging Face</a></p>\n<p><a href=\"https://huggingface.co/stabilityai/stable-diffusion-2-1/resolve/main/v2-1_768-ema-pruned.ckpt\">https://huggingface.co/stabilityai/stable-diffusion-2-1/resolve/main/v2-1_768-ema-pruned.ckpt</a></p>\n<p><code>Checkpoint </code>模型文件通常以 <code>.safetensors</code> 或者 <code>.ckpt</code> 结尾，在模型站中会有标签标记，下载后放置在</p>\n<p><code>stable-diffusion-webui/module/stable-diffusion-webui/</code> 目录下</p>\n<p><code>Lora</code>模型文件通常以 <code>.safetensors</code>结尾，下载后放置在<code>stable-diffusion-webui/module/lora/</code> 目录下</p>\n<p>安装完之后就可以愉快使用了</p>\n<h2 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h2>\n<blockquote>\n<p><a href=\"https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Installation-on-Apple-Silicon\">Installation on Apple Silicon · AUTOMATIC1111/stable-diffusion-webui Wiki</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/620714629\">Stable Diffusion简介 - 知乎</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/617997179#%E8%83%8C%E6%99%AF\">喂饭级stable_diffusion_webUI使用教程 - 知乎</a></p>\n</blockquote>\n","categories":[{"name":"技术","path":"api/categories/技术.json"},{"name":"AI","path":"api/categories/AI.json"},{"name":"Stable Diffusion","path":"api/categories/Stable Diffusion.json"}],"tags":[{"name":"技术","path":"api/tags/技术.json"},{"name":"AI","path":"api/tags/AI.json"},{"name":"Stable Diffusion","path":"api/tags/Stable Diffusion.json"}]}