{"title":"「Python」PPT 转 Markdown","slug":"技术/python/「Python」PPT 转 Markdown","date":"2022-10-21T06:24:06.000Z","updated":"2022-10-21T09:27:37.679Z","comments":true,"path":"api/articles/技术/python/「Python」PPT 转 Markdown.json","excerpt":null,"covers":null,"content":"<h2 id=\"背景\"><a class=\"markdownIt-Anchor\" href=\"#背景\"></a> 背景</h2>\n<p>最近在学习学科类课程，教师提供的课件都是PPT的形式。我自己想整理转成Markdown就需要一个个ppt去复制里面的文本，在洗澡的时候就想着能不能直接通过脚本来一键转换，然后搜了一下类库就开始操作。</p>\n<h2 id=\"开始\"><a class=\"markdownIt-Anchor\" href=\"#开始\"></a> 开始</h2>\n<p>我检索到当前比较适合的类库——python-pptx 以下是相关网站</p>\n<p><a href=\"https://pypi.org/project/python-pptx/\">PYPI</a></p>\n<p><a href=\"https://github.com/scanny/python-pptx\">Github</a></p>\n<p><a href=\"https://python-pptx.readthedocs.io/en/latest/\">官方文档</a></p>\n<h3 id=\"官方文档示例\"><a class=\"markdownIt-Anchor\" href=\"#官方文档示例\"></a> 官方文档示例</h3>\n<p>从官方文档可以找到到获取文本的示例：<a href=\"https://python-pptx.readthedocs.io/en/latest/user/quickstart.html#extract-all-text-from-slides-in-presentation\">官方文档</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Extract all text from slides in presentation</span></span><br><span class=\"line\"><span class=\"comment\"># 从演示文稿中的幻灯片中提取所有文本</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> pptx <span class=\"keyword\">import</span> Presentation</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打开 ppt</span></span><br><span class=\"line\">prs = Presentation(path_to_presentation)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># text_runs will be populated with a list of strings,</span></span><br><span class=\"line\"><span class=\"comment\"># one for each text run in presentation</span></span><br><span class=\"line\">text_runs = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取 Slide 幻灯片</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> slide <span class=\"keyword\">in</span> prs.slides:</span><br><span class=\"line\">  \t<span class=\"comment\"># 获取形状 Shape</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> shape <span class=\"keyword\">in</span> slide.shapes:</span><br><span class=\"line\">      \t<span class=\"comment\"># 判断是否有文字框 text_frame</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> shape.has_text_frame:</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"comment\"># 获取文字框中的段落 paragraphs</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> paragraph <span class=\"keyword\">in</span> shape.text_frame.paragraphs:</span><br><span class=\"line\">          \t<span class=\"comment\"># 文字块 run</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> run <span class=\"keyword\">in</span> paragraph.runs:</span><br><span class=\"line\">              \t<span class=\"comment\"># 获取文字并加到字符串数组中</span></span><br><span class=\"line\">                text_runs.append(run.text)</span><br><span class=\"line\">                </span><br><span class=\"line\"><span class=\"comment\"># 打印测试结果     </span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(text_runs)</span><br></pre></td></tr></table></figure>\n<h3 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\"></a> 思路</h3>\n<p>创建 result 结果列表，最后我们会将全部信息存储到 result 列表中，并写入一个 md 文档当中。</p>\n<p>ppt这个库的逻辑是逐页（page）读取每个形状（shape）</p>\n<p>我们的程序是首先判断遇到的形状是否是文本框，如果是文本框的话，直接将全部文本信息写入results。</p>\n<p>如果不是文本框的话再判断这个形状是不是图片对象。如果是的话，新建一个文件夹，将这个图片存储到这个文件夹中。最后将存储到本地的图片的存储路径标准化为markdown格式写入results内。</p>\n<h3 id=\"完整代码\"><a class=\"markdownIt-Anchor\" href=\"#完整代码\"></a> 完整代码</h3>\n<p>单ppt文件转换markdown</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> collections.abc</span><br><span class=\"line\"><span class=\"comment\"># 此处是用的是python-pptx 包</span></span><br><span class=\"line\"><span class=\"comment\"># pip3 install python-pptx</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> pptx <span class=\"keyword\">import</span> Presentation</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 操作系统（用于生产文件）</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"comment\"># 正则匹配</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># PPT 文件相对路径 filepath</span></span><br><span class=\"line\">filepath = <span class=\"string\">&quot;这里写入 ppt 的路径名称.pptx&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 文件名（截取文件名开头至文件名末尾倒数 5 位）</span></span><br><span class=\"line\">file_name = filepath[:-<span class=\"number\">5</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 实例化ppt对象</span></span><br><span class=\"line\">prs = Presentation(filepath)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 结果文本数组</span></span><br><span class=\"line\">results = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取 Slide 幻灯片</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> slide <span class=\"keyword\">in</span> prs.slides:</span><br><span class=\"line\">    <span class=\"comment\"># 获取形状 Shape</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> shape <span class=\"keyword\">in</span> slide.shapes:</span><br><span class=\"line\">        <span class=\"comment\"># 判断是否有文字框 text_frame</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> shape.has_text_frame:</span><br><span class=\"line\">            <span class=\"comment\"># 获取文字框中的段落 paragraphs</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> paragraph <span class=\"keyword\">in</span> shape.text_frame.paragraphs:</span><br><span class=\"line\">                part = []</span><br><span class=\"line\">                <span class=\"comment\"># 文字块 run</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span> run <span class=\"keyword\">in</span> paragraph.runs:</span><br><span class=\"line\">                    text = run.text</span><br><span class=\"line\">                    <span class=\"comment\"># 如果匹配 第x章，则设置为主标题 # 第一章</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> re.search(<span class=\"string\">&#x27;第.+章&#x27;</span>, text):</span><br><span class=\"line\">                        text = <span class=\"string\">&#x27;# &#x27;</span> + text</span><br><span class=\"line\">                    <span class=\"comment\"># 如果匹配 一、二、三、之类的，则设置为副标题 # 一、</span></span><br><span class=\"line\">                    <span class=\"keyword\">elif</span> re.search(<span class=\"string\">&#x27;[一二三四五六七八九十]+、&#x27;</span>, text):</span><br><span class=\"line\">                        text = <span class=\"string\">&#x27;## &#x27;</span> + text</span><br><span class=\"line\">                    <span class=\"comment\"># 如果匹配格式为数字+小数点，类似 1.1.1</span></span><br><span class=\"line\">                    <span class=\"keyword\">elif</span> re.search(<span class=\"string\">&#x27;\\d\\.&#x27;</span>, text):</span><br><span class=\"line\">                        <span class=\"comment\"># 则设置副标题 例如 #### 1.1.1</span></span><br><span class=\"line\">                        text = (<span class=\"string\">&#x27;#&#x27;</span> * (text.count(<span class=\"string\">&#x27;.&#x27;</span>) + <span class=\"number\">2</span>)) + <span class=\"string\">&#x27; &#x27;</span>  + text</span><br><span class=\"line\">                    <span class=\"comment\"># 获取文字块并加到字符串数组中</span></span><br><span class=\"line\">                    part.append(text)</span><br><span class=\"line\">                results.append(<span class=\"string\">&#x27;&#x27;</span>.join(part))</span><br><span class=\"line\">        <span class=\"comment\"># 否则判断是否为图片</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                imdata = shape.image.blob</span><br><span class=\"line\">                <span class=\"comment\"># 判断文件后缀类型</span></span><br><span class=\"line\">                imagetype = shape.image.content_type</span><br><span class=\"line\">                typekey = imagetype.find(<span class=\"string\">&#x27;/&#x27;</span>) + <span class=\"number\">1</span></span><br><span class=\"line\">                imtype = imagetype[typekey:]</span><br><span class=\"line\">                <span class=\"comment\"># 创建image文件夹保存抽出图片</span></span><br><span class=\"line\">                path = <span class=\"string\">&quot;图片文件夹/&#123;&#125;_image/&quot;</span>.<span class=\"built_in\">format</span>(file_name)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(path):</span><br><span class=\"line\">                    os.makedirs(path)</span><br><span class=\"line\">                <span class=\"comment\"># 图片生成</span></span><br><span class=\"line\">                image_file = path + shape.name + <span class=\"string\">&quot;.&quot;</span> + imtype</span><br><span class=\"line\">                name = shape.name</span><br><span class=\"line\">                file_str = <span class=\"built_in\">open</span>(image_file, <span class=\"string\">&#x27;wb&#x27;</span>)</span><br><span class=\"line\">                file_str.write(imdata)</span><br><span class=\"line\">                file_str.close()</span><br><span class=\"line\">                <span class=\"comment\"># 标准化为markdown图片格式</span></span><br><span class=\"line\">                results.append(<span class=\"string\">&#x27;![&#123;&#125;](&#123;&#125;)&#x27;</span>.<span class=\"built_in\">format</span>(name, image_file))</span><br><span class=\"line\">            <span class=\"keyword\">except</span>:</span><br><span class=\"line\">                <span class=\"keyword\">pass</span></span><br><span class=\"line\"><span class=\"comment\"># 去掉多余空格</span></span><br><span class=\"line\">results = [line <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> results <span class=\"keyword\">if</span> line.strip()]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入全部results信息</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;&#123;&#125;.md&#x27;</span>.<span class=\"built_in\">format</span>(file_name), <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    f.write(<span class=\"string\">&#x27;\\n&#x27;</span>.join(results))</span><br></pre></td></tr></table></figure>\n<p>如果批量操作，只需要循环目录下的文件进行操作即可</p>\n<p>指定目录下面所有ppt转换markdown</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> collections.abc</span><br><span class=\"line\"><span class=\"comment\"># 此处是用的是python-pptx 包</span></span><br><span class=\"line\"><span class=\"comment\"># pip3 install python-pptx</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> pptx <span class=\"keyword\">import</span> Presentation</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 操作系统（用于生产文件）</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"comment\"># 正则匹配</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 目录</span></span><br><span class=\"line\"><span class=\"built_in\">dir</span> = <span class=\"string\">&#x27;./课件&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 遍历目录下面的文件</span></span><br><span class=\"line\">item = os.listdir(<span class=\"built_in\">dir</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历文件</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> item:</span><br><span class=\"line\">  \t<span class=\"comment\"># 如果文件名包含.pptx 则执行转换代码</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">&#x27;.pptx&#x27;</span> <span class=\"keyword\">in</span> file:</span><br><span class=\"line\">      </span><br><span class=\"line\">        <span class=\"comment\"># PPT 文件相对路径 filepath</span></span><br><span class=\"line\">        filepath = <span class=\"built_in\">dir</span> + <span class=\"string\">&#x27;/&#x27;</span> + file</span><br><span class=\"line\">        <span class=\"comment\"># 文件名（截取文件名开头至文件名末尾倒数 5 位）</span></span><br><span class=\"line\">        file_name = filepath[:-<span class=\"number\">5</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 实例化ppt对象</span></span><br><span class=\"line\">        prs = Presentation(filepath)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 结果文本数组</span></span><br><span class=\"line\">        results = []</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 获取 Slide 幻灯片</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> slide <span class=\"keyword\">in</span> prs.slides:</span><br><span class=\"line\">            <span class=\"comment\"># 获取形状 Shape</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> shape <span class=\"keyword\">in</span> slide.shapes:</span><br><span class=\"line\">                <span class=\"comment\"># 判断是否有文字框 text_frame</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> shape.has_text_frame:</span><br><span class=\"line\">                    <span class=\"comment\"># 获取文字框中的段落 paragraphs</span></span><br><span class=\"line\">                    <span class=\"keyword\">for</span> paragraph <span class=\"keyword\">in</span> shape.text_frame.paragraphs:</span><br><span class=\"line\">                        part = []</span><br><span class=\"line\">                        <span class=\"comment\"># 文字块 run</span></span><br><span class=\"line\">                        <span class=\"keyword\">for</span> run <span class=\"keyword\">in</span> paragraph.runs:</span><br><span class=\"line\">                            text = run.text</span><br><span class=\"line\">                            <span class=\"comment\"># 如果匹配 第x章，则设置为主标题 # 第一章</span></span><br><span class=\"line\">                            <span class=\"keyword\">if</span> re.search(<span class=\"string\">&#x27;第.+章&#x27;</span>, text):</span><br><span class=\"line\">                                text = <span class=\"string\">&#x27;# &#x27;</span> + text</span><br><span class=\"line\">                            <span class=\"comment\"># 如果匹配 一、二、三、之类的，则设置为副标题 # 一、</span></span><br><span class=\"line\">                            <span class=\"keyword\">elif</span> re.search(<span class=\"string\">&#x27;[一二三四五六七八九十]+、&#x27;</span>, text):</span><br><span class=\"line\">                                text = <span class=\"string\">&#x27;## &#x27;</span> + text</span><br><span class=\"line\">                            <span class=\"comment\"># 如果匹配格式为数字+小数点，类似 1.1.1</span></span><br><span class=\"line\">                            <span class=\"keyword\">elif</span> re.search(<span class=\"string\">&#x27;\\d\\.&#x27;</span>, text):</span><br><span class=\"line\">                                <span class=\"comment\"># 则设置副标题 例如 #### 1.1.1</span></span><br><span class=\"line\">                                text = (<span class=\"string\">&#x27;#&#x27;</span> * (text.count(<span class=\"string\">&#x27;.&#x27;</span>) + <span class=\"number\">2</span>)) + <span class=\"string\">&#x27; &#x27;</span>  + text</span><br><span class=\"line\">                            <span class=\"comment\"># 获取文字块并加到字符串数组中</span></span><br><span class=\"line\">                            part.append(text)</span><br><span class=\"line\">                        results.append(<span class=\"string\">&#x27;&#x27;</span>.join(part))</span><br><span class=\"line\">                <span class=\"comment\"># 否则判断是否为图片</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                        imdata = shape.image.blob</span><br><span class=\"line\">                        <span class=\"comment\"># 判断文件后缀类型</span></span><br><span class=\"line\">                        imagetype = shape.image.content_type</span><br><span class=\"line\">                        typekey = imagetype.find(<span class=\"string\">&#x27;/&#x27;</span>) + <span class=\"number\">1</span></span><br><span class=\"line\">                        imtype = imagetype[typekey:]</span><br><span class=\"line\">                        <span class=\"comment\"># 创建image文件夹保存抽出图片</span></span><br><span class=\"line\">                        path = <span class=\"string\">&quot;图片文件夹/&#123;&#125;_image/&quot;</span>.<span class=\"built_in\">format</span>(file_name)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(path):</span><br><span class=\"line\">                            os.makedirs(path)</span><br><span class=\"line\">                        <span class=\"comment\"># 图片生成</span></span><br><span class=\"line\">                        image_file = path + shape.name + <span class=\"string\">&quot;.&quot;</span> + imtype</span><br><span class=\"line\">                        name = shape.name</span><br><span class=\"line\">                        file_str = <span class=\"built_in\">open</span>(image_file, <span class=\"string\">&#x27;wb&#x27;</span>)</span><br><span class=\"line\">                        file_str.write(imdata)</span><br><span class=\"line\">                        file_str.close()</span><br><span class=\"line\">                        <span class=\"comment\"># 标准化为markdown图片格式</span></span><br><span class=\"line\">                        results.append(<span class=\"string\">&#x27;![&#123;&#125;](&#123;&#125;)&#x27;</span>.<span class=\"built_in\">format</span>(name, image_file))</span><br><span class=\"line\">                    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">pass</span></span><br><span class=\"line\">        <span class=\"comment\"># 去掉多余空格</span></span><br><span class=\"line\">        results = [line <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> results <span class=\"keyword\">if</span> line.strip()]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 写入全部results信息</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;&#123;&#125;.md&#x27;</span>.<span class=\"built_in\">format</span>(file_name), <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            f.write(<span class=\"string\">&#x27;\\n&#x27;</span>.join(results))</span><br></pre></td></tr></table></figure>\n<p>更好的做法是将转换的代码抽离成一个函数，提供调用，这里不做展开，欢迎自己探索。</p>\n<h2 id=\"异常\"><a class=\"markdownIt-Anchor\" href=\"#异常\"></a> 异常</h2>\n<p>如果运行代码出现 <code>AttributeError: module 'collections' has no attribute 'abc’</code> 异常</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File <span class=\"string\">&quot;/Users/用户名/.local/share/virtualenvs/smallScript-RtozSf8y/lib/python3.10/site-packages/pptx/compat/__init__.py&quot;</span>, line <span class=\"number\">10</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    Container = collections.abc.Container</span><br><span class=\"line\">AttributeError: module <span class=\"string\">&#x27;collections&#x27;</span> has no attribute <span class=\"string\">&#x27;abc&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">During handling of the above exception, another exception occurred:</span><br><span class=\"line\"></span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File <span class=\"string\">&quot;/Users/用户名/workspace/python/smallScript/office/ppt2markdown.py&quot;</span>, line <span class=\"number\">3</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    <span class=\"keyword\">from</span> pptx <span class=\"keyword\">import</span> Presentation</span><br><span class=\"line\">  File <span class=\"string\">&quot;/Users/用户名/.local/share/virtualenvs/smallScript-RtozSf8y/lib/python3.10/site-packages/pptx/__init__.py&quot;</span>, line <span class=\"number\">14</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    <span class=\"keyword\">from</span> pptx.api <span class=\"keyword\">import</span> Presentation  <span class=\"comment\"># noqa</span></span><br><span class=\"line\">  File <span class=\"string\">&quot;/Users/用户名/.local/share/virtualenvs/smallScript-RtozSf8y/lib/python3.10/site-packages/pptx/api.py&quot;</span>, line <span class=\"number\">15</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    <span class=\"keyword\">from</span> .package <span class=\"keyword\">import</span> Package</span><br><span class=\"line\">  File <span class=\"string\">&quot;/Users/用户名/.local/share/virtualenvs/smallScript-RtozSf8y/lib/python3.10/site-packages/pptx/package.py&quot;</span>, line <span class=\"number\">6</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    <span class=\"keyword\">from</span> pptx.opc.package <span class=\"keyword\">import</span> OpcPackage</span><br><span class=\"line\">  File <span class=\"string\">&quot;/Users/用户名/.local/share/virtualenvs/smallScript-RtozSf8y/lib/python3.10/site-packages/pptx/opc/package.py&quot;</span>, line <span class=\"number\">11</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    <span class=\"keyword\">from</span> pptx.compat <span class=\"keyword\">import</span> is_string, Mapping</span><br><span class=\"line\">  File <span class=\"string\">&quot;/Users/用户名/.local/share/virtualenvs/smallScript-RtozSf8y/lib/python3.10/site-packages/pptx/compat/__init__.py&quot;</span>, line <span class=\"number\">14</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    Container = collections.Container</span><br><span class=\"line\">AttributeError: module <span class=\"string\">&#x27;collections&#x27;</span> has no attribute <span class=\"string\">&#x27;Container&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>则在python文件前引入依赖 <code>import collections.abc</code> 即可</p>\n<h2 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h2>\n<blockquote>\n<p><a href=\"https://python-pptx.readthedocs.io/en/latest/\">官方文档</a></p>\n<p><a href=\"https://cloud.tencent.com/developer/article/1708628\">看完这篇Python操作PPT总结，从此使用Python玩转Office全家桶就没有压力了！</a></p>\n<p><a href=\"https://blog.csdn.net/ZHOUYANYIJIE/article/details/121092568\">【python自动化】读取ppt内全部文本和图片信息并导出markdown文档</a></p>\n</blockquote>\n","more":"<h2 id=\"背景\"><a class=\"markdownIt-Anchor\" href=\"#背景\"></a> 背景</h2>\n<p>最近在学习学科类课程，教师提供的课件都是PPT的形式。我自己想整理转成Markdown就需要一个个ppt去复制里面的文本，在洗澡的时候就想着能不能直接通过脚本来一键转换，然后搜了一下类库就开始操作。</p>\n<h2 id=\"开始\"><a class=\"markdownIt-Anchor\" href=\"#开始\"></a> 开始</h2>\n<p>我检索到当前比较适合的类库——python-pptx 以下是相关网站</p>\n<p><a href=\"https://pypi.org/project/python-pptx/\">PYPI</a></p>\n<p><a href=\"https://github.com/scanny/python-pptx\">Github</a></p>\n<p><a href=\"https://python-pptx.readthedocs.io/en/latest/\">官方文档</a></p>\n<h3 id=\"官方文档示例\"><a class=\"markdownIt-Anchor\" href=\"#官方文档示例\"></a> 官方文档示例</h3>\n<p>从官方文档可以找到到获取文本的示例：<a href=\"https://python-pptx.readthedocs.io/en/latest/user/quickstart.html#extract-all-text-from-slides-in-presentation\">官方文档</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Extract all text from slides in presentation</span></span><br><span class=\"line\"><span class=\"comment\"># 从演示文稿中的幻灯片中提取所有文本</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> pptx <span class=\"keyword\">import</span> Presentation</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打开 ppt</span></span><br><span class=\"line\">prs = Presentation(path_to_presentation)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># text_runs will be populated with a list of strings,</span></span><br><span class=\"line\"><span class=\"comment\"># one for each text run in presentation</span></span><br><span class=\"line\">text_runs = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取 Slide 幻灯片</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> slide <span class=\"keyword\">in</span> prs.slides:</span><br><span class=\"line\">  \t<span class=\"comment\"># 获取形状 Shape</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> shape <span class=\"keyword\">in</span> slide.shapes:</span><br><span class=\"line\">      \t<span class=\"comment\"># 判断是否有文字框 text_frame</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> shape.has_text_frame:</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"comment\"># 获取文字框中的段落 paragraphs</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> paragraph <span class=\"keyword\">in</span> shape.text_frame.paragraphs:</span><br><span class=\"line\">          \t<span class=\"comment\"># 文字块 run</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> run <span class=\"keyword\">in</span> paragraph.runs:</span><br><span class=\"line\">              \t<span class=\"comment\"># 获取文字并加到字符串数组中</span></span><br><span class=\"line\">                text_runs.append(run.text)</span><br><span class=\"line\">                </span><br><span class=\"line\"><span class=\"comment\"># 打印测试结果     </span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(text_runs)</span><br></pre></td></tr></table></figure>\n<h3 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\"></a> 思路</h3>\n<p>创建 result 结果列表，最后我们会将全部信息存储到 result 列表中，并写入一个 md 文档当中。</p>\n<p>ppt这个库的逻辑是逐页（page）读取每个形状（shape）</p>\n<p>我们的程序是首先判断遇到的形状是否是文本框，如果是文本框的话，直接将全部文本信息写入results。</p>\n<p>如果不是文本框的话再判断这个形状是不是图片对象。如果是的话，新建一个文件夹，将这个图片存储到这个文件夹中。最后将存储到本地的图片的存储路径标准化为markdown格式写入results内。</p>\n<h3 id=\"完整代码\"><a class=\"markdownIt-Anchor\" href=\"#完整代码\"></a> 完整代码</h3>\n<p>单ppt文件转换markdown</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> collections.abc</span><br><span class=\"line\"><span class=\"comment\"># 此处是用的是python-pptx 包</span></span><br><span class=\"line\"><span class=\"comment\"># pip3 install python-pptx</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> pptx <span class=\"keyword\">import</span> Presentation</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 操作系统（用于生产文件）</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"comment\"># 正则匹配</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># PPT 文件相对路径 filepath</span></span><br><span class=\"line\">filepath = <span class=\"string\">&quot;这里写入 ppt 的路径名称.pptx&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 文件名（截取文件名开头至文件名末尾倒数 5 位）</span></span><br><span class=\"line\">file_name = filepath[:-<span class=\"number\">5</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 实例化ppt对象</span></span><br><span class=\"line\">prs = Presentation(filepath)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 结果文本数组</span></span><br><span class=\"line\">results = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取 Slide 幻灯片</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> slide <span class=\"keyword\">in</span> prs.slides:</span><br><span class=\"line\">    <span class=\"comment\"># 获取形状 Shape</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> shape <span class=\"keyword\">in</span> slide.shapes:</span><br><span class=\"line\">        <span class=\"comment\"># 判断是否有文字框 text_frame</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> shape.has_text_frame:</span><br><span class=\"line\">            <span class=\"comment\"># 获取文字框中的段落 paragraphs</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> paragraph <span class=\"keyword\">in</span> shape.text_frame.paragraphs:</span><br><span class=\"line\">                part = []</span><br><span class=\"line\">                <span class=\"comment\"># 文字块 run</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span> run <span class=\"keyword\">in</span> paragraph.runs:</span><br><span class=\"line\">                    text = run.text</span><br><span class=\"line\">                    <span class=\"comment\"># 如果匹配 第x章，则设置为主标题 # 第一章</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> re.search(<span class=\"string\">&#x27;第.+章&#x27;</span>, text):</span><br><span class=\"line\">                        text = <span class=\"string\">&#x27;# &#x27;</span> + text</span><br><span class=\"line\">                    <span class=\"comment\"># 如果匹配 一、二、三、之类的，则设置为副标题 # 一、</span></span><br><span class=\"line\">                    <span class=\"keyword\">elif</span> re.search(<span class=\"string\">&#x27;[一二三四五六七八九十]+、&#x27;</span>, text):</span><br><span class=\"line\">                        text = <span class=\"string\">&#x27;## &#x27;</span> + text</span><br><span class=\"line\">                    <span class=\"comment\"># 如果匹配格式为数字+小数点，类似 1.1.1</span></span><br><span class=\"line\">                    <span class=\"keyword\">elif</span> re.search(<span class=\"string\">&#x27;\\d\\.&#x27;</span>, text):</span><br><span class=\"line\">                        <span class=\"comment\"># 则设置副标题 例如 #### 1.1.1</span></span><br><span class=\"line\">                        text = (<span class=\"string\">&#x27;#&#x27;</span> * (text.count(<span class=\"string\">&#x27;.&#x27;</span>) + <span class=\"number\">2</span>)) + <span class=\"string\">&#x27; &#x27;</span>  + text</span><br><span class=\"line\">                    <span class=\"comment\"># 获取文字块并加到字符串数组中</span></span><br><span class=\"line\">                    part.append(text)</span><br><span class=\"line\">                results.append(<span class=\"string\">&#x27;&#x27;</span>.join(part))</span><br><span class=\"line\">        <span class=\"comment\"># 否则判断是否为图片</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                imdata = shape.image.blob</span><br><span class=\"line\">                <span class=\"comment\"># 判断文件后缀类型</span></span><br><span class=\"line\">                imagetype = shape.image.content_type</span><br><span class=\"line\">                typekey = imagetype.find(<span class=\"string\">&#x27;/&#x27;</span>) + <span class=\"number\">1</span></span><br><span class=\"line\">                imtype = imagetype[typekey:]</span><br><span class=\"line\">                <span class=\"comment\"># 创建image文件夹保存抽出图片</span></span><br><span class=\"line\">                path = <span class=\"string\">&quot;图片文件夹/&#123;&#125;_image/&quot;</span>.<span class=\"built_in\">format</span>(file_name)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(path):</span><br><span class=\"line\">                    os.makedirs(path)</span><br><span class=\"line\">                <span class=\"comment\"># 图片生成</span></span><br><span class=\"line\">                image_file = path + shape.name + <span class=\"string\">&quot;.&quot;</span> + imtype</span><br><span class=\"line\">                name = shape.name</span><br><span class=\"line\">                file_str = <span class=\"built_in\">open</span>(image_file, <span class=\"string\">&#x27;wb&#x27;</span>)</span><br><span class=\"line\">                file_str.write(imdata)</span><br><span class=\"line\">                file_str.close()</span><br><span class=\"line\">                <span class=\"comment\"># 标准化为markdown图片格式</span></span><br><span class=\"line\">                results.append(<span class=\"string\">&#x27;![&#123;&#125;](&#123;&#125;)&#x27;</span>.<span class=\"built_in\">format</span>(name, image_file))</span><br><span class=\"line\">            <span class=\"keyword\">except</span>:</span><br><span class=\"line\">                <span class=\"keyword\">pass</span></span><br><span class=\"line\"><span class=\"comment\"># 去掉多余空格</span></span><br><span class=\"line\">results = [line <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> results <span class=\"keyword\">if</span> line.strip()]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入全部results信息</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;&#123;&#125;.md&#x27;</span>.<span class=\"built_in\">format</span>(file_name), <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    f.write(<span class=\"string\">&#x27;\\n&#x27;</span>.join(results))</span><br></pre></td></tr></table></figure>\n<p>如果批量操作，只需要循环目录下的文件进行操作即可</p>\n<p>指定目录下面所有ppt转换markdown</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> collections.abc</span><br><span class=\"line\"><span class=\"comment\"># 此处是用的是python-pptx 包</span></span><br><span class=\"line\"><span class=\"comment\"># pip3 install python-pptx</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> pptx <span class=\"keyword\">import</span> Presentation</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 操作系统（用于生产文件）</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"comment\"># 正则匹配</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 目录</span></span><br><span class=\"line\"><span class=\"built_in\">dir</span> = <span class=\"string\">&#x27;./课件&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 遍历目录下面的文件</span></span><br><span class=\"line\">item = os.listdir(<span class=\"built_in\">dir</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历文件</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> item:</span><br><span class=\"line\">  \t<span class=\"comment\"># 如果文件名包含.pptx 则执行转换代码</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">&#x27;.pptx&#x27;</span> <span class=\"keyword\">in</span> file:</span><br><span class=\"line\">      </span><br><span class=\"line\">        <span class=\"comment\"># PPT 文件相对路径 filepath</span></span><br><span class=\"line\">        filepath = <span class=\"built_in\">dir</span> + <span class=\"string\">&#x27;/&#x27;</span> + file</span><br><span class=\"line\">        <span class=\"comment\"># 文件名（截取文件名开头至文件名末尾倒数 5 位）</span></span><br><span class=\"line\">        file_name = filepath[:-<span class=\"number\">5</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 实例化ppt对象</span></span><br><span class=\"line\">        prs = Presentation(filepath)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 结果文本数组</span></span><br><span class=\"line\">        results = []</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 获取 Slide 幻灯片</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> slide <span class=\"keyword\">in</span> prs.slides:</span><br><span class=\"line\">            <span class=\"comment\"># 获取形状 Shape</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> shape <span class=\"keyword\">in</span> slide.shapes:</span><br><span class=\"line\">                <span class=\"comment\"># 判断是否有文字框 text_frame</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> shape.has_text_frame:</span><br><span class=\"line\">                    <span class=\"comment\"># 获取文字框中的段落 paragraphs</span></span><br><span class=\"line\">                    <span class=\"keyword\">for</span> paragraph <span class=\"keyword\">in</span> shape.text_frame.paragraphs:</span><br><span class=\"line\">                        part = []</span><br><span class=\"line\">                        <span class=\"comment\"># 文字块 run</span></span><br><span class=\"line\">                        <span class=\"keyword\">for</span> run <span class=\"keyword\">in</span> paragraph.runs:</span><br><span class=\"line\">                            text = run.text</span><br><span class=\"line\">                            <span class=\"comment\"># 如果匹配 第x章，则设置为主标题 # 第一章</span></span><br><span class=\"line\">                            <span class=\"keyword\">if</span> re.search(<span class=\"string\">&#x27;第.+章&#x27;</span>, text):</span><br><span class=\"line\">                                text = <span class=\"string\">&#x27;# &#x27;</span> + text</span><br><span class=\"line\">                            <span class=\"comment\"># 如果匹配 一、二、三、之类的，则设置为副标题 # 一、</span></span><br><span class=\"line\">                            <span class=\"keyword\">elif</span> re.search(<span class=\"string\">&#x27;[一二三四五六七八九十]+、&#x27;</span>, text):</span><br><span class=\"line\">                                text = <span class=\"string\">&#x27;## &#x27;</span> + text</span><br><span class=\"line\">                            <span class=\"comment\"># 如果匹配格式为数字+小数点，类似 1.1.1</span></span><br><span class=\"line\">                            <span class=\"keyword\">elif</span> re.search(<span class=\"string\">&#x27;\\d\\.&#x27;</span>, text):</span><br><span class=\"line\">                                <span class=\"comment\"># 则设置副标题 例如 #### 1.1.1</span></span><br><span class=\"line\">                                text = (<span class=\"string\">&#x27;#&#x27;</span> * (text.count(<span class=\"string\">&#x27;.&#x27;</span>) + <span class=\"number\">2</span>)) + <span class=\"string\">&#x27; &#x27;</span>  + text</span><br><span class=\"line\">                            <span class=\"comment\"># 获取文字块并加到字符串数组中</span></span><br><span class=\"line\">                            part.append(text)</span><br><span class=\"line\">                        results.append(<span class=\"string\">&#x27;&#x27;</span>.join(part))</span><br><span class=\"line\">                <span class=\"comment\"># 否则判断是否为图片</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                        imdata = shape.image.blob</span><br><span class=\"line\">                        <span class=\"comment\"># 判断文件后缀类型</span></span><br><span class=\"line\">                        imagetype = shape.image.content_type</span><br><span class=\"line\">                        typekey = imagetype.find(<span class=\"string\">&#x27;/&#x27;</span>) + <span class=\"number\">1</span></span><br><span class=\"line\">                        imtype = imagetype[typekey:]</span><br><span class=\"line\">                        <span class=\"comment\"># 创建image文件夹保存抽出图片</span></span><br><span class=\"line\">                        path = <span class=\"string\">&quot;图片文件夹/&#123;&#125;_image/&quot;</span>.<span class=\"built_in\">format</span>(file_name)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(path):</span><br><span class=\"line\">                            os.makedirs(path)</span><br><span class=\"line\">                        <span class=\"comment\"># 图片生成</span></span><br><span class=\"line\">                        image_file = path + shape.name + <span class=\"string\">&quot;.&quot;</span> + imtype</span><br><span class=\"line\">                        name = shape.name</span><br><span class=\"line\">                        file_str = <span class=\"built_in\">open</span>(image_file, <span class=\"string\">&#x27;wb&#x27;</span>)</span><br><span class=\"line\">                        file_str.write(imdata)</span><br><span class=\"line\">                        file_str.close()</span><br><span class=\"line\">                        <span class=\"comment\"># 标准化为markdown图片格式</span></span><br><span class=\"line\">                        results.append(<span class=\"string\">&#x27;![&#123;&#125;](&#123;&#125;)&#x27;</span>.<span class=\"built_in\">format</span>(name, image_file))</span><br><span class=\"line\">                    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">pass</span></span><br><span class=\"line\">        <span class=\"comment\"># 去掉多余空格</span></span><br><span class=\"line\">        results = [line <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> results <span class=\"keyword\">if</span> line.strip()]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 写入全部results信息</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;&#123;&#125;.md&#x27;</span>.<span class=\"built_in\">format</span>(file_name), <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            f.write(<span class=\"string\">&#x27;\\n&#x27;</span>.join(results))</span><br></pre></td></tr></table></figure>\n<p>更好的做法是将转换的代码抽离成一个函数，提供调用，这里不做展开，欢迎自己探索。</p>\n<h2 id=\"异常\"><a class=\"markdownIt-Anchor\" href=\"#异常\"></a> 异常</h2>\n<p>如果运行代码出现 <code>AttributeError: module 'collections' has no attribute 'abc’</code> 异常</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File <span class=\"string\">&quot;/Users/用户名/.local/share/virtualenvs/smallScript-RtozSf8y/lib/python3.10/site-packages/pptx/compat/__init__.py&quot;</span>, line <span class=\"number\">10</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    Container = collections.abc.Container</span><br><span class=\"line\">AttributeError: module <span class=\"string\">&#x27;collections&#x27;</span> has no attribute <span class=\"string\">&#x27;abc&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">During handling of the above exception, another exception occurred:</span><br><span class=\"line\"></span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File <span class=\"string\">&quot;/Users/用户名/workspace/python/smallScript/office/ppt2markdown.py&quot;</span>, line <span class=\"number\">3</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    <span class=\"keyword\">from</span> pptx <span class=\"keyword\">import</span> Presentation</span><br><span class=\"line\">  File <span class=\"string\">&quot;/Users/用户名/.local/share/virtualenvs/smallScript-RtozSf8y/lib/python3.10/site-packages/pptx/__init__.py&quot;</span>, line <span class=\"number\">14</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    <span class=\"keyword\">from</span> pptx.api <span class=\"keyword\">import</span> Presentation  <span class=\"comment\"># noqa</span></span><br><span class=\"line\">  File <span class=\"string\">&quot;/Users/用户名/.local/share/virtualenvs/smallScript-RtozSf8y/lib/python3.10/site-packages/pptx/api.py&quot;</span>, line <span class=\"number\">15</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    <span class=\"keyword\">from</span> .package <span class=\"keyword\">import</span> Package</span><br><span class=\"line\">  File <span class=\"string\">&quot;/Users/用户名/.local/share/virtualenvs/smallScript-RtozSf8y/lib/python3.10/site-packages/pptx/package.py&quot;</span>, line <span class=\"number\">6</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    <span class=\"keyword\">from</span> pptx.opc.package <span class=\"keyword\">import</span> OpcPackage</span><br><span class=\"line\">  File <span class=\"string\">&quot;/Users/用户名/.local/share/virtualenvs/smallScript-RtozSf8y/lib/python3.10/site-packages/pptx/opc/package.py&quot;</span>, line <span class=\"number\">11</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    <span class=\"keyword\">from</span> pptx.compat <span class=\"keyword\">import</span> is_string, Mapping</span><br><span class=\"line\">  File <span class=\"string\">&quot;/Users/用户名/.local/share/virtualenvs/smallScript-RtozSf8y/lib/python3.10/site-packages/pptx/compat/__init__.py&quot;</span>, line <span class=\"number\">14</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    Container = collections.Container</span><br><span class=\"line\">AttributeError: module <span class=\"string\">&#x27;collections&#x27;</span> has no attribute <span class=\"string\">&#x27;Container&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>则在python文件前引入依赖 <code>import collections.abc</code> 即可</p>\n<h2 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h2>\n<blockquote>\n<p><a href=\"https://python-pptx.readthedocs.io/en/latest/\">官方文档</a></p>\n<p><a href=\"https://cloud.tencent.com/developer/article/1708628\">看完这篇Python操作PPT总结，从此使用Python玩转Office全家桶就没有压力了！</a></p>\n<p><a href=\"https://blog.csdn.net/ZHOUYANYIJIE/article/details/121092568\">【python自动化】读取ppt内全部文本和图片信息并导出markdown文档</a></p>\n</blockquote>\n","categories":[{"name":"技术","path":"api/categories/技术.json"},{"name":"Python","path":"api/categories/Python.json"}],"tags":[{"name":"技术","path":"api/tags/技术.json"},{"name":"Python","path":"api/tags/Python.json"},{"name":"PPT","path":"api/tags/PPT.json"}]}