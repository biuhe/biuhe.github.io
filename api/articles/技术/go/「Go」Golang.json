{"title":"「Go」Golang","slug":"技术/go/「Go」Golang","date":"2022-08-14T09:11:21.000Z","updated":"2022-12-25T14:35:39.965Z","comments":true,"path":"api/articles/技术/go/「Go」Golang.json","excerpt":null,"covers":null,"content":"<h2 id=\"简介\"><a class=\"markdownIt-Anchor\" href=\"#简介\"></a> 简介</h2>\n<p>Go 是一种开源的编程语言，它由 Google 公司的工程师们在 2007 年提出，并在 2009 年开源。Go 是一种静态类型、编译型、并发型的语言。</p>\n<p>Go 的主要目标是提供一种简单、可扩展、快速、可靠的编程语言，它既适用于大型项目，也适用于小型项目。Go 语言的设计目标是让程序员快速开发出高质量的程序，同时也能使这些程序运行得更快。</p>\n<p>Go 语言提供了丰富的内置类型、结构体、接口、函数等</p>\n<p>如果你想学习 Go 语言，下面是一些建议：</p>\n<ol>\n<li>\n<p>首先，你应该去 Go 语言官网（<a href=\"https://golang.org/%EF%BC%89%E4%B8%8B%E8%BD%BD%E5%B9%B6%E5%AE%89%E8%A3%85\">https://golang.org/）下载并安装</a> Go 语言的开发工具。Go 语言官网还提供了完整的 Go 语言文档，可以作为参考手册。</p>\n</li>\n<li>\n<p>然后，你可以通过学习 Go 语言的官方教程（<a href=\"https://tour.golang.org/%EF%BC%89%E6%9D%A5%E4%BA%86%E8%A7%A3\">https://tour.golang.org/）来了解</a> Go 语言的基本语法和用法。这个教程提供了许多在线实例，可以让你在线实时编写和执行 Go 代码。</p>\n</li>\n<li>\n<p>在学习完基本语法后，你可以阅读 Go 语言官方文档（<a href=\"https://golang.org/doc/%EF%BC%89%E4%B8%AD%E7%9A%84%E2%80%9CEffective\">https://golang.org/doc/）中的“Effective</a> Go”一章，了解 Go 语言的设计哲学和编码规范。</p>\n</li>\n<li>\n<p>随后，你可以阅读 Go 语言官方文档中的其他章节，了解 Go 语言的标准库、工具和其他特性。</p>\n</li>\n<li>\n<p>最后，你可以在网上搜索 Go 语言的相关书籍和教程，找到适合你的学习方式</p>\n</li>\n</ol>\n<h3 id=\"特点\"><a class=\"markdownIt-Anchor\" href=\"#特点\"></a> 特点</h3>\n<ul>\n<li>静态类型：Go 语言是一种静态类型语言，它的类型系统严格，能够检查出许多类型错误。</li>\n<li>并发型：Go 语言提供了丰富的并发模型，原生支持并发编程，提供了 goroutine 和 channel，可以方便地编写多核、高并发的程序。</li>\n<li>简单易学：Go 语言的语法简单易懂，可以轻松上手，适合初学者。</li>\n<li>编译速度快：Go 语言的编译速度快，生成的可执行文件体积小，可以提高开发效率。</li>\n<li>内存管理好：Go 语言内置了垃圾回收机制，可以自动管理内存，避免内存泄漏问题。</li>\n<li>功能强大的标准库：Go 语言拥有丰富的标准库，可以方便地实现常见的功能。</li>\n<li>支持多种操作系统：Go 语言可以运行在多种操作系统上，包括 Windows、Mac OS、Linux 等。</li>\n</ul>\n<h3 id=\"缺点\"><a class=\"markdownIt-Anchor\" href=\"#缺点\"></a> 缺点</h3>\n<ul>\n<li>异常处理不够完善：Go 语言的异常处理机制不够完善，不能像其他语言那样抛出和捕获异常。</li>\n<li>运行速度不够快：Go 语言的运行速度不如 C++ 和 Java 等其他语言。</li>\n<li>编译速度慢：Go 的编译速度相对于其他语言比较慢，这对于快速迭代和开发来说不太方便。</li>\n<li>文档与社区支持不足：Go 的文档和社区支持相对于其他流行的语言来说还不够完善，第三方函数库暂时没有主流编程语言多</li>\n<li>单进程限制：Go 语言默认的是单进程，如果需要多进程的话，需要手动编写代码来实现。</li>\n<li>数据类型与类型转换限制：Go 语言在数据类型和类型转换方面比较严格，不太适合大型项目开发。</li>\n<li>静态类型语言限制：Go 语言是一门静态类型语言，这对于一些动态语言的程序员来说不太习惯。</li>\n<li>对于并发编程的限制：Go 语言的并发模型相对于其他语言来说比较特殊，不太适合熟悉其他语言的程序员。</li>\n</ul>\n<h2 id=\"安装与下载\"><a class=\"markdownIt-Anchor\" href=\"#安装与下载\"></a> 安装与下载</h2>\n<p>其他系统版本参考官方链接进行下载安装：<a href=\"https://go.dev/doc/install\">https://go.dev/doc/install</a></p>\n<p>无法访问的用户可以通过中文网的下载地址进行安装：<a href=\"https://studygolang.com/dl\">https://studygolang.com/dl</a></p>\n<p>Linux 下需要设置 4 个环境变量：GoRoot、GoPath、GoBin及Path 到profile文件中（~/.bash_profile（单一用户）或/etc/profile（所有用户））</p>\n<ul>\n<li>GOROOT：该环境变量的值应该为Go语言的当前安装目录,例如:</li>\n</ul>\n<p><code>export GOROOT =/usr/local/go</code></p>\n<ul>\n<li>GOPATH：该环境变量的值应该为Go语言的工作区的集合，例如：</li>\n</ul>\n<p><code>export GOPATH=~/golib:~/goproject</code></p>\n<ul>\n<li>GOBIN：它的值应该是你想存放Go程序的可执行文件的目录，例如：</li>\n</ul>\n<p><code>export GOBIN=~/gobin</code></p>\n<ul>\n<li>PATH：为了方便使用Go语言命令和Go程序的可执行文件，需要追加其值，如：</li>\n</ul>\n<p><code>export PATH=$PATH:$GOROOT/bin:$GOBIN</code></p>\n<p>然后通过source 命令使文件生效，如<code>source ~/.bash_profile</code></p>\n<p>macOS 下可使用brew 安装</p>\n<p>超找 go</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew search go</span><br></pre></td></tr></table></figure>\n<p>下载安装指定版本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install go@1.19</span><br></pre></td></tr></table></figure>\n<p>查看安装版本验证安装结果</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go version</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置模块代理\"><a class=\"markdownIt-Anchor\" href=\"#设置模块代理\"></a> 设置模块代理</h2>\n<p>参考 <a href=\"https://goproxy.cn/\">https://goproxy.cn/</a></p>\n<p><a href=\"https://goproxy.cn/#usage-macos-or-linux\">macOS 或 Linux</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export GO111MODULE=on</span><br><span class=\"line\">export GOPROXY=https://goproxy.cn</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://goproxy.cn/#usage-windows\">Windows</a></p>\n<p>打开你的 PowerShell 并执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$</span><span class=\"language-bash\"><span class=\"built_in\">env</span>:GO111MODULE = <span class=\"string\">&quot;on&quot;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">$</span><span class=\"language-bash\"><span class=\"built_in\">env</span>:GOPROXY = <span class=\"string\">&quot;https://goproxy.cn&quot;</span></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"编写\"><a class=\"markdownIt-Anchor\" href=\"#编写\"></a> 编写</h2>\n<p>新建一个 <code>.go</code> 结尾的文件</p>\n<p>写入一下内容</p>\n<p>helloworld.go</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 声明文件所在包，每个 go 文件必须有归属的包</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 引入程序中需要用到的包，以使用包中的函数/方法，例如 Println()</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 主函数 程序入口</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 含有格式化输出、接收输入的函数</span></span><br><span class=\"line\">\t<span class=\"comment\">// 在控制台中输出一句话，双引号中的内容（字符串）会原样输出</span></span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;Hello World&quot;</span>)\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"编译-执行\"><a class=\"markdownIt-Anchor\" href=\"#编译-执行\"></a> 编译 &amp; 执行</h2>\n<p>在go文件目录下打开命令行执行以下命令即可编译成可执行的二进制文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go build</span><br></pre></td></tr></table></figure>\n<p>此外，在不同平台环境中编译其他平台命令如下：</p>\n<h3 id=\"macos\"><a class=\"markdownIt-Anchor\" href=\"#macos\"></a> macOS</h3>\n<p>Mac下编译Linux, Windows平台的64位可执行程序</p>\n<p>Linux</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build helloworld.go</span><br></pre></td></tr></table></figure>\n<p>Windows</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build helloworld.go</span><br></pre></td></tr></table></figure>\n<h3 id=\"linux\"><a class=\"markdownIt-Anchor\" href=\"#linux\"></a> Linux</h3>\n<p>Linux下编译Mac, Windows平台的64位可执行程序</p>\n<p>macOS</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build helloworld.go</span><br></pre></td></tr></table></figure>\n<p>Windows</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build helloworld.go</span><br></pre></td></tr></table></figure>\n<h3 id=\"windows\"><a class=\"markdownIt-Anchor\" href=\"#windows\"></a> Windows</h3>\n<p>Windows下编译Mac, Linux平台的64位可执行程序</p>\n<p>macOS</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SET CGO_ENABLED=0</span><br><span class=\"line\">SET GOOS=darwin3</span><br><span class=\"line\">SET GOARCH=amd64</span><br><span class=\"line\">go build helloworld.go</span><br></pre></td></tr></table></figure>\n<p>Linux</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SET CGO_ENABLED=0</span><br><span class=\"line\">SET GOOS=linux</span><br><span class=\"line\">SET GOARCH=amd64</span><br><span class=\"line\">go build helloworld.go</span><br></pre></td></tr></table></figure>\n<p>语义如下：</p>\n<p>GOOS：目标可执行程序运行操作系统，支持 darwin，freebsd，linux，windows</p>\n<p>GOARCH：目标可执行程序操作系统构架，包括 386，amd64，arm</p>\n<h3 id=\"执行\"><a class=\"markdownIt-Anchor\" href=\"#执行\"></a> 执行</h3>\n<p>也可以通过 <code>go run helloworld.go </code>  来直接编译运行</p>\n<h2 id=\"基本语法\"><a class=\"markdownIt-Anchor\" href=\"#基本语法\"></a> 基本语法</h2>\n<ul>\n<li>变量定义：在 Go 语言中，变量需要在使用前进行定义。变量定义的语法格式为：<code>var variable_name type</code>。例如：</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Copy code</span><br><span class=\"line\"><span class=\"keyword\">var</span> name <span class=\"type\">string</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> age <span class=\"type\">int</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>常量定义：Go 语言支持常量定义，常量的值在程序运行期间不能被改变。常量定义的语法格式为：<code>const constant_name = value</code>。例如：</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Copy code</span><br><span class=\"line\"><span class=\"keyword\">const</span> Pi = <span class=\"number\">3.14</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>运算符：Go 语言支持常见的算数、关系和逻辑运算符。例如，加法运算符为 <code>+</code>，减法运算符为 <code>-</code>，小于运算符为 <code>&lt;</code> 等。</li>\n<li>控制语句：Go 语言支持常见的控制语句，包括 if、else、for、switch 等。例如，if 语句的语法格式为：</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Copy code</span><br><span class=\"line\"><span class=\"keyword\">if</span> condition &#123;</span><br><span class=\"line\">    <span class=\"comment\">// code to be executed if condition is true</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>函数：Go 语言支持函数定义和调用。函数定义的语法格式为：</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Copy code</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">function_name</span><span class=\"params\">(parameter1 type1, parameter2 type2)</span></span> return_type &#123;</span><br><span class=\"line\">    <span class=\"comment\">// code to be executed</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> value</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>函数调用的语法格式为：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Copy code</span><br><span class=\"line\">function_name(parameter1, parameter2)</span><br></pre></td></tr></table></figure>\n<p>下面是一个简单的Go语言程序，它演示了一些基础语法的用法：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 定义一个变量</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> a <span class=\"type\">int</span> = <span class=\"number\">10</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> b <span class=\"type\">int</span> = <span class=\"number\">20</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 使用if语句</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> a &lt; b &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 使用fmt包的Println函数</span></span><br><span class=\"line\">    fmt.Println(<span class=\"string\">&quot;a is less than b&quot;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 使用for循环</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++ &#123;</span><br><span class=\"line\">    fmt.Println(i)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 定义一个函数</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">add</span><span class=\"params\">(x <span class=\"type\">int</span>, y <span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x + y</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 调用函数</span></span><br><span class=\"line\">  result := add(a, b)</span><br><span class=\"line\">  fmt.Println(result)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>上面的程序定义了两个变量<code>a</code>和<code>b</code>，并使用if语句来比较它们的值。它还使用了for循环来打印一些数字，定义了一个函数来计算两个数的和，并调用了这个函数。</p>\n<p>其他更多内容请参考网站进行扩展学习</p>\n<h2 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h2>\n<blockquote>\n<p><a href=\"https://golang.org\">官网</a></p>\n<p><a href=\"https://books.studygolang.com\">Go语言中文网</a></p>\n<p><a href=\"https://books.studygolang.com/gopl-zh/\">Go语言圣经</a></p>\n<p><a href=\"https://github.com/chai2010/advanced-go-programming-book\">Go语言高级编程</a></p>\n<p><a href=\"https://www.runoob.com/go/go-tutorial.html\">菜鸟教程网</a>（推荐）</p>\n</blockquote>\n","more":"<h2 id=\"简介\"><a class=\"markdownIt-Anchor\" href=\"#简介\"></a> 简介</h2>\n<p>Go 是一种开源的编程语言，它由 Google 公司的工程师们在 2007 年提出，并在 2009 年开源。Go 是一种静态类型、编译型、并发型的语言。</p>\n<p>Go 的主要目标是提供一种简单、可扩展、快速、可靠的编程语言，它既适用于大型项目，也适用于小型项目。Go 语言的设计目标是让程序员快速开发出高质量的程序，同时也能使这些程序运行得更快。</p>\n<p>Go 语言提供了丰富的内置类型、结构体、接口、函数等</p>\n<p>如果你想学习 Go 语言，下面是一些建议：</p>\n<ol>\n<li>\n<p>首先，你应该去 Go 语言官网（<a href=\"https://golang.org/%EF%BC%89%E4%B8%8B%E8%BD%BD%E5%B9%B6%E5%AE%89%E8%A3%85\">https://golang.org/）下载并安装</a> Go 语言的开发工具。Go 语言官网还提供了完整的 Go 语言文档，可以作为参考手册。</p>\n</li>\n<li>\n<p>然后，你可以通过学习 Go 语言的官方教程（<a href=\"https://tour.golang.org/%EF%BC%89%E6%9D%A5%E4%BA%86%E8%A7%A3\">https://tour.golang.org/）来了解</a> Go 语言的基本语法和用法。这个教程提供了许多在线实例，可以让你在线实时编写和执行 Go 代码。</p>\n</li>\n<li>\n<p>在学习完基本语法后，你可以阅读 Go 语言官方文档（<a href=\"https://golang.org/doc/%EF%BC%89%E4%B8%AD%E7%9A%84%E2%80%9CEffective\">https://golang.org/doc/）中的“Effective</a> Go”一章，了解 Go 语言的设计哲学和编码规范。</p>\n</li>\n<li>\n<p>随后，你可以阅读 Go 语言官方文档中的其他章节，了解 Go 语言的标准库、工具和其他特性。</p>\n</li>\n<li>\n<p>最后，你可以在网上搜索 Go 语言的相关书籍和教程，找到适合你的学习方式</p>\n</li>\n</ol>\n<h3 id=\"特点\"><a class=\"markdownIt-Anchor\" href=\"#特点\"></a> 特点</h3>\n<ul>\n<li>静态类型：Go 语言是一种静态类型语言，它的类型系统严格，能够检查出许多类型错误。</li>\n<li>并发型：Go 语言提供了丰富的并发模型，原生支持并发编程，提供了 goroutine 和 channel，可以方便地编写多核、高并发的程序。</li>\n<li>简单易学：Go 语言的语法简单易懂，可以轻松上手，适合初学者。</li>\n<li>编译速度快：Go 语言的编译速度快，生成的可执行文件体积小，可以提高开发效率。</li>\n<li>内存管理好：Go 语言内置了垃圾回收机制，可以自动管理内存，避免内存泄漏问题。</li>\n<li>功能强大的标准库：Go 语言拥有丰富的标准库，可以方便地实现常见的功能。</li>\n<li>支持多种操作系统：Go 语言可以运行在多种操作系统上，包括 Windows、Mac OS、Linux 等。</li>\n</ul>\n<h3 id=\"缺点\"><a class=\"markdownIt-Anchor\" href=\"#缺点\"></a> 缺点</h3>\n<ul>\n<li>异常处理不够完善：Go 语言的异常处理机制不够完善，不能像其他语言那样抛出和捕获异常。</li>\n<li>运行速度不够快：Go 语言的运行速度不如 C++ 和 Java 等其他语言。</li>\n<li>编译速度慢：Go 的编译速度相对于其他语言比较慢，这对于快速迭代和开发来说不太方便。</li>\n<li>文档与社区支持不足：Go 的文档和社区支持相对于其他流行的语言来说还不够完善，第三方函数库暂时没有主流编程语言多</li>\n<li>单进程限制：Go 语言默认的是单进程，如果需要多进程的话，需要手动编写代码来实现。</li>\n<li>数据类型与类型转换限制：Go 语言在数据类型和类型转换方面比较严格，不太适合大型项目开发。</li>\n<li>静态类型语言限制：Go 语言是一门静态类型语言，这对于一些动态语言的程序员来说不太习惯。</li>\n<li>对于并发编程的限制：Go 语言的并发模型相对于其他语言来说比较特殊，不太适合熟悉其他语言的程序员。</li>\n</ul>\n<h2 id=\"安装与下载\"><a class=\"markdownIt-Anchor\" href=\"#安装与下载\"></a> 安装与下载</h2>\n<p>其他系统版本参考官方链接进行下载安装：<a href=\"https://go.dev/doc/install\">https://go.dev/doc/install</a></p>\n<p>无法访问的用户可以通过中文网的下载地址进行安装：<a href=\"https://studygolang.com/dl\">https://studygolang.com/dl</a></p>\n<p>Linux 下需要设置 4 个环境变量：GoRoot、GoPath、GoBin及Path 到profile文件中（~/.bash_profile（单一用户）或/etc/profile（所有用户））</p>\n<ul>\n<li>GOROOT：该环境变量的值应该为Go语言的当前安装目录,例如:</li>\n</ul>\n<p><code>export GOROOT =/usr/local/go</code></p>\n<ul>\n<li>GOPATH：该环境变量的值应该为Go语言的工作区的集合，例如：</li>\n</ul>\n<p><code>export GOPATH=~/golib:~/goproject</code></p>\n<ul>\n<li>GOBIN：它的值应该是你想存放Go程序的可执行文件的目录，例如：</li>\n</ul>\n<p><code>export GOBIN=~/gobin</code></p>\n<ul>\n<li>PATH：为了方便使用Go语言命令和Go程序的可执行文件，需要追加其值，如：</li>\n</ul>\n<p><code>export PATH=$PATH:$GOROOT/bin:$GOBIN</code></p>\n<p>然后通过source 命令使文件生效，如<code>source ~/.bash_profile</code></p>\n<p>macOS 下可使用brew 安装</p>\n<p>超找 go</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew search go</span><br></pre></td></tr></table></figure>\n<p>下载安装指定版本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install go@1.19</span><br></pre></td></tr></table></figure>\n<p>查看安装版本验证安装结果</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go version</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置模块代理\"><a class=\"markdownIt-Anchor\" href=\"#设置模块代理\"></a> 设置模块代理</h2>\n<p>参考 <a href=\"https://goproxy.cn/\">https://goproxy.cn/</a></p>\n<p><a href=\"https://goproxy.cn/#usage-macos-or-linux\">macOS 或 Linux</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export GO111MODULE=on</span><br><span class=\"line\">export GOPROXY=https://goproxy.cn</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://goproxy.cn/#usage-windows\">Windows</a></p>\n<p>打开你的 PowerShell 并执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$</span><span class=\"language-bash\"><span class=\"built_in\">env</span>:GO111MODULE = <span class=\"string\">&quot;on&quot;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">$</span><span class=\"language-bash\"><span class=\"built_in\">env</span>:GOPROXY = <span class=\"string\">&quot;https://goproxy.cn&quot;</span></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"编写\"><a class=\"markdownIt-Anchor\" href=\"#编写\"></a> 编写</h2>\n<p>新建一个 <code>.go</code> 结尾的文件</p>\n<p>写入一下内容</p>\n<p>helloworld.go</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 声明文件所在包，每个 go 文件必须有归属的包</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 引入程序中需要用到的包，以使用包中的函数/方法，例如 Println()</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 主函数 程序入口</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 含有格式化输出、接收输入的函数</span></span><br><span class=\"line\">\t<span class=\"comment\">// 在控制台中输出一句话，双引号中的内容（字符串）会原样输出</span></span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;Hello World&quot;</span>)\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"编译-执行\"><a class=\"markdownIt-Anchor\" href=\"#编译-执行\"></a> 编译 &amp; 执行</h2>\n<p>在go文件目录下打开命令行执行以下命令即可编译成可执行的二进制文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go build</span><br></pre></td></tr></table></figure>\n<p>此外，在不同平台环境中编译其他平台命令如下：</p>\n<h3 id=\"macos\"><a class=\"markdownIt-Anchor\" href=\"#macos\"></a> macOS</h3>\n<p>Mac下编译Linux, Windows平台的64位可执行程序</p>\n<p>Linux</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build helloworld.go</span><br></pre></td></tr></table></figure>\n<p>Windows</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build helloworld.go</span><br></pre></td></tr></table></figure>\n<h3 id=\"linux\"><a class=\"markdownIt-Anchor\" href=\"#linux\"></a> Linux</h3>\n<p>Linux下编译Mac, Windows平台的64位可执行程序</p>\n<p>macOS</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build helloworld.go</span><br></pre></td></tr></table></figure>\n<p>Windows</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build helloworld.go</span><br></pre></td></tr></table></figure>\n<h3 id=\"windows\"><a class=\"markdownIt-Anchor\" href=\"#windows\"></a> Windows</h3>\n<p>Windows下编译Mac, Linux平台的64位可执行程序</p>\n<p>macOS</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SET CGO_ENABLED=0</span><br><span class=\"line\">SET GOOS=darwin3</span><br><span class=\"line\">SET GOARCH=amd64</span><br><span class=\"line\">go build helloworld.go</span><br></pre></td></tr></table></figure>\n<p>Linux</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SET CGO_ENABLED=0</span><br><span class=\"line\">SET GOOS=linux</span><br><span class=\"line\">SET GOARCH=amd64</span><br><span class=\"line\">go build helloworld.go</span><br></pre></td></tr></table></figure>\n<p>语义如下：</p>\n<p>GOOS：目标可执行程序运行操作系统，支持 darwin，freebsd，linux，windows</p>\n<p>GOARCH：目标可执行程序操作系统构架，包括 386，amd64，arm</p>\n<h3 id=\"执行\"><a class=\"markdownIt-Anchor\" href=\"#执行\"></a> 执行</h3>\n<p>也可以通过 <code>go run helloworld.go </code>  来直接编译运行</p>\n<h2 id=\"基本语法\"><a class=\"markdownIt-Anchor\" href=\"#基本语法\"></a> 基本语法</h2>\n<ul>\n<li>变量定义：在 Go 语言中，变量需要在使用前进行定义。变量定义的语法格式为：<code>var variable_name type</code>。例如：</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Copy code</span><br><span class=\"line\"><span class=\"keyword\">var</span> name <span class=\"type\">string</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> age <span class=\"type\">int</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>常量定义：Go 语言支持常量定义，常量的值在程序运行期间不能被改变。常量定义的语法格式为：<code>const constant_name = value</code>。例如：</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Copy code</span><br><span class=\"line\"><span class=\"keyword\">const</span> Pi = <span class=\"number\">3.14</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>运算符：Go 语言支持常见的算数、关系和逻辑运算符。例如，加法运算符为 <code>+</code>，减法运算符为 <code>-</code>，小于运算符为 <code>&lt;</code> 等。</li>\n<li>控制语句：Go 语言支持常见的控制语句，包括 if、else、for、switch 等。例如，if 语句的语法格式为：</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Copy code</span><br><span class=\"line\"><span class=\"keyword\">if</span> condition &#123;</span><br><span class=\"line\">    <span class=\"comment\">// code to be executed if condition is true</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>函数：Go 语言支持函数定义和调用。函数定义的语法格式为：</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Copy code</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">function_name</span><span class=\"params\">(parameter1 type1, parameter2 type2)</span></span> return_type &#123;</span><br><span class=\"line\">    <span class=\"comment\">// code to be executed</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> value</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>函数调用的语法格式为：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Copy code</span><br><span class=\"line\">function_name(parameter1, parameter2)</span><br></pre></td></tr></table></figure>\n<p>下面是一个简单的Go语言程序，它演示了一些基础语法的用法：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 定义一个变量</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> a <span class=\"type\">int</span> = <span class=\"number\">10</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> b <span class=\"type\">int</span> = <span class=\"number\">20</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 使用if语句</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> a &lt; b &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 使用fmt包的Println函数</span></span><br><span class=\"line\">    fmt.Println(<span class=\"string\">&quot;a is less than b&quot;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 使用for循环</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++ &#123;</span><br><span class=\"line\">    fmt.Println(i)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 定义一个函数</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">add</span><span class=\"params\">(x <span class=\"type\">int</span>, y <span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x + y</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 调用函数</span></span><br><span class=\"line\">  result := add(a, b)</span><br><span class=\"line\">  fmt.Println(result)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>上面的程序定义了两个变量<code>a</code>和<code>b</code>，并使用if语句来比较它们的值。它还使用了for循环来打印一些数字，定义了一个函数来计算两个数的和，并调用了这个函数。</p>\n<p>其他更多内容请参考网站进行扩展学习</p>\n<h2 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h2>\n<blockquote>\n<p><a href=\"https://golang.org\">官网</a></p>\n<p><a href=\"https://books.studygolang.com\">Go语言中文网</a></p>\n<p><a href=\"https://books.studygolang.com/gopl-zh/\">Go语言圣经</a></p>\n<p><a href=\"https://github.com/chai2010/advanced-go-programming-book\">Go语言高级编程</a></p>\n<p><a href=\"https://www.runoob.com/go/go-tutorial.html\">菜鸟教程网</a>（推荐）</p>\n</blockquote>\n","categories":[{"name":"技术","path":"api/categories/技术.json"},{"name":"Golang","path":"api/categories/Golang.json"}],"tags":[{"name":"技术","path":"api/tags/技术.json"},{"name":"Golang","path":"api/tags/Golang.json"}]}