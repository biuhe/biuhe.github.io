{"title":"「Go」Go-搭建IM即时通讯系列文章1-搭建基础框架","slug":"技术/go/「Go」Go-搭建IM即时通讯系列文章1-搭建基础框架","date":"2022-11-27T15:06:20.000Z","updated":"2022-12-25T14:29:19.675Z","comments":true,"path":"api/articles/技术/go/「Go」Go-搭建IM即时通讯系列文章1-搭建基础框架.json","excerpt":null,"covers":null,"content":"<p>通过「Go」Go 组件系列文章，我们已经了解了一些组件的基本使用。下面我们将以实现登录功能为目标来完整的搭建一个基础框架。</p>\n<p>和上述步骤一样，我们从配置项搭建开始，在  <code>项目根目录/src/main/</code> 目录下新建一个 <code>config</code> 目录，用于存放配置文件。在该目录下新建 <code>database</code>、<code>settings</code> 目录，并分别新建 <code>database.go</code> 和 <code>settings.go</code> 文件，用做初始化读取配置（viper）以及初始化数据库操作（grom）。</p>\n<h2 id=\"viper-读取配置\"><a class=\"markdownIt-Anchor\" href=\"#viper-读取配置\"></a> Viper 读取配置</h2>\n<p><code>settings.go</code> 提供了读取配置并设置到全局实体提供给其他类使用，代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Package settings</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">此文件用于读取配置文件 app.yml，并设置到对应实体，以提供给其他文件使用。</span></span><br><span class=\"line\"><span class=\"comment\">因此该文件需要优先进行初始化操作</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> settings</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/spf13/viper&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;time&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义实体装载配置文件内容</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Settings 设置</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Settings <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tServer   Server   <span class=\"string\">`mapstructure:&quot;server&quot;`</span></span><br><span class=\"line\">\tDatabase Database <span class=\"string\">`mapstructure:&quot;db&quot;`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> Setting = &amp;Settings&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Server 服务</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Server <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Url 地址</span></span><br><span class=\"line\">\tUrl <span class=\"type\">string</span> <span class=\"string\">`mapstructure:&quot;url&quot;`</span></span><br><span class=\"line\">\t<span class=\"comment\">// Port 端口</span></span><br><span class=\"line\">\tPort <span class=\"type\">int</span> <span class=\"string\">`mapstructure:&quot;port&quot;`</span></span><br><span class=\"line\">\t<span class=\"comment\">// ReadTimeout 读取超时</span></span><br><span class=\"line\">\tReadTimeout time.Duration <span class=\"string\">`mapstructure:&quot;readTimeout&quot;`</span></span><br><span class=\"line\">\t<span class=\"comment\">// WriteTimeout 写入超时</span></span><br><span class=\"line\">\tWriteTimeout time.Duration <span class=\"string\">`mapstructure:&quot;writeTimeout&quot;`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> ServerSetting = &amp;Server&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Database 数据库</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Database <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Type 类型</span></span><br><span class=\"line\">\tType        <span class=\"type\">string</span> <span class=\"string\">`mapstructure:&quot;type&quot;`</span></span><br><span class=\"line\">\tUser        <span class=\"type\">string</span> <span class=\"string\">`mapstructure:&quot;user&quot;`</span></span><br><span class=\"line\">\tPassword    <span class=\"type\">string</span> <span class=\"string\">`mapstructure:&quot;password&quot;`</span></span><br><span class=\"line\">\tHost        <span class=\"type\">string</span> <span class=\"string\">`mapstructure:&quot;host&quot;`</span></span><br><span class=\"line\">\tName        <span class=\"type\">string</span> <span class=\"string\">`mapstructure:&quot;name&quot;`</span></span><br><span class=\"line\">\tTablePrefix <span class=\"type\">string</span> <span class=\"string\">`mapstructure:&quot;prefix&quot;`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> DatabaseSetting = &amp;Database&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Setup 设置</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Setup</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 配置文件名(不带扩展名，即 app.yml 只需要app这部分)</span></span><br><span class=\"line\">\tviper.SetConfigName(<span class=\"string\">&quot;app&quot;</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 如果配置文件名称中没有扩展名，则为必填项</span></span><br><span class=\"line\">\tviper.SetConfigType(<span class=\"string\">&quot;yaml&quot;</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 在其中查找配置文件的路径</span></span><br><span class=\"line\">\tviper.AddConfigPath(<span class=\"string\">&quot;src/resource/&quot;</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 查找并读取配置文件</span></span><br><span class=\"line\">\terr := viper.ReadInConfig()</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 处理读取配置文件时出现的错误</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(fmt.Errorf(<span class=\"string\">&quot;读取配置异常: %w&quot;</span>, err))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;初始化配置文件成功&quot;</span>)</span><br><span class=\"line\">\tviper.WatchConfig()</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 将配置信息解析为实体</span></span><br><span class=\"line\">\terr = viper.UnmarshalKey(<span class=\"string\">&quot;settings&quot;</span>, Setting)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(fmt.Errorf(<span class=\"string\">&quot;读取配置异常，解析失败: %w&quot;</span>, err))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 设置为全局变量，后续有其他配置则新增实体和变量即可</span></span><br><span class=\"line\">\tServerSetting = &amp;Setting.Server</span><br><span class=\"line\">\tDatabaseSetting = &amp;Setting.Database</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 设置初始值</span></span><br><span class=\"line\">\t<span class=\"comment\">// 超时时间单位设置为秒</span></span><br><span class=\"line\">\tServerSetting.ReadTimeout = ServerSetting.ReadTimeout * time.Second</span><br><span class=\"line\">\tServerSetting.WriteTimeout = ServerSetting.WriteTimeout * time.Second</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>该类主要操作</p>\n<ol>\n<li>读取配置文件并解析为实体</li>\n<li>设置全局变量提供给其他类使用</li>\n<li>设置初始值</li>\n</ol>\n<h2 id=\"gorm-连接数据库\"><a class=\"markdownIt-Anchor\" href=\"#gorm-连接数据库\"></a> Gorm 连接数据库</h2>\n<p><code>database.go</code> 提供了初始化数据库连接的操作，代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> database</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;gorm.io/driver/mysql&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;gorm.io/gorm&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;gorm.io/gorm/logger&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;log&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;os&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;star-im/src/main/config/settings&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;time&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// DBS 定义全局变量，提供给其他方法调用</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> DBS *gorm.DB</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Setup 初始化数据库连接</span></span><br><span class=\"line\"><span class=\"comment\">// https://gorm.io/zh_CN/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Setup</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> err <span class=\"type\">error</span></span><br><span class=\"line\">\t<span class=\"comment\">//定义连接路径</span></span><br><span class=\"line\">\tdsn := fmt.Sprintf(<span class=\"string\">&quot;%s:%s@tcp(%s)/%s?charset=utf8&amp;parseTime=True&amp;loc=Local&quot;</span>,</span><br><span class=\"line\">\t\tsettings.DatabaseSetting.User,</span><br><span class=\"line\">\t\tsettings.DatabaseSetting.Password,</span><br><span class=\"line\">\t\tsettings.DatabaseSetting.Host,</span><br><span class=\"line\">\t\tsettings.DatabaseSetting.Name)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 连接数据库，并设置基本的配置</span></span><br><span class=\"line\">\t<span class=\"comment\">// 日志</span></span><br><span class=\"line\">\tnewLogger := logger.New(</span><br><span class=\"line\">\t\tlog.New(os.Stdout, <span class=\"string\">&quot;\\r\\n&quot;</span>, log.LstdFlags), <span class=\"comment\">// io writer（日志输出的目标，前缀和日志包含的内容）</span></span><br><span class=\"line\">\t\tlogger.Config&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 慢 SQL 阈值</span></span><br><span class=\"line\">\t\t\tSlowThreshold: time.Second,</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 日志级别</span></span><br><span class=\"line\">\t\t\tLogLevel: logger.Silent,</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 忽略ErrRecordNotFound（记录未找到）错误</span></span><br><span class=\"line\">\t\t\tIgnoreRecordNotFoundError: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 彩色打印</span></span><br><span class=\"line\">\t\t\tColorful: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t)</span><br><span class=\"line\"></span><br><span class=\"line\">\tDBS, err = gorm.Open(mysql.Open(dsn), &amp;gorm.Config&#123;</span><br><span class=\"line\">\t\tLogger: newLogger,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(fmt.Errorf(<span class=\"string\">&quot;初始化数据库异常: %w&quot;</span>, err))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获取通用数据库对象 sql.DB ，然后使用其提供的功能</span></span><br><span class=\"line\">\tsqlDB, err := DBS.DB()</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 用于设置连接池中空闲连接的最大数量。</span></span><br><span class=\"line\">\tsqlDB.SetMaxIdleConns(<span class=\"number\">10</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 设置打开数据库连接的最大数量。</span></span><br><span class=\"line\">\tsqlDB.SetMaxOpenConns(<span class=\"number\">100</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 设置了连接可复用的最大时间。</span></span><br><span class=\"line\">\tsqlDB.SetConnMaxLifetime(time.Hour)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>该类主要操作</p>\n<ol>\n<li>读取数据库连接配置</li>\n<li>初始化数据库连接</li>\n<li>定义了 慢 SQL 日志配置</li>\n<li>设置了数据库连接池配置</li>\n<li>返回全局变量DBS供其他类使用</li>\n</ol>\n<h2 id=\"init-加载配置\"><a class=\"markdownIt-Anchor\" href=\"#init-加载配置\"></a> Init 加载配置</h2>\n<p>在  <code>项目根目录/src/main/config</code> 目录下新建 <code>init.go</code> 文件，用于初始化上面两个配置项。</p>\n<p><code>init.go</code> 代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> config</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;star-im/src/main/config/database&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;star-im/src/main/config/redis&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;star-im/src/main/config/settings&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Initial 初始化</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Initial</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 初始化配置</span></span><br><span class=\"line\">\tsettings.Setup()</span><br><span class=\"line\">\t<span class=\"comment\">// 初始化数据库连接</span></span><br><span class=\"line\">\tdatabase.Setup()</span><br><span class=\"line\">  <span class=\"comment\">// 后续有其他配置项可以在下面添加……</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>该文件到时候放在main方法中执行即可</p>\n<h2 id=\"main-程序入口\"><a class=\"markdownIt-Anchor\" href=\"#main-程序入口\"></a> Main 程序入口</h2>\n<p>在  <code>项目根目录</code> 下新建一个 <code>main.go</code> 作为我们作为http程序主入口，参考 <code>gin</code> 章节初始化<code>gin</code></p>\n<p><code>main.go</code> 代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;log&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;net/http&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;star-im/src/main/config&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;star-im/src/main/config/settings&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;star-im/src/main/routers&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// init 初始化</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">init</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 初始化配置项</span></span><br><span class=\"line\">\tconfig.Initial()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 路由</span></span><br><span class=\"line\">\troutersInit := routers.Setup()</span><br><span class=\"line\">\t<span class=\"comment\">// 读取超时</span></span><br><span class=\"line\">\treadTimeout := settings.ServerSetting.ReadTimeout</span><br><span class=\"line\">\t<span class=\"comment\">// 写入超时</span></span><br><span class=\"line\">\twriteTimeout := settings.ServerSetting.WriteTimeout</span><br><span class=\"line\">\t<span class=\"comment\">// 端口</span></span><br><span class=\"line\">\tendPoint := fmt.Sprintf(<span class=\"string\">&quot;:%d&quot;</span>, settings.ServerSetting.Port)</span><br><span class=\"line\">\t<span class=\"comment\">// 最大 header 数</span></span><br><span class=\"line\">\tmaxHeaderBytes := <span class=\"number\">1</span> &lt;&lt; <span class=\"number\">20</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 配置 http Server</span></span><br><span class=\"line\">\tserver := &amp;http.Server&#123;</span><br><span class=\"line\">\t\tAddr:           endPoint,</span><br><span class=\"line\">\t\tHandler:        routersInit,</span><br><span class=\"line\">\t\tReadTimeout:    readTimeout,</span><br><span class=\"line\">\t\tWriteTimeout:   writeTimeout,</span><br><span class=\"line\">\t\tMaxHeaderBytes: maxHeaderBytes,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tlog.Printf(<span class=\"string\">&quot;[info] 启动http服务器侦听 %s&quot;</span>, endPoint)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 启动服务</span></span><br><span class=\"line\">\terr := server.ListenAndServe()</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 启动异常</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(fmt.Errorf(<span class=\"string\">&quot;启动服务异常：%w&quot;</span>, err))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>该类主要操作</p>\n<ol>\n<li>初始化配置</li>\n<li>初始化路由配置以及服务基础设置</li>\n</ol>\n<p><code>routers.Setup()</code> ，路由等信息单独放在另外一个目录 <code>routers</code>中来统一管理。</p>\n<h2 id=\"router-路由配置\"><a class=\"markdownIt-Anchor\" href=\"#router-路由配置\"></a> router 路由配置</h2>\n<p>在  <code>项目根目录/src/main/</code> 目录下新建一个 <code>routers</code> 目录，并按照层级建立 <code>api/v1</code> 两个目录，用于存放路由接口。v1<br>\n表示接口版本号，方便后续迭代接口版本。</p>\n<p>在 <code>项目根目录/src/main/routers/api</code> 目录下创建 <code>health.go</code> ，代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> api</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;star-im/src/main/common/app&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Ping 接口连通性测试</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Ping</span><span class=\"params\">(c *gin.Context)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 直接返回成功结果</span></span><br><span class=\"line\">\tc.JSON(http.StatusOK, gin.H&#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;成功&quot;</span>,</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>该类主要做连通性测试，因此直接返回json成功数据</p>\n<p>在 <code>项目根目录/src/main/routers</code>  目录下创建 <code>router.go</code> 文件用于初始化路由配置，代码如下</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> routers</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;io&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;os&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;star-im/src/main/handler&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;star-im/src/main/routers/api&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Setup 初始化路由</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Setup</span><span class=\"params\">()</span></span> *gin.Engine &#123;</span><br><span class=\"line\">\tr := gin.Default()</span><br><span class=\"line\">\t<span class=\"comment\">// 记录到文件</span></span><br><span class=\"line\">\tf, _ := os.Create(<span class=\"string\">&quot;gin.log&quot;</span>)</span><br><span class=\"line\">\tgin.DefaultWriter = io.MultiWriter(f)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 使用中间件</span></span><br><span class=\"line\">  <span class=\"comment\">// 统一日志</span></span><br><span class=\"line\">\tr.Use(gin.Logger())</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 不需要鉴权</span></span><br><span class=\"line\">\tr.GET(<span class=\"string\">&quot;/ping&quot;</span>, api.Ping)</span><br><span class=\"line\">  </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> r</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>该类主要操作</p>\n<ol>\n<li>初始化路由设置</li>\n<li>指定记录日志到文件</li>\n<li>指定具体的路由地址以及请求方式和响应函数</li>\n</ol>\n<p>这时候我们启动根目录下的 <code>main</code>函数即可启动服务，通过浏览器访问：<a href=\"http://localhost:8081/ping\">http://localhost:8081/ping</a> 可以得到返回值</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;msg&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;成功&quot;</span><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>到这一步我们已经能够提供一个提供基础访问的应用，后续我们继续完善应用的内容。</p>\n","more":"<p>通过「Go」Go 组件系列文章，我们已经了解了一些组件的基本使用。下面我们将以实现登录功能为目标来完整的搭建一个基础框架。</p>\n<p>和上述步骤一样，我们从配置项搭建开始，在  <code>项目根目录/src/main/</code> 目录下新建一个 <code>config</code> 目录，用于存放配置文件。在该目录下新建 <code>database</code>、<code>settings</code> 目录，并分别新建 <code>database.go</code> 和 <code>settings.go</code> 文件，用做初始化读取配置（viper）以及初始化数据库操作（grom）。</p>\n<h2 id=\"viper-读取配置\"><a class=\"markdownIt-Anchor\" href=\"#viper-读取配置\"></a> Viper 读取配置</h2>\n<p><code>settings.go</code> 提供了读取配置并设置到全局实体提供给其他类使用，代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Package settings</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">此文件用于读取配置文件 app.yml，并设置到对应实体，以提供给其他文件使用。</span></span><br><span class=\"line\"><span class=\"comment\">因此该文件需要优先进行初始化操作</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> settings</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/spf13/viper&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;time&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义实体装载配置文件内容</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Settings 设置</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Settings <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tServer   Server   <span class=\"string\">`mapstructure:&quot;server&quot;`</span></span><br><span class=\"line\">\tDatabase Database <span class=\"string\">`mapstructure:&quot;db&quot;`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> Setting = &amp;Settings&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Server 服务</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Server <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Url 地址</span></span><br><span class=\"line\">\tUrl <span class=\"type\">string</span> <span class=\"string\">`mapstructure:&quot;url&quot;`</span></span><br><span class=\"line\">\t<span class=\"comment\">// Port 端口</span></span><br><span class=\"line\">\tPort <span class=\"type\">int</span> <span class=\"string\">`mapstructure:&quot;port&quot;`</span></span><br><span class=\"line\">\t<span class=\"comment\">// ReadTimeout 读取超时</span></span><br><span class=\"line\">\tReadTimeout time.Duration <span class=\"string\">`mapstructure:&quot;readTimeout&quot;`</span></span><br><span class=\"line\">\t<span class=\"comment\">// WriteTimeout 写入超时</span></span><br><span class=\"line\">\tWriteTimeout time.Duration <span class=\"string\">`mapstructure:&quot;writeTimeout&quot;`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> ServerSetting = &amp;Server&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Database 数据库</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Database <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Type 类型</span></span><br><span class=\"line\">\tType        <span class=\"type\">string</span> <span class=\"string\">`mapstructure:&quot;type&quot;`</span></span><br><span class=\"line\">\tUser        <span class=\"type\">string</span> <span class=\"string\">`mapstructure:&quot;user&quot;`</span></span><br><span class=\"line\">\tPassword    <span class=\"type\">string</span> <span class=\"string\">`mapstructure:&quot;password&quot;`</span></span><br><span class=\"line\">\tHost        <span class=\"type\">string</span> <span class=\"string\">`mapstructure:&quot;host&quot;`</span></span><br><span class=\"line\">\tName        <span class=\"type\">string</span> <span class=\"string\">`mapstructure:&quot;name&quot;`</span></span><br><span class=\"line\">\tTablePrefix <span class=\"type\">string</span> <span class=\"string\">`mapstructure:&quot;prefix&quot;`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> DatabaseSetting = &amp;Database&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Setup 设置</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Setup</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 配置文件名(不带扩展名，即 app.yml 只需要app这部分)</span></span><br><span class=\"line\">\tviper.SetConfigName(<span class=\"string\">&quot;app&quot;</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 如果配置文件名称中没有扩展名，则为必填项</span></span><br><span class=\"line\">\tviper.SetConfigType(<span class=\"string\">&quot;yaml&quot;</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 在其中查找配置文件的路径</span></span><br><span class=\"line\">\tviper.AddConfigPath(<span class=\"string\">&quot;src/resource/&quot;</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 查找并读取配置文件</span></span><br><span class=\"line\">\terr := viper.ReadInConfig()</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 处理读取配置文件时出现的错误</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(fmt.Errorf(<span class=\"string\">&quot;读取配置异常: %w&quot;</span>, err))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfmt.Println(<span class=\"string\">&quot;初始化配置文件成功&quot;</span>)</span><br><span class=\"line\">\tviper.WatchConfig()</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 将配置信息解析为实体</span></span><br><span class=\"line\">\terr = viper.UnmarshalKey(<span class=\"string\">&quot;settings&quot;</span>, Setting)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(fmt.Errorf(<span class=\"string\">&quot;读取配置异常，解析失败: %w&quot;</span>, err))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 设置为全局变量，后续有其他配置则新增实体和变量即可</span></span><br><span class=\"line\">\tServerSetting = &amp;Setting.Server</span><br><span class=\"line\">\tDatabaseSetting = &amp;Setting.Database</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 设置初始值</span></span><br><span class=\"line\">\t<span class=\"comment\">// 超时时间单位设置为秒</span></span><br><span class=\"line\">\tServerSetting.ReadTimeout = ServerSetting.ReadTimeout * time.Second</span><br><span class=\"line\">\tServerSetting.WriteTimeout = ServerSetting.WriteTimeout * time.Second</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>该类主要操作</p>\n<ol>\n<li>读取配置文件并解析为实体</li>\n<li>设置全局变量提供给其他类使用</li>\n<li>设置初始值</li>\n</ol>\n<h2 id=\"gorm-连接数据库\"><a class=\"markdownIt-Anchor\" href=\"#gorm-连接数据库\"></a> Gorm 连接数据库</h2>\n<p><code>database.go</code> 提供了初始化数据库连接的操作，代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> database</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;gorm.io/driver/mysql&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;gorm.io/gorm&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;gorm.io/gorm/logger&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;log&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;os&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;star-im/src/main/config/settings&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;time&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// DBS 定义全局变量，提供给其他方法调用</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> DBS *gorm.DB</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Setup 初始化数据库连接</span></span><br><span class=\"line\"><span class=\"comment\">// https://gorm.io/zh_CN/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Setup</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> err <span class=\"type\">error</span></span><br><span class=\"line\">\t<span class=\"comment\">//定义连接路径</span></span><br><span class=\"line\">\tdsn := fmt.Sprintf(<span class=\"string\">&quot;%s:%s@tcp(%s)/%s?charset=utf8&amp;parseTime=True&amp;loc=Local&quot;</span>,</span><br><span class=\"line\">\t\tsettings.DatabaseSetting.User,</span><br><span class=\"line\">\t\tsettings.DatabaseSetting.Password,</span><br><span class=\"line\">\t\tsettings.DatabaseSetting.Host,</span><br><span class=\"line\">\t\tsettings.DatabaseSetting.Name)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 连接数据库，并设置基本的配置</span></span><br><span class=\"line\">\t<span class=\"comment\">// 日志</span></span><br><span class=\"line\">\tnewLogger := logger.New(</span><br><span class=\"line\">\t\tlog.New(os.Stdout, <span class=\"string\">&quot;\\r\\n&quot;</span>, log.LstdFlags), <span class=\"comment\">// io writer（日志输出的目标，前缀和日志包含的内容）</span></span><br><span class=\"line\">\t\tlogger.Config&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 慢 SQL 阈值</span></span><br><span class=\"line\">\t\t\tSlowThreshold: time.Second,</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 日志级别</span></span><br><span class=\"line\">\t\t\tLogLevel: logger.Silent,</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 忽略ErrRecordNotFound（记录未找到）错误</span></span><br><span class=\"line\">\t\t\tIgnoreRecordNotFoundError: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 彩色打印</span></span><br><span class=\"line\">\t\t\tColorful: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t)</span><br><span class=\"line\"></span><br><span class=\"line\">\tDBS, err = gorm.Open(mysql.Open(dsn), &amp;gorm.Config&#123;</span><br><span class=\"line\">\t\tLogger: newLogger,</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(fmt.Errorf(<span class=\"string\">&quot;初始化数据库异常: %w&quot;</span>, err))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获取通用数据库对象 sql.DB ，然后使用其提供的功能</span></span><br><span class=\"line\">\tsqlDB, err := DBS.DB()</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 用于设置连接池中空闲连接的最大数量。</span></span><br><span class=\"line\">\tsqlDB.SetMaxIdleConns(<span class=\"number\">10</span>)</span><br><span class=\"line\">\t<span class=\"comment\">// 设置打开数据库连接的最大数量。</span></span><br><span class=\"line\">\tsqlDB.SetMaxOpenConns(<span class=\"number\">100</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 设置了连接可复用的最大时间。</span></span><br><span class=\"line\">\tsqlDB.SetConnMaxLifetime(time.Hour)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>该类主要操作</p>\n<ol>\n<li>读取数据库连接配置</li>\n<li>初始化数据库连接</li>\n<li>定义了 慢 SQL 日志配置</li>\n<li>设置了数据库连接池配置</li>\n<li>返回全局变量DBS供其他类使用</li>\n</ol>\n<h2 id=\"init-加载配置\"><a class=\"markdownIt-Anchor\" href=\"#init-加载配置\"></a> Init 加载配置</h2>\n<p>在  <code>项目根目录/src/main/config</code> 目录下新建 <code>init.go</code> 文件，用于初始化上面两个配置项。</p>\n<p><code>init.go</code> 代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> config</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;star-im/src/main/config/database&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;star-im/src/main/config/redis&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;star-im/src/main/config/settings&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Initial 初始化</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Initial</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 初始化配置</span></span><br><span class=\"line\">\tsettings.Setup()</span><br><span class=\"line\">\t<span class=\"comment\">// 初始化数据库连接</span></span><br><span class=\"line\">\tdatabase.Setup()</span><br><span class=\"line\">  <span class=\"comment\">// 后续有其他配置项可以在下面添加……</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>该文件到时候放在main方法中执行即可</p>\n<h2 id=\"main-程序入口\"><a class=\"markdownIt-Anchor\" href=\"#main-程序入口\"></a> Main 程序入口</h2>\n<p>在  <code>项目根目录</code> 下新建一个 <code>main.go</code> 作为我们作为http程序主入口，参考 <code>gin</code> 章节初始化<code>gin</code></p>\n<p><code>main.go</code> 代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;log&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;net/http&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;star-im/src/main/config&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;star-im/src/main/config/settings&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;star-im/src/main/routers&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// init 初始化</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">init</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 初始化配置项</span></span><br><span class=\"line\">\tconfig.Initial()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 路由</span></span><br><span class=\"line\">\troutersInit := routers.Setup()</span><br><span class=\"line\">\t<span class=\"comment\">// 读取超时</span></span><br><span class=\"line\">\treadTimeout := settings.ServerSetting.ReadTimeout</span><br><span class=\"line\">\t<span class=\"comment\">// 写入超时</span></span><br><span class=\"line\">\twriteTimeout := settings.ServerSetting.WriteTimeout</span><br><span class=\"line\">\t<span class=\"comment\">// 端口</span></span><br><span class=\"line\">\tendPoint := fmt.Sprintf(<span class=\"string\">&quot;:%d&quot;</span>, settings.ServerSetting.Port)</span><br><span class=\"line\">\t<span class=\"comment\">// 最大 header 数</span></span><br><span class=\"line\">\tmaxHeaderBytes := <span class=\"number\">1</span> &lt;&lt; <span class=\"number\">20</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 配置 http Server</span></span><br><span class=\"line\">\tserver := &amp;http.Server&#123;</span><br><span class=\"line\">\t\tAddr:           endPoint,</span><br><span class=\"line\">\t\tHandler:        routersInit,</span><br><span class=\"line\">\t\tReadTimeout:    readTimeout,</span><br><span class=\"line\">\t\tWriteTimeout:   writeTimeout,</span><br><span class=\"line\">\t\tMaxHeaderBytes: maxHeaderBytes,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tlog.Printf(<span class=\"string\">&quot;[info] 启动http服务器侦听 %s&quot;</span>, endPoint)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 启动服务</span></span><br><span class=\"line\">\terr := server.ListenAndServe()</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 启动异常</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">panic</span>(fmt.Errorf(<span class=\"string\">&quot;启动服务异常：%w&quot;</span>, err))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>该类主要操作</p>\n<ol>\n<li>初始化配置</li>\n<li>初始化路由配置以及服务基础设置</li>\n</ol>\n<p><code>routers.Setup()</code> ，路由等信息单独放在另外一个目录 <code>routers</code>中来统一管理。</p>\n<h2 id=\"router-路由配置\"><a class=\"markdownIt-Anchor\" href=\"#router-路由配置\"></a> router 路由配置</h2>\n<p>在  <code>项目根目录/src/main/</code> 目录下新建一个 <code>routers</code> 目录，并按照层级建立 <code>api/v1</code> 两个目录，用于存放路由接口。v1<br>\n表示接口版本号，方便后续迭代接口版本。</p>\n<p>在 <code>项目根目录/src/main/routers/api</code> 目录下创建 <code>health.go</code> ，代码如下：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> api</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;star-im/src/main/common/app&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Ping 接口连通性测试</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Ping</span><span class=\"params\">(c *gin.Context)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 直接返回成功结果</span></span><br><span class=\"line\">\tc.JSON(http.StatusOK, gin.H&#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;成功&quot;</span>,</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>该类主要做连通性测试，因此直接返回json成功数据</p>\n<p>在 <code>项目根目录/src/main/routers</code>  目录下创建 <code>router.go</code> 文件用于初始化路由配置，代码如下</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> routers</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;io&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;os&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;star-im/src/main/handler&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;star-im/src/main/routers/api&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Setup 初始化路由</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Setup</span><span class=\"params\">()</span></span> *gin.Engine &#123;</span><br><span class=\"line\">\tr := gin.Default()</span><br><span class=\"line\">\t<span class=\"comment\">// 记录到文件</span></span><br><span class=\"line\">\tf, _ := os.Create(<span class=\"string\">&quot;gin.log&quot;</span>)</span><br><span class=\"line\">\tgin.DefaultWriter = io.MultiWriter(f)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 使用中间件</span></span><br><span class=\"line\">  <span class=\"comment\">// 统一日志</span></span><br><span class=\"line\">\tr.Use(gin.Logger())</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 不需要鉴权</span></span><br><span class=\"line\">\tr.GET(<span class=\"string\">&quot;/ping&quot;</span>, api.Ping)</span><br><span class=\"line\">  </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> r</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>该类主要操作</p>\n<ol>\n<li>初始化路由设置</li>\n<li>指定记录日志到文件</li>\n<li>指定具体的路由地址以及请求方式和响应函数</li>\n</ol>\n<p>这时候我们启动根目录下的 <code>main</code>函数即可启动服务，通过浏览器访问：<a href=\"http://localhost:8081/ping\">http://localhost:8081/ping</a> 可以得到返回值</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;msg&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;成功&quot;</span><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>到这一步我们已经能够提供一个提供基础访问的应用，后续我们继续完善应用的内容。</p>\n","categories":[{"name":"技术","path":"api/categories/技术.json"},{"name":"Golang","path":"api/categories/Golang.json"}],"tags":[{"name":"技术","path":"api/tags/技术.json"},{"name":"Golang","path":"api/tags/Golang.json"}]}