{"title":"「Node」Node.js 版本管理升降级","slug":"技术/node/「Node」Node.js 版本管理升降级","date":"2022-08-19T10:04:23.000Z","updated":"2022-12-25T14:23:03.739Z","comments":true,"path":"api/articles/技术/node/「Node」Node.js 版本管理升降级.json","excerpt":null,"covers":null,"content":"<h2 id=\"背景\"><a class=\"markdownIt-Anchor\" href=\"#背景\"></a> 背景</h2>\n<p>因为 Node 版本不兼容，导致 <code>npm install</code> 或者 <code>npm run dev</code> 等操作报错。因此我们需要降级或者使用指定版本的 Node。</p>\n<h2 id=\"版本管理模块-n\"><a class=\"markdownIt-Anchor\" href=\"#版本管理模块-n\"></a> 版本管理模块 N</h2>\n<p>N 是一个轻量级的 Node.js 版本管理工具。它可以让开发人员快速地安装、切换和卸载不同版本的 Node.js。</p>\n<ol>\n<li>安装 Node 版本管理模块</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g n</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>安装完成后，可以使用以下命令来查看可用的 Node.js 版本：</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">n ls</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>要安装指定版本的 Node.js，可以使用以下命令：</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">n &lt;version&gt;</span><br></pre></td></tr></table></figure>\n<p>其中，<code>&lt;version&gt;</code> 是要安装的 Node.js 版本。例如，要安装最新的 LTS 版本的 Node.js，可以使用以下命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">n lts</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>安装完成后，可以使用以下命令来切换到指定版本的 Node.js：</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">n use &lt;version&gt;</span><br></pre></td></tr></table></figure>\n<p>其中，<code>&lt;version&gt;</code> 是要切换到的 Node.js 版本。</p>\n<p>需要注意的是，N 工具并不会自动切换到新安装的 Node.js 版本，需要手动运行 <code>n use</code> 命令来切换到新版本。</p>\n<p>此外，N 还提供了其他实用的命令，例如可以使用 <code>n rm</code> 命令来卸载指定版本的 Node.js，使用 <code>n latest</code> 命令来安装最新版本的 Node.js 等。可以使用 <code>n --help</code> 命令来查看所有可用的命令。</p>\n<h2 id=\"版本管理工具-nvm-推荐\"><a class=\"markdownIt-Anchor\" href=\"#版本管理工具-nvm-推荐\"></a> 版本管理工具 NVM （推荐）</h2>\n<p>nvm （Node Version Manager）是 Node.js 版本管理器，允许通过命令行快速安装和使用不同版本的节点</p>\n<p>github: <a href=\"https://github.com/nvm-sh/nvm\">https://github.com/nvm-sh/nvm</a></p>\n<p>详细内容建议通过官方 <a href=\"http://readme.md\">readme.md</a> 文档来进行学习</p>\n<h3 id=\"windows\"><a class=\"markdownIt-Anchor\" href=\"#windows\"></a> Windows</h3>\n<p>github: <a href=\"https://github.com/coreybutler/nvm-windows\">https://github.com/coreybutler/nvm-windows</a></p>\n<p>下载地址到发布页进行下载 exe 结尾的安装程序进行安装：<a href=\"https://github.com/coreybutler/nvm-windows/releases\">https://github.com/coreybutler/nvm-windows/releases</a></p>\n<h3 id=\"macos\"><a class=\"markdownIt-Anchor\" href=\"#macos\"></a> macOS</h3>\n<p>推荐使用 brew 进行下载管理</p>\n<ol>\n<li>安装</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install nvm</span><br></pre></td></tr></table></figure>\n<p>在安装完成后，可以使用以下命令来安装指定版本的 Node.js：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install &lt;version&gt;</span><br></pre></td></tr></table></figure>\n<p>其中，<code>&lt;version&gt;</code> 是要安装的 Node.js 版本。</p>\n<p>如果安装成功仍然无法执行，则配置环境变量</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;source $(brew --prefix nvm)/nvm.sh&quot; &gt;&gt; .bash_profile;</span><br></pre></td></tr></table></figure>\n<p>使环境变量生效</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/.bash_profile</span><br></pre></td></tr></table></figure>\n<p>要安装最新的 LTS 版本的 Node.js，可以使用以下命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install --lts</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>安装完成后，可以使用以下命令来切换到指定版本的 Node.js：</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm use &lt;version&gt;</span><br></pre></td></tr></table></figure>\n<p>其中，<code>&lt;version&gt;</code> 是要切换到的 Node.js 版本。如 <code>nvm use 12.13.0</code> 即可安装指定版本</p>\n<p>需要注意的是，在使用 nvm 安装的某个版本的 Node.js 时，需要在终端中运行 nvm 命令来切换到该版本。如果不运行 nvm 命令，则终端默认使用系统中默认安装的 Node.js 版本。</p>\n<p>NVM 其他命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm list 是查找本电脑上所有的node版本</span><br><span class=\"line\">    - nvm list 查看已经安装的版本</span><br><span class=\"line\">    - nvm list installed 查看已经安装的版本</span><br><span class=\"line\">    - nvm list available 查看网络可以安装的版本</span><br><span class=\"line\">nvm install &lt;version&gt; 安装指定版本node</span><br><span class=\"line\">nvm use &lt;version&gt; 切换使用指定的版本node</span><br><span class=\"line\">nvm ls 列出所有版本</span><br><span class=\"line\">nvm current显示当前版本</span><br><span class=\"line\">nvm alias &lt;name&gt; &lt;version&gt; ## 给不同的版本号添加别名</span><br><span class=\"line\">nvm unalias &lt;name&gt; ## 删除已定义的别名</span><br><span class=\"line\">nvm reinstall-packages &lt;version&gt; ## 在当前版本node环境下，重新全局安装指定版本号的npm包</span><br><span class=\"line\">nvm on 打开nodejs控制</span><br><span class=\"line\">nvm off 关闭nodejs控制</span><br><span class=\"line\">nvm proxy 查看设置与代理</span><br><span class=\"line\">nvm node_mirror [url] 设置或者查看setting.txt中的node_mirror，如果不设置的默认是 https://nodejs.org/dist/</span><br><span class=\"line\"></span><br><span class=\"line\">nvm npm_mirror [url] 设置或者查看setting.txt中的npm_mirror,如果不设置的话默认的是： https://github.com/npm/npm/archive/.</span><br><span class=\"line\">nvm uninstall &lt;version&gt; 卸载制定的版本</span><br><span class=\"line\">nvm use [version] [arch] 切换制定的node版本和位数</span><br><span class=\"line\">nvm root [path] 设置和查看root路径</span><br><span class=\"line\">nvm version 查看当前的版本</span><br></pre></td></tr></table></figure>\n","more":"<h2 id=\"背景\"><a class=\"markdownIt-Anchor\" href=\"#背景\"></a> 背景</h2>\n<p>因为 Node 版本不兼容，导致 <code>npm install</code> 或者 <code>npm run dev</code> 等操作报错。因此我们需要降级或者使用指定版本的 Node。</p>\n<h2 id=\"版本管理模块-n\"><a class=\"markdownIt-Anchor\" href=\"#版本管理模块-n\"></a> 版本管理模块 N</h2>\n<p>N 是一个轻量级的 Node.js 版本管理工具。它可以让开发人员快速地安装、切换和卸载不同版本的 Node.js。</p>\n<ol>\n<li>安装 Node 版本管理模块</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g n</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>安装完成后，可以使用以下命令来查看可用的 Node.js 版本：</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">n ls</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>要安装指定版本的 Node.js，可以使用以下命令：</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">n &lt;version&gt;</span><br></pre></td></tr></table></figure>\n<p>其中，<code>&lt;version&gt;</code> 是要安装的 Node.js 版本。例如，要安装最新的 LTS 版本的 Node.js，可以使用以下命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">n lts</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>安装完成后，可以使用以下命令来切换到指定版本的 Node.js：</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">n use &lt;version&gt;</span><br></pre></td></tr></table></figure>\n<p>其中，<code>&lt;version&gt;</code> 是要切换到的 Node.js 版本。</p>\n<p>需要注意的是，N 工具并不会自动切换到新安装的 Node.js 版本，需要手动运行 <code>n use</code> 命令来切换到新版本。</p>\n<p>此外，N 还提供了其他实用的命令，例如可以使用 <code>n rm</code> 命令来卸载指定版本的 Node.js，使用 <code>n latest</code> 命令来安装最新版本的 Node.js 等。可以使用 <code>n --help</code> 命令来查看所有可用的命令。</p>\n<h2 id=\"版本管理工具-nvm-推荐\"><a class=\"markdownIt-Anchor\" href=\"#版本管理工具-nvm-推荐\"></a> 版本管理工具 NVM （推荐）</h2>\n<p>nvm （Node Version Manager）是 Node.js 版本管理器，允许通过命令行快速安装和使用不同版本的节点</p>\n<p>github: <a href=\"https://github.com/nvm-sh/nvm\">https://github.com/nvm-sh/nvm</a></p>\n<p>详细内容建议通过官方 <a href=\"http://readme.md\">readme.md</a> 文档来进行学习</p>\n<h3 id=\"windows\"><a class=\"markdownIt-Anchor\" href=\"#windows\"></a> Windows</h3>\n<p>github: <a href=\"https://github.com/coreybutler/nvm-windows\">https://github.com/coreybutler/nvm-windows</a></p>\n<p>下载地址到发布页进行下载 exe 结尾的安装程序进行安装：<a href=\"https://github.com/coreybutler/nvm-windows/releases\">https://github.com/coreybutler/nvm-windows/releases</a></p>\n<h3 id=\"macos\"><a class=\"markdownIt-Anchor\" href=\"#macos\"></a> macOS</h3>\n<p>推荐使用 brew 进行下载管理</p>\n<ol>\n<li>安装</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install nvm</span><br></pre></td></tr></table></figure>\n<p>在安装完成后，可以使用以下命令来安装指定版本的 Node.js：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install &lt;version&gt;</span><br></pre></td></tr></table></figure>\n<p>其中，<code>&lt;version&gt;</code> 是要安装的 Node.js 版本。</p>\n<p>如果安装成功仍然无法执行，则配置环境变量</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;source $(brew --prefix nvm)/nvm.sh&quot; &gt;&gt; .bash_profile;</span><br></pre></td></tr></table></figure>\n<p>使环境变量生效</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/.bash_profile</span><br></pre></td></tr></table></figure>\n<p>要安装最新的 LTS 版本的 Node.js，可以使用以下命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install --lts</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>安装完成后，可以使用以下命令来切换到指定版本的 Node.js：</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm use &lt;version&gt;</span><br></pre></td></tr></table></figure>\n<p>其中，<code>&lt;version&gt;</code> 是要切换到的 Node.js 版本。如 <code>nvm use 12.13.0</code> 即可安装指定版本</p>\n<p>需要注意的是，在使用 nvm 安装的某个版本的 Node.js 时，需要在终端中运行 nvm 命令来切换到该版本。如果不运行 nvm 命令，则终端默认使用系统中默认安装的 Node.js 版本。</p>\n<p>NVM 其他命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm list 是查找本电脑上所有的node版本</span><br><span class=\"line\">    - nvm list 查看已经安装的版本</span><br><span class=\"line\">    - nvm list installed 查看已经安装的版本</span><br><span class=\"line\">    - nvm list available 查看网络可以安装的版本</span><br><span class=\"line\">nvm install &lt;version&gt; 安装指定版本node</span><br><span class=\"line\">nvm use &lt;version&gt; 切换使用指定的版本node</span><br><span class=\"line\">nvm ls 列出所有版本</span><br><span class=\"line\">nvm current显示当前版本</span><br><span class=\"line\">nvm alias &lt;name&gt; &lt;version&gt; ## 给不同的版本号添加别名</span><br><span class=\"line\">nvm unalias &lt;name&gt; ## 删除已定义的别名</span><br><span class=\"line\">nvm reinstall-packages &lt;version&gt; ## 在当前版本node环境下，重新全局安装指定版本号的npm包</span><br><span class=\"line\">nvm on 打开nodejs控制</span><br><span class=\"line\">nvm off 关闭nodejs控制</span><br><span class=\"line\">nvm proxy 查看设置与代理</span><br><span class=\"line\">nvm node_mirror [url] 设置或者查看setting.txt中的node_mirror，如果不设置的默认是 https://nodejs.org/dist/</span><br><span class=\"line\"></span><br><span class=\"line\">nvm npm_mirror [url] 设置或者查看setting.txt中的npm_mirror,如果不设置的话默认的是： https://github.com/npm/npm/archive/.</span><br><span class=\"line\">nvm uninstall &lt;version&gt; 卸载制定的版本</span><br><span class=\"line\">nvm use [version] [arch] 切换制定的node版本和位数</span><br><span class=\"line\">nvm root [path] 设置和查看root路径</span><br><span class=\"line\">nvm version 查看当前的版本</span><br></pre></td></tr></table></figure>\n","categories":[{"name":"技术","path":"api/categories/技术.json"},{"name":"前端","path":"api/categories/前端.json"},{"name":"Node","path":"api/categories/Node.json"}],"tags":[{"name":"前端","path":"api/tags/前端.json"},{"name":"Node","path":"api/tags/Node.json"},{"name":"NVM","path":"api/tags/NVM.json"}]}