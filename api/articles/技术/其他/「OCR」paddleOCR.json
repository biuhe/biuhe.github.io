{"title":"「OCR」paddleOCR","slug":"技术/其他/「OCR」paddleOCR","date":"2023-01-06T08:57:00.000Z","updated":"2023-04-04T08:25:25.065Z","comments":true,"path":"api/articles/技术/其他/「OCR」paddleOCR.json","excerpt":null,"covers":null,"content":"<h2 id=\"背景\"><a class=\"markdownIt-Anchor\" href=\"#背景\"></a> 背景</h2>\n<p>paddleOCR 是百度基于 PaddlePaddle 开发的一款开源 OCR（Optical Character Recognition 光学字符识别） 工具集，旨在提供高精度、高效率的文字识别和文本检测服务，支持包括中英文在内的多种语言。本文将介绍 PaddleOCR 的主要特点和使用方法。</p>\n<h2 id=\"网站\"><a class=\"markdownIt-Anchor\" href=\"#网站\"></a> 网站</h2>\n<p>官网： <a href=\"https://www.paddlepaddle.org.cn/\">https://www.paddlepaddle.org.cn/</a></p>\n<p>Github： <a href=\"https://github.com/PaddlePaddle/PaddleOCR\">https://github.com/PaddlePaddle/PaddleOCR</a></p>\n<h2 id=\"特点\"><a class=\"markdownIt-Anchor\" href=\"#特点\"></a> 特点</h2>\n<ol>\n<li>高精度识别：PaddleOCR 提供多种预训练模型，可以处理各种不同类型的文档和图片，包括通用场景、特定行业领域、手写体等。它还支持 FineTune 模式，可以让用户自行训练模型以适应特定场景的需求。</li>\n<li>多种文本检测算法：PaddleOCR 支持 EAST、DB、SAST、PSENet 等多种文本检测算法，可以适应不同类型的文档和图片，并提供多种参数配置和优化选项，以满足不同场景的需求。</li>\n<li>多种输出格式：PaddleOCR 支持输出多种格式的识别结果，包括 bbox、quad、mask 等，可以方便地进行后续处理和分析。</li>\n<li>快速和高效：PaddleOCR 基于 PaddlePaddle 深度学习框架，提供了高效、可扩展的计算能力，在保证识别精度的同时，也可以快速地处理大量数据。</li>\n</ol>\n<h2 id=\"使用\"><a class=\"markdownIt-Anchor\" href=\"#使用\"></a> 使用</h2>\n<p>PaddleOCR 的使用方法非常简单，只需要三步即可完成文本识别和检测任务：</p>\n<ol>\n<li>安装 PaddleOCR：可以通过 pip 或源码编译的方式安装 PaddleOCR。具体的安装方法可以参考 PaddleOCR 的官方文档。</li>\n<li>加载模型：PaddleOCR 提供多个预训练模型可供选择，包括通用场景 OCR、身份证 OCR、车牌 OCR 等。可以使用 PaddleOCR 的 API 加载所需的模型。</li>\n<li>进行文本识别和检测：加载模型后，就可以调用相应的 API 对文本进行识别和检测了。</li>\n</ol>\n<h3 id=\"安装-paddlepaddle\"><a class=\"markdownIt-Anchor\" href=\"#安装-paddlepaddle\"></a> 安装 paddlepaddle</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install paddlepaddle -i https://pypi.tuna.tsinghua.edu.cn/simple\\</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装paddleocr-whl包\"><a class=\"markdownIt-Anchor\" href=\"#安装paddleocr-whl包\"></a> 安装PaddleOCR whl包</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install &quot;paddleocr&gt;=2.0.1&quot; # 推荐使用2.0.1+版本</span><br></pre></td></tr></table></figure>\n<h3 id=\"图片\"><a class=\"markdownIt-Anchor\" href=\"#图片\"></a> 图片</h3>\n<p>在图片目录中使用命令行执行识别：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">paddleocr --image_dir ./imgs/示例图片.jpg --use_angle_cls true --use_gpu false</span><br></pre></td></tr></table></figure>\n<ul>\n<li>检测+方向分类器+识别全流程：<code>--use_angle_cls true</code>设置使用方向分类器识别180度旋转文字，<code>--use_gpu false</code>设置不使用GPU</li>\n</ul>\n<h3 id=\"pdf\"><a class=\"markdownIt-Anchor\" href=\"#pdf\"></a> PDF</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">paddleocr --image_dir ./xxx.pdf --use_angle_cls true --use_gpu false --page_num 2</span><br></pre></td></tr></table></figure>\n<ul>\n<li>可以通过指定参数<code>page_num</code>来控制推理前面几页，默认为0，表示推理所有页。</li>\n</ul>\n<p>如需新增自己训练的模型，可以在<a href=\"https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.6/paddleocr.py\">paddleocr</a>中增加模型链接和字段，重新编译即可。</p>\n<p>更多whl包使用可参考<a href=\"https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.6/doc/doc_ch/whl.md\">whl包文档</a></p>\n<h3 id=\"多语言\"><a class=\"markdownIt-Anchor\" href=\"#多语言\"></a> 多语言</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">paddleocr --image_dir ./imgs_en/254.jpg --lang=en</span><br></pre></td></tr></table></figure>\n<p>PaddleOCR目前支持80个语种，可以通过修改<code>--lang</code>参数进行切换，对于英文模型，指定<code>--lang=en</code>。</p>\n<p>常用的多语言简写包括</p>\n<table>\n<thead>\n<tr>\n<th>语种</th>\n<th>缩写</th>\n<th></th>\n<th>语种</th>\n<th>缩写</th>\n<th></th>\n<th>语种</th>\n<th>缩写</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>中文</td>\n<td>ch</td>\n<td></td>\n<td>法文</td>\n<td>fr</td>\n<td></td>\n<td>日文</td>\n<td>japan</td>\n</tr>\n<tr>\n<td>英文</td>\n<td>en</td>\n<td></td>\n<td>德文</td>\n<td>german</td>\n<td></td>\n<td>韩文</td>\n<td>korean</td>\n</tr>\n<tr>\n<td>繁体中文</td>\n<td>chinese_cht</td>\n<td></td>\n<td>意大利文</td>\n<td>it</td>\n<td></td>\n<td>俄罗斯文</td>\n<td>ru</td>\n</tr>\n</tbody>\n</table>\n<p>全部语种及其对应的缩写列表可查看<a href=\"https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.6/doc/doc_ch/multi_languages.md\">多语言模型教程</a></p>\n<h3 id=\"python\"><a class=\"markdownIt-Anchor\" href=\"#python\"></a> Python</h3>\n<h4 id=\"入门\"><a class=\"markdownIt-Anchor\" href=\"#入门\"></a> 入门</h4>\n<p>可以使用以下 Python 代码来进行通用 OCR 识别：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> paddleocr</span><br><span class=\"line\">ocr = paddleocr.OCR()</span><br><span class=\"line\">result = ocr.ocr(<span class=\"string\">&#x27;image.jpg&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> result:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(line)</span><br></pre></td></tr></table></figure>\n<p>以上代码将加载通用 OCR 模型，并对名为 <code>image.jpg</code> 的图片进行识别。识别结果将以列表形式返回，每个元素表示一行文字。</p>\n<h4 id=\"图片-2\"><a class=\"markdownIt-Anchor\" href=\"#图片-2\"></a> 图片</h4>\n<ul>\n<li>检测+方向分类器+识别全流程</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> paddleocr <span class=\"keyword\">import</span> PaddleOCR, draw_ocr</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Paddleocr目前支持的多语言语种可以通过修改lang参数进行切换</span></span><br><span class=\"line\"><span class=\"comment\"># 例如`ch`, `en`, `fr`, `german`, `korean`, `japan`</span></span><br><span class=\"line\">ocr = PaddleOCR(use_angle_cls=<span class=\"literal\">True</span>, lang=<span class=\"string\">&quot;ch&quot;</span>)  <span class=\"comment\"># need to run only once to download and load model into memory</span></span><br><span class=\"line\">img_path = <span class=\"string\">&#x27;./imgs/11.jpg&#x27;</span></span><br><span class=\"line\">result = ocr.ocr(img_path, cls=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> idx <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(result)):</span><br><span class=\"line\">    res = result[idx]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(line)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显示结果</span></span><br><span class=\"line\"><span class=\"comment\"># 如果本地没有simfang.ttf，可以在doc/fonts目录下下载</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\">result = result[<span class=\"number\">0</span>]</span><br><span class=\"line\">image = Image.<span class=\"built_in\">open</span>(img_path).convert(<span class=\"string\">&#x27;RGB&#x27;</span>)</span><br><span class=\"line\">boxes = [line[<span class=\"number\">0</span>] <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> result]</span><br><span class=\"line\">txts = [line[<span class=\"number\">1</span>][<span class=\"number\">0</span>] <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> result]</span><br><span class=\"line\">scores = [line[<span class=\"number\">1</span>][<span class=\"number\">1</span>] <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> result]</span><br><span class=\"line\">im_show = draw_ocr(image, boxes, txts, scores, font_path=<span class=\"string\">&#x27;doc/fonts/simfang.ttf&#x27;</span>)</span><br><span class=\"line\">im_show = Image.fromarray(im_show)</span><br><span class=\"line\">im_show.save(<span class=\"string\">&#x27;result.jpg&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>可以将这个方法包装成函数，提供给接口调用，返回 res 结果</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> paddleocr <span class=\"keyword\">import</span> PaddleOCR</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">read</span>(<span class=\"params\">filePath</span>):</span><br><span class=\"line\">    <span class=\"comment\"># Paddleocr目前支持的多语言语种可以通过修改lang参数进行切换</span></span><br><span class=\"line\">    <span class=\"comment\"># 例如`ch`, `en`, `fr`, `german`, `korean`, `japan`</span></span><br><span class=\"line\">    ocr = PaddleOCR(use_angle_cls=<span class=\"literal\">True</span>, lang=<span class=\"string\">&quot;ch&quot;</span>)  <span class=\"comment\"># need to run only once to download and load model into memory</span></span><br><span class=\"line\">    img_path = filePath</span><br><span class=\"line\">    result = ocr.ocr(img_path, cls=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    res = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> idx <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(result)):</span><br><span class=\"line\">        res = result[idx]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br></pre></td></tr></table></figure>\n<h4 id=\"pdf-2\"><a class=\"markdownIt-Anchor\" href=\"#pdf-2\"></a> PDF</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> paddleocr <span class=\"keyword\">import</span> PaddleOCR, draw_ocr</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Paddleocr目前支持的多语言语种可以通过修改lang参数进行切换</span></span><br><span class=\"line\"><span class=\"comment\"># 例如`ch`, `en`, `fr`, `german`, `korean`, `japan`</span></span><br><span class=\"line\">ocr = PaddleOCR(use_angle_cls=<span class=\"literal\">True</span>, lang=<span class=\"string\">&quot;ch&quot;</span>, page_num=<span class=\"number\">2</span>)  <span class=\"comment\"># need to run only once to download and load model into memory</span></span><br><span class=\"line\">img_path = <span class=\"string\">&#x27;./xxx.pdf&#x27;</span></span><br><span class=\"line\">result = ocr.ocr(img_path, cls=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> idx <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(result)):</span><br><span class=\"line\">    res = result[idx]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(line)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显示结果</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> fitz</span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"><span class=\"keyword\">import</span> cv2</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">imgs = []</span><br><span class=\"line\"><span class=\"keyword\">with</span> fitz.<span class=\"built_in\">open</span>(img_path) <span class=\"keyword\">as</span> pdf:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> pg <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, pdf.pageCount):</span><br><span class=\"line\">        page = pdf[pg]</span><br><span class=\"line\">        mat = fitz.Matrix(<span class=\"number\">2</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">        pm = page.getPixmap(matrix=mat, alpha=<span class=\"literal\">False</span>)</span><br><span class=\"line\">        <span class=\"comment\"># if width or height &gt; 2000 pixels, don&#x27;t enlarge the image</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> pm.width &gt; <span class=\"number\">2000</span> <span class=\"keyword\">or</span> pm.height &gt; <span class=\"number\">2000</span>:</span><br><span class=\"line\">            pm = page.getPixmap(matrix=fitz.Matrix(<span class=\"number\">1</span>, <span class=\"number\">1</span>), alpha=<span class=\"literal\">False</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        img = Image.frombytes(<span class=\"string\">&quot;RGB&quot;</span>, [pm.width, pm.height], pm.samples)</span><br><span class=\"line\">        img = cv2.cvtColor(np.array(img), cv2.COLOR_RGB2BGR)</span><br><span class=\"line\">        imgs.append(img)</span><br><span class=\"line\"><span class=\"keyword\">for</span> idx <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(result)):</span><br><span class=\"line\">    res = result[idx]</span><br><span class=\"line\">    image = imgs[idx]</span><br><span class=\"line\">    boxes = [line[<span class=\"number\">0</span>] <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> res]</span><br><span class=\"line\">    txts = [line[<span class=\"number\">1</span>][<span class=\"number\">0</span>] <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> res]</span><br><span class=\"line\">    scores = [line[<span class=\"number\">1</span>][<span class=\"number\">1</span>] <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> res]</span><br><span class=\"line\">    im_show = draw_ocr(image, boxes, txts, scores, font_path=<span class=\"string\">&#x27;doc/fonts/simfang.ttf&#x27;</span>)</span><br><span class=\"line\">    im_show = Image.fromarray(im_show)</span><br><span class=\"line\">    im_show.save(<span class=\"string\">&#x27;result_page_&#123;&#125;.jpg&#x27;</span>.<span class=\"built_in\">format</span>(idx))</span><br></pre></td></tr></table></figure>\n<h2 id=\"其他\"><a class=\"markdownIt-Anchor\" href=\"#其他\"></a> 其他</h2>\n<ul>\n<li>稳定版本：python 3.7.9，numpy 要指定安装 1.19.3 及以下版本</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install numpy==1.19.3</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>提示 <code>ModuleNotFoundError: No module named 'common' </code> 异常</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import common, dual, tight, data, prox</span><br><span class=\"line\">      ModuleNotFoundError: No module named &#x27;common&#x27;</span><br><span class=\"line\">      [end of output]</span><br><span class=\"line\">  </span><br><span class=\"line\">  note: This error originates from a subprocess, and is likely not a problem with pip.</span><br><span class=\"line\">error: metadata-generation-failed</span><br><span class=\"line\"></span><br><span class=\"line\">× Encountered error while generating package metadata.</span><br><span class=\"line\">╰─&gt; See above for output.</span><br></pre></td></tr></table></figure>\n<p>需要安装common、dual、tight、data、prox模块：</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install common -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\">pip install dual -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\">pip install tight -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\">pip install data -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\">pip install prox -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>提示 <code>ModuleNotFoundError: No module named 'paddle’</code> 或者 <code>No module named ‘paddle.fluid’</code></p>\n<p>重新安装依赖包 Image \\ paddleOCR</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install Image -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\">pip install paddleocr -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\"></a> 总结</h2>\n<p>PaddleOCR 是一款高精度、高效率的 OCR 工具集，可以适应不同类型的文档和图片，并支持多种输出格式。通过简单的 API 调用就可以进行文本识别和检测，并在实际应用中发挥重要作用。</p>\n<h2 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h2>\n<blockquote>\n<p><a href=\"https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.6/doc/doc_ch/quickstart.md\">PaddleOCR 快速开始</a></p>\n</blockquote>\n","more":"<h2 id=\"背景\"><a class=\"markdownIt-Anchor\" href=\"#背景\"></a> 背景</h2>\n<p>paddleOCR 是百度基于 PaddlePaddle 开发的一款开源 OCR（Optical Character Recognition 光学字符识别） 工具集，旨在提供高精度、高效率的文字识别和文本检测服务，支持包括中英文在内的多种语言。本文将介绍 PaddleOCR 的主要特点和使用方法。</p>\n<h2 id=\"网站\"><a class=\"markdownIt-Anchor\" href=\"#网站\"></a> 网站</h2>\n<p>官网： <a href=\"https://www.paddlepaddle.org.cn/\">https://www.paddlepaddle.org.cn/</a></p>\n<p>Github： <a href=\"https://github.com/PaddlePaddle/PaddleOCR\">https://github.com/PaddlePaddle/PaddleOCR</a></p>\n<h2 id=\"特点\"><a class=\"markdownIt-Anchor\" href=\"#特点\"></a> 特点</h2>\n<ol>\n<li>高精度识别：PaddleOCR 提供多种预训练模型，可以处理各种不同类型的文档和图片，包括通用场景、特定行业领域、手写体等。它还支持 FineTune 模式，可以让用户自行训练模型以适应特定场景的需求。</li>\n<li>多种文本检测算法：PaddleOCR 支持 EAST、DB、SAST、PSENet 等多种文本检测算法，可以适应不同类型的文档和图片，并提供多种参数配置和优化选项，以满足不同场景的需求。</li>\n<li>多种输出格式：PaddleOCR 支持输出多种格式的识别结果，包括 bbox、quad、mask 等，可以方便地进行后续处理和分析。</li>\n<li>快速和高效：PaddleOCR 基于 PaddlePaddle 深度学习框架，提供了高效、可扩展的计算能力，在保证识别精度的同时，也可以快速地处理大量数据。</li>\n</ol>\n<h2 id=\"使用\"><a class=\"markdownIt-Anchor\" href=\"#使用\"></a> 使用</h2>\n<p>PaddleOCR 的使用方法非常简单，只需要三步即可完成文本识别和检测任务：</p>\n<ol>\n<li>安装 PaddleOCR：可以通过 pip 或源码编译的方式安装 PaddleOCR。具体的安装方法可以参考 PaddleOCR 的官方文档。</li>\n<li>加载模型：PaddleOCR 提供多个预训练模型可供选择，包括通用场景 OCR、身份证 OCR、车牌 OCR 等。可以使用 PaddleOCR 的 API 加载所需的模型。</li>\n<li>进行文本识别和检测：加载模型后，就可以调用相应的 API 对文本进行识别和检测了。</li>\n</ol>\n<h3 id=\"安装-paddlepaddle\"><a class=\"markdownIt-Anchor\" href=\"#安装-paddlepaddle\"></a> 安装 paddlepaddle</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install paddlepaddle -i https://pypi.tuna.tsinghua.edu.cn/simple\\</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装paddleocr-whl包\"><a class=\"markdownIt-Anchor\" href=\"#安装paddleocr-whl包\"></a> 安装PaddleOCR whl包</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install &quot;paddleocr&gt;=2.0.1&quot; # 推荐使用2.0.1+版本</span><br></pre></td></tr></table></figure>\n<h3 id=\"图片\"><a class=\"markdownIt-Anchor\" href=\"#图片\"></a> 图片</h3>\n<p>在图片目录中使用命令行执行识别：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">paddleocr --image_dir ./imgs/示例图片.jpg --use_angle_cls true --use_gpu false</span><br></pre></td></tr></table></figure>\n<ul>\n<li>检测+方向分类器+识别全流程：<code>--use_angle_cls true</code>设置使用方向分类器识别180度旋转文字，<code>--use_gpu false</code>设置不使用GPU</li>\n</ul>\n<h3 id=\"pdf\"><a class=\"markdownIt-Anchor\" href=\"#pdf\"></a> PDF</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">paddleocr --image_dir ./xxx.pdf --use_angle_cls true --use_gpu false --page_num 2</span><br></pre></td></tr></table></figure>\n<ul>\n<li>可以通过指定参数<code>page_num</code>来控制推理前面几页，默认为0，表示推理所有页。</li>\n</ul>\n<p>如需新增自己训练的模型，可以在<a href=\"https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.6/paddleocr.py\">paddleocr</a>中增加模型链接和字段，重新编译即可。</p>\n<p>更多whl包使用可参考<a href=\"https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.6/doc/doc_ch/whl.md\">whl包文档</a></p>\n<h3 id=\"多语言\"><a class=\"markdownIt-Anchor\" href=\"#多语言\"></a> 多语言</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">paddleocr --image_dir ./imgs_en/254.jpg --lang=en</span><br></pre></td></tr></table></figure>\n<p>PaddleOCR目前支持80个语种，可以通过修改<code>--lang</code>参数进行切换，对于英文模型，指定<code>--lang=en</code>。</p>\n<p>常用的多语言简写包括</p>\n<table>\n<thead>\n<tr>\n<th>语种</th>\n<th>缩写</th>\n<th></th>\n<th>语种</th>\n<th>缩写</th>\n<th></th>\n<th>语种</th>\n<th>缩写</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>中文</td>\n<td>ch</td>\n<td></td>\n<td>法文</td>\n<td>fr</td>\n<td></td>\n<td>日文</td>\n<td>japan</td>\n</tr>\n<tr>\n<td>英文</td>\n<td>en</td>\n<td></td>\n<td>德文</td>\n<td>german</td>\n<td></td>\n<td>韩文</td>\n<td>korean</td>\n</tr>\n<tr>\n<td>繁体中文</td>\n<td>chinese_cht</td>\n<td></td>\n<td>意大利文</td>\n<td>it</td>\n<td></td>\n<td>俄罗斯文</td>\n<td>ru</td>\n</tr>\n</tbody>\n</table>\n<p>全部语种及其对应的缩写列表可查看<a href=\"https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.6/doc/doc_ch/multi_languages.md\">多语言模型教程</a></p>\n<h3 id=\"python\"><a class=\"markdownIt-Anchor\" href=\"#python\"></a> Python</h3>\n<h4 id=\"入门\"><a class=\"markdownIt-Anchor\" href=\"#入门\"></a> 入门</h4>\n<p>可以使用以下 Python 代码来进行通用 OCR 识别：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> paddleocr</span><br><span class=\"line\">ocr = paddleocr.OCR()</span><br><span class=\"line\">result = ocr.ocr(<span class=\"string\">&#x27;image.jpg&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> result:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(line)</span><br></pre></td></tr></table></figure>\n<p>以上代码将加载通用 OCR 模型，并对名为 <code>image.jpg</code> 的图片进行识别。识别结果将以列表形式返回，每个元素表示一行文字。</p>\n<h4 id=\"图片-2\"><a class=\"markdownIt-Anchor\" href=\"#图片-2\"></a> 图片</h4>\n<ul>\n<li>检测+方向分类器+识别全流程</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> paddleocr <span class=\"keyword\">import</span> PaddleOCR, draw_ocr</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Paddleocr目前支持的多语言语种可以通过修改lang参数进行切换</span></span><br><span class=\"line\"><span class=\"comment\"># 例如`ch`, `en`, `fr`, `german`, `korean`, `japan`</span></span><br><span class=\"line\">ocr = PaddleOCR(use_angle_cls=<span class=\"literal\">True</span>, lang=<span class=\"string\">&quot;ch&quot;</span>)  <span class=\"comment\"># need to run only once to download and load model into memory</span></span><br><span class=\"line\">img_path = <span class=\"string\">&#x27;./imgs/11.jpg&#x27;</span></span><br><span class=\"line\">result = ocr.ocr(img_path, cls=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> idx <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(result)):</span><br><span class=\"line\">    res = result[idx]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(line)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显示结果</span></span><br><span class=\"line\"><span class=\"comment\"># 如果本地没有simfang.ttf，可以在doc/fonts目录下下载</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\">result = result[<span class=\"number\">0</span>]</span><br><span class=\"line\">image = Image.<span class=\"built_in\">open</span>(img_path).convert(<span class=\"string\">&#x27;RGB&#x27;</span>)</span><br><span class=\"line\">boxes = [line[<span class=\"number\">0</span>] <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> result]</span><br><span class=\"line\">txts = [line[<span class=\"number\">1</span>][<span class=\"number\">0</span>] <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> result]</span><br><span class=\"line\">scores = [line[<span class=\"number\">1</span>][<span class=\"number\">1</span>] <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> result]</span><br><span class=\"line\">im_show = draw_ocr(image, boxes, txts, scores, font_path=<span class=\"string\">&#x27;doc/fonts/simfang.ttf&#x27;</span>)</span><br><span class=\"line\">im_show = Image.fromarray(im_show)</span><br><span class=\"line\">im_show.save(<span class=\"string\">&#x27;result.jpg&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>可以将这个方法包装成函数，提供给接口调用，返回 res 结果</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> paddleocr <span class=\"keyword\">import</span> PaddleOCR</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">read</span>(<span class=\"params\">filePath</span>):</span><br><span class=\"line\">    <span class=\"comment\"># Paddleocr目前支持的多语言语种可以通过修改lang参数进行切换</span></span><br><span class=\"line\">    <span class=\"comment\"># 例如`ch`, `en`, `fr`, `german`, `korean`, `japan`</span></span><br><span class=\"line\">    ocr = PaddleOCR(use_angle_cls=<span class=\"literal\">True</span>, lang=<span class=\"string\">&quot;ch&quot;</span>)  <span class=\"comment\"># need to run only once to download and load model into memory</span></span><br><span class=\"line\">    img_path = filePath</span><br><span class=\"line\">    result = ocr.ocr(img_path, cls=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    res = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> idx <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(result)):</span><br><span class=\"line\">        res = result[idx]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br></pre></td></tr></table></figure>\n<h4 id=\"pdf-2\"><a class=\"markdownIt-Anchor\" href=\"#pdf-2\"></a> PDF</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> paddleocr <span class=\"keyword\">import</span> PaddleOCR, draw_ocr</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Paddleocr目前支持的多语言语种可以通过修改lang参数进行切换</span></span><br><span class=\"line\"><span class=\"comment\"># 例如`ch`, `en`, `fr`, `german`, `korean`, `japan`</span></span><br><span class=\"line\">ocr = PaddleOCR(use_angle_cls=<span class=\"literal\">True</span>, lang=<span class=\"string\">&quot;ch&quot;</span>, page_num=<span class=\"number\">2</span>)  <span class=\"comment\"># need to run only once to download and load model into memory</span></span><br><span class=\"line\">img_path = <span class=\"string\">&#x27;./xxx.pdf&#x27;</span></span><br><span class=\"line\">result = ocr.ocr(img_path, cls=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> idx <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(result)):</span><br><span class=\"line\">    res = result[idx]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(line)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显示结果</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> fitz</span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"><span class=\"keyword\">import</span> cv2</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">imgs = []</span><br><span class=\"line\"><span class=\"keyword\">with</span> fitz.<span class=\"built_in\">open</span>(img_path) <span class=\"keyword\">as</span> pdf:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> pg <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, pdf.pageCount):</span><br><span class=\"line\">        page = pdf[pg]</span><br><span class=\"line\">        mat = fitz.Matrix(<span class=\"number\">2</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">        pm = page.getPixmap(matrix=mat, alpha=<span class=\"literal\">False</span>)</span><br><span class=\"line\">        <span class=\"comment\"># if width or height &gt; 2000 pixels, don&#x27;t enlarge the image</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> pm.width &gt; <span class=\"number\">2000</span> <span class=\"keyword\">or</span> pm.height &gt; <span class=\"number\">2000</span>:</span><br><span class=\"line\">            pm = page.getPixmap(matrix=fitz.Matrix(<span class=\"number\">1</span>, <span class=\"number\">1</span>), alpha=<span class=\"literal\">False</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        img = Image.frombytes(<span class=\"string\">&quot;RGB&quot;</span>, [pm.width, pm.height], pm.samples)</span><br><span class=\"line\">        img = cv2.cvtColor(np.array(img), cv2.COLOR_RGB2BGR)</span><br><span class=\"line\">        imgs.append(img)</span><br><span class=\"line\"><span class=\"keyword\">for</span> idx <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(result)):</span><br><span class=\"line\">    res = result[idx]</span><br><span class=\"line\">    image = imgs[idx]</span><br><span class=\"line\">    boxes = [line[<span class=\"number\">0</span>] <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> res]</span><br><span class=\"line\">    txts = [line[<span class=\"number\">1</span>][<span class=\"number\">0</span>] <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> res]</span><br><span class=\"line\">    scores = [line[<span class=\"number\">1</span>][<span class=\"number\">1</span>] <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> res]</span><br><span class=\"line\">    im_show = draw_ocr(image, boxes, txts, scores, font_path=<span class=\"string\">&#x27;doc/fonts/simfang.ttf&#x27;</span>)</span><br><span class=\"line\">    im_show = Image.fromarray(im_show)</span><br><span class=\"line\">    im_show.save(<span class=\"string\">&#x27;result_page_&#123;&#125;.jpg&#x27;</span>.<span class=\"built_in\">format</span>(idx))</span><br></pre></td></tr></table></figure>\n<h2 id=\"其他\"><a class=\"markdownIt-Anchor\" href=\"#其他\"></a> 其他</h2>\n<ul>\n<li>稳定版本：python 3.7.9，numpy 要指定安装 1.19.3 及以下版本</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install numpy==1.19.3</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>提示 <code>ModuleNotFoundError: No module named 'common' </code> 异常</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import common, dual, tight, data, prox</span><br><span class=\"line\">      ModuleNotFoundError: No module named &#x27;common&#x27;</span><br><span class=\"line\">      [end of output]</span><br><span class=\"line\">  </span><br><span class=\"line\">  note: This error originates from a subprocess, and is likely not a problem with pip.</span><br><span class=\"line\">error: metadata-generation-failed</span><br><span class=\"line\"></span><br><span class=\"line\">× Encountered error while generating package metadata.</span><br><span class=\"line\">╰─&gt; See above for output.</span><br></pre></td></tr></table></figure>\n<p>需要安装common、dual、tight、data、prox模块：</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install common -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\">pip install dual -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\">pip install tight -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\">pip install data -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\">pip install prox -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>提示 <code>ModuleNotFoundError: No module named 'paddle’</code> 或者 <code>No module named ‘paddle.fluid’</code></p>\n<p>重新安装依赖包 Image \\ paddleOCR</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install Image -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\">pip install paddleocr -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\"></a> 总结</h2>\n<p>PaddleOCR 是一款高精度、高效率的 OCR 工具集，可以适应不同类型的文档和图片，并支持多种输出格式。通过简单的 API 调用就可以进行文本识别和检测，并在实际应用中发挥重要作用。</p>\n<h2 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h2>\n<blockquote>\n<p><a href=\"https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.6/doc/doc_ch/quickstart.md\">PaddleOCR 快速开始</a></p>\n</blockquote>\n","categories":[{"name":"技术","path":"api/categories/技术.json"},{"name":"OCR","path":"api/categories/OCR.json"}],"tags":[{"name":"技术","path":"api/tags/技术.json"},{"name":"OCR","path":"api/tags/OCR.json"}]}