{"title":"【Hexo】1-使用Hexo搭建个人博客","slug":"写作/hexo/【Hexo】1-使用Hexo搭建个人博客","date":"2022-09-09T16:00:00.000Z","updated":"2022-10-20T14:13:33.107Z","comments":true,"path":"api/articles/写作/hexo/【Hexo】1-使用Hexo搭建个人博客.json","excerpt":null,"covers":null,"content":"<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n<p>如首篇文章所说的，在很久之前我就想搭建自己的个人博客网站，以前在 csdn 的博客不知道为啥就被封禁了，懒得去申诉了。我也有想过自己开发一个，但是奈何审美水平不高，做一个好的前端页面自觉要花费很多功夫，搭建完成之后还要购买服务器来进行维护，都是比较耗费尽力的，后来找了一轮相关的资料，就找到 <a href=\"https://hexo.io/zh-cn/\">Hexo</a> 这个博客的框架。觉得各方面都比较符合我的期望，下面会做一些入门的介绍。</p>\n<h2 id=\"什么是hexo\"><a class=\"markdownIt-Anchor\" href=\"#什么是hexo\"></a> 什么是Hexo</h2>\n<p>Hexo 是是一个快速、简洁且高效的静态博客框架，基于 Node.js 渲染，支持 Markdown 语法且能通过命令行一键部署到 github、heroku、coding 等网站。拥有免费且丰富的主题和插件，文章的本体可以留存在本地备份随时修改。</p>\n<p>官方网站：<a href=\"https://hexo.io/zh-cn/\">https://hexo.io/zh-cn/</a></p>\n<p>Github: <a href=\"https://github.com/hexojs/hexo\">https://github.com/hexojs/hexo</a></p>\n<h2 id=\"优点和不足\"><a class=\"markdownIt-Anchor\" href=\"#优点和不足\"></a> 优点和不足</h2>\n<p>优点：免费；轻量；可以更改主题、增加插件等；原文内容在本地，迁移方便；</p>\n<p>不足：依赖本地环境，不太适用于不同设备上随心发布；</p>\n<h2 id=\"安装前置环境\"><a class=\"markdownIt-Anchor\" href=\"#安装前置环境\"></a> 安装前置环境</h2>\n<p>安装前提：</p>\n<p><a href=\"https://github.com\">Github</a> | <a href=\"https://gitee.com/\">Gitee</a>| <a href=\"https://coding.net/\">Coding</a> ：资源/代码存放的仓库，目前他们均提供了相关的 pages —— 一种免费的静态站点托管服务，让我们可以在仓库里托管和发布自己的静态网站页面。</p>\n<p><a href=\"https://nodejs.org/zh-cn/\">Nodejs</a> （Node 各系统安装教程：<a href=\"https://wsxc0617.github.io/2019/05/11/4-nodejs-install-setup/\">【NODE】NODE.JS 安装配置(转)</a>） ：用来创建 Hexo 博客框架的，建议使用 Node.js 12.0 及以上版本</p>\n<p><a href=\"https://git-scm.com/\">Git</a>：将本地的 Hexo 内容提交到 Github 上去</p>\n<h2 id=\"准备-github-pages-仓库\"><a class=\"markdownIt-Anchor\" href=\"#准备-github-pages-仓库\"></a> 准备 Github Pages 仓库</h2>\n<h3 id=\"注册github帐号\"><a class=\"markdownIt-Anchor\" href=\"#注册github帐号\"></a> 注册Github帐号</h3>\n<p>已经有Github帐号跳过此步，首先进入<a href=\"https://github.com/\">Github</a>进行注册，用户名、邮箱和密码之后都需要用到，自己记好。</p>\n<p>在 Shell 中本地全局设置用户名和邮箱</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;GitHub 用户名&quot;</span><br><span class=\"line\">git config --global user.email &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建-ssh-密钥\"><a class=\"markdownIt-Anchor\" href=\"#创建-ssh-密钥\"></a> 创建 SSH 密钥</h3>\n<p>在 Shell 中运行以下命令并多次回车</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;Github 邮箱&quot;</span><br></pre></td></tr></table></figure>\n<p>然后键入以下指令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-agent -s</span><br></pre></td></tr></table></figure>\n<p>出现<code>echo Agent pid xxxxx;</code> 继续输入指令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure>\n<p>如果提示错误：<code>Could not open a connection to your authentication agent.</code>则输入以下指令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eval &#x27;ssh-agent -s&#x27;</span><br><span class=\"line\">ssh-add</span><br></pre></td></tr></table></figure>\n<p>会出现如：<code>Identity added: /c/Users/用户/.ssh/id_rsa (/c/users/用户/.ssh/id_rsa)</code></p>\n<p>到了这一步，就可以添加SSH key到你的Github账户了。输入以下指令，拷贝Key（或者进入 [C:\\Users\\用户名.ssh] 目录（要勾选显示“隐藏的项目”），用记事本打开公钥 id_rsa.pub 文件并复制里面的内容。)：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clip &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>\n<p>然后到Github里面，点击右上角个人头像——Settings，在左边菜单栏找到SSH and GPG keys，点击New SSH key，Title 随便命名，Key就粘贴上刚才复制的key，然后点Add SSH key，最后会让你重新输入下gitHub的密码即可</p>\n<p>添加完成之后在自己电脑上执行 shell 命令进行测试</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<p>可能会看到有警告，没事，输入“yes”就好</p>\n<p>出现类似：<code>Hi xxx! You've successfully authenticated, but GitHub does not provide shell access.</code>就表示SSH配置好了</p>\n<h3 id=\"创建repository\"><a class=\"markdownIt-Anchor\" href=\"#创建repository\"></a> 创建repository</h3>\n<p>repository相当于一个仓库，用来放置你的代码文件。首先，登陆进入<a href=\"https://github.com/\">Github</a>，并进入个人页面——右上角自己的头像 —— Your repositories，然后选择<code>Repositories</code>，点击New，新建一个<code>repository</code></p>\n<p>创建时，只需要填写Repository name即可，这个名字的格式必须为 [你的github名称].github.io，<a href=\"http://xn--biuhe-dq1hs2fdz5aotrzx0c.github.io\">例如我的为biuhe.github.io</a>，点击<code>Create repository</code> 即可创建</p>\n<h2 id=\"安装-hexo\"><a class=\"markdownIt-Anchor\" href=\"#安装-hexo\"></a> 安装 Hexo</h2>\n<p>安装好 Node 之后，输入安装 hexo 命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo</span><br></pre></td></tr></table></figure>\n<p>安装完成后，在自己选定的文件夹下（如 D:\\Hexo），执行以下指令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n<p>Hexo 会进行初始化，在目标文件夹建立博客所需要的文件，随后我们安装依赖包：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<p>就已经安装好了，我们可以通过 hexo help (或者 hexo h )来查看 hexo 支持的命令</p>\n<p>以下为常用命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo help # 帮助</span><br><span class=\"line\">hexo new &quot;文章名称&quot; # 新建文章</span><br><span class=\"line\">hexo new page &quot;页面名称&quot; # 新建页面</span><br><span class=\"line\">hexo g # 完整命令为 hexo generate，用于生成静态文件</span><br><span class=\"line\">hexo d # 完整命令为 hexo deploy，用于将本地文件发布到 github 上</span><br><span class=\"line\">hexo s # 完整命令为 hexo server，用于启动服务器，主要用来本地预览</span><br><span class=\"line\">hexo n # 完整命令为 hexo new，用于新建一篇文章</span><br><span class=\"line\">hexo clean # 清楚缓存文件等</span><br></pre></td></tr></table></figure>\n<p>通常我们只要执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<p>然后用浏览器访问 <a href=\"http://localhost:4000\">http://localhost:4000</a> 就可以在本地预览到博客内容了，hexo3.0使用的默认主题是landscape。</p>\n<p>如果页面无法加载可能是端口被占用了，可以先在刚才命令窗口<code>Ctrl+C</code> 关闭服务器，使用 <code>hexo server -p 端口号</code> ，如<code>hexo server -p 5000 </code> 指定运行端口为 5000， 然后通过  http://localhost:5000进行访问</p>\n<p>Hexo 博客目录文件结构如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml       # 网站配置信息</span><br><span class=\"line\">├── db.json           # 数据</span><br><span class=\"line\">├── node_modules      # node下载的依赖模块（npm install生成的）</span><br><span class=\"line\">├── package-lock.json # 锁定 node 安装模块的版本号</span><br><span class=\"line\">├── package.json      # node 依赖模块信息</span><br><span class=\"line\">├── public            # 网站文件</span><br><span class=\"line\">├── scaffolds         # 模板文件</span><br><span class=\"line\">├── source            # 用户资源（存放markdown文档）</span><br><span class=\"line\">└── themes            # 主题</span><br></pre></td></tr></table></figure>\n<h2 id=\"部署github\"><a class=\"markdownIt-Anchor\" href=\"#部署github\"></a> 部署github</h2>\n<p>编辑刚才创建的hexo目录下的 <code>_config.yml</code> 文件，在 <code>_config.yml</code> 最下方，添加如下配置(命令中的第一个biuhe为Github的用户名，第二个biuhe为之前New的Repository的名字，记得改成自己的。另外记得一点，hexo的配置文件中任何冒号后面都是带一个空格的，否则会出现异常：ERROR Deployer not found : github）</p>\n<p>详细可参考：<a href=\"https://hexo.io/docs/one-command-deployment\">https://hexo.io/docs/one-command-deployment</a></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span></span><br><span class=\"line\">      <span class=\"attr\">github:</span> <span class=\"string\">git@github.com:biuhe/biuhe.github.io.git,master</span></span><br></pre></td></tr></table></figure>\n<p>配置 <code>_config.yml </code>并保存，执行以下命令部署到Github上。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p>如果执行hexo d命令报下名错：<code>ERROR Deployer not found: git</code></p>\n<p>就需要安装一下 <code>hexo-deployer-git</code> 这个模块：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>安装好了继续执行<code>hexo d</code>部署命令，输入 github 的账号密码，就可以访问了。我的是： <a href=\"http://biuhe.github.io\">biuhe.github.io</a></p>\n<h2 id=\"发表一篇文章\"><a class=\"markdownIt-Anchor\" href=\"#发表一篇文章\"></a> 发表一篇文章</h2>\n<p>1.在Git Bash执行命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new &quot;my new post&quot;</span><br></pre></td></tr></table></figure>\n<p>2.在创建的hexo目录下<code>source/_posts</code> 文件中打开 <a href=\"http://my-new-post.md\">my-new-post.md</a></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: my new post #可以改成中文的，如“新文章”</span><br><span class=\"line\">date: 2016-02-21 16:04:09 #发表日期，一般不改动</span><br><span class=\"line\">categories: blog #文章文类</span><br><span class=\"line\"><span class=\"section\">tags: [文章] #文章标签，多于一项时用这种格式，只有一项时使用tags: blog</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br><span class=\"line\"><span class=\"section\">#这里是正文，用markdown写，你可以选择写一段显示在首页的简介后，加上</span></span><br><span class=\"line\">&lt;!--more--&gt;，在&lt;!--more--&gt;之前的内容会显示在首页，之后的内容会被隐藏，当游客点击Read more才能看到。</span><br></pre></td></tr></table></figure>\n<p>写完文章后，你可以使用</p>\n<ol>\n<li><code>hexo g</code> 生成静态文件。</li>\n<li><code>hexo s</code> 在本地预览效果</li>\n<li><code>hexo d</code> 同步到 github，然后使用<a href=\"http://xn--github-8h6jw94g4v9a.github.io\">http://github用户名.github.io</a> 进行访问</li>\n</ol>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\"></a> 总结</h2>\n<p>到这里，就算初步搭好了一个属于自己的独立博客，后续就是本地写文章然后部署最后发布就行。当然这只是最基本的流程，hexo提供了许多好看的主题，后续会进行讲解。</p>\n<h2 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h2>\n<blockquote>\n<p>本文摘自：<a href=\"http://tengj.top/\">嘟嘟独立</a></p>\n<p>官方中文文档：<a href=\"https://hexo.io/zh-cn/docs/\">https://hexo.io/zh-cn/docs/</a></p>\n</blockquote>\n","more":"<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n<p>如首篇文章所说的，在很久之前我就想搭建自己的个人博客网站，以前在 csdn 的博客不知道为啥就被封禁了，懒得去申诉了。我也有想过自己开发一个，但是奈何审美水平不高，做一个好的前端页面自觉要花费很多功夫，搭建完成之后还要购买服务器来进行维护，都是比较耗费尽力的，后来找了一轮相关的资料，就找到 <a href=\"https://hexo.io/zh-cn/\">Hexo</a> 这个博客的框架。觉得各方面都比较符合我的期望，下面会做一些入门的介绍。</p>\n<h2 id=\"什么是hexo\"><a class=\"markdownIt-Anchor\" href=\"#什么是hexo\"></a> 什么是Hexo</h2>\n<p>Hexo 是是一个快速、简洁且高效的静态博客框架，基于 Node.js 渲染，支持 Markdown 语法且能通过命令行一键部署到 github、heroku、coding 等网站。拥有免费且丰富的主题和插件，文章的本体可以留存在本地备份随时修改。</p>\n<p>官方网站：<a href=\"https://hexo.io/zh-cn/\">https://hexo.io/zh-cn/</a></p>\n<p>Github: <a href=\"https://github.com/hexojs/hexo\">https://github.com/hexojs/hexo</a></p>\n<h2 id=\"优点和不足\"><a class=\"markdownIt-Anchor\" href=\"#优点和不足\"></a> 优点和不足</h2>\n<p>优点：免费；轻量；可以更改主题、增加插件等；原文内容在本地，迁移方便；</p>\n<p>不足：依赖本地环境，不太适用于不同设备上随心发布；</p>\n<h2 id=\"安装前置环境\"><a class=\"markdownIt-Anchor\" href=\"#安装前置环境\"></a> 安装前置环境</h2>\n<p>安装前提：</p>\n<p><a href=\"https://github.com\">Github</a> | <a href=\"https://gitee.com/\">Gitee</a>| <a href=\"https://coding.net/\">Coding</a> ：资源/代码存放的仓库，目前他们均提供了相关的 pages —— 一种免费的静态站点托管服务，让我们可以在仓库里托管和发布自己的静态网站页面。</p>\n<p><a href=\"https://nodejs.org/zh-cn/\">Nodejs</a> （Node 各系统安装教程：<a href=\"https://wsxc0617.github.io/2019/05/11/4-nodejs-install-setup/\">【NODE】NODE.JS 安装配置(转)</a>） ：用来创建 Hexo 博客框架的，建议使用 Node.js 12.0 及以上版本</p>\n<p><a href=\"https://git-scm.com/\">Git</a>：将本地的 Hexo 内容提交到 Github 上去</p>\n<h2 id=\"准备-github-pages-仓库\"><a class=\"markdownIt-Anchor\" href=\"#准备-github-pages-仓库\"></a> 准备 Github Pages 仓库</h2>\n<h3 id=\"注册github帐号\"><a class=\"markdownIt-Anchor\" href=\"#注册github帐号\"></a> 注册Github帐号</h3>\n<p>已经有Github帐号跳过此步，首先进入<a href=\"https://github.com/\">Github</a>进行注册，用户名、邮箱和密码之后都需要用到，自己记好。</p>\n<p>在 Shell 中本地全局设置用户名和邮箱</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;GitHub 用户名&quot;</span><br><span class=\"line\">git config --global user.email &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建-ssh-密钥\"><a class=\"markdownIt-Anchor\" href=\"#创建-ssh-密钥\"></a> 创建 SSH 密钥</h3>\n<p>在 Shell 中运行以下命令并多次回车</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;Github 邮箱&quot;</span><br></pre></td></tr></table></figure>\n<p>然后键入以下指令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-agent -s</span><br></pre></td></tr></table></figure>\n<p>出现<code>echo Agent pid xxxxx;</code> 继续输入指令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure>\n<p>如果提示错误：<code>Could not open a connection to your authentication agent.</code>则输入以下指令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eval &#x27;ssh-agent -s&#x27;</span><br><span class=\"line\">ssh-add</span><br></pre></td></tr></table></figure>\n<p>会出现如：<code>Identity added: /c/Users/用户/.ssh/id_rsa (/c/users/用户/.ssh/id_rsa)</code></p>\n<p>到了这一步，就可以添加SSH key到你的Github账户了。输入以下指令，拷贝Key（或者进入 [C:\\Users\\用户名.ssh] 目录（要勾选显示“隐藏的项目”），用记事本打开公钥 id_rsa.pub 文件并复制里面的内容。)：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clip &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>\n<p>然后到Github里面，点击右上角个人头像——Settings，在左边菜单栏找到SSH and GPG keys，点击New SSH key，Title 随便命名，Key就粘贴上刚才复制的key，然后点Add SSH key，最后会让你重新输入下gitHub的密码即可</p>\n<p>添加完成之后在自己电脑上执行 shell 命令进行测试</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<p>可能会看到有警告，没事，输入“yes”就好</p>\n<p>出现类似：<code>Hi xxx! You've successfully authenticated, but GitHub does not provide shell access.</code>就表示SSH配置好了</p>\n<h3 id=\"创建repository\"><a class=\"markdownIt-Anchor\" href=\"#创建repository\"></a> 创建repository</h3>\n<p>repository相当于一个仓库，用来放置你的代码文件。首先，登陆进入<a href=\"https://github.com/\">Github</a>，并进入个人页面——右上角自己的头像 —— Your repositories，然后选择<code>Repositories</code>，点击New，新建一个<code>repository</code></p>\n<p>创建时，只需要填写Repository name即可，这个名字的格式必须为 [你的github名称].github.io，<a href=\"http://xn--biuhe-dq1hs2fdz5aotrzx0c.github.io\">例如我的为biuhe.github.io</a>，点击<code>Create repository</code> 即可创建</p>\n<h2 id=\"安装-hexo\"><a class=\"markdownIt-Anchor\" href=\"#安装-hexo\"></a> 安装 Hexo</h2>\n<p>安装好 Node 之后，输入安装 hexo 命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo</span><br></pre></td></tr></table></figure>\n<p>安装完成后，在自己选定的文件夹下（如 D:\\Hexo），执行以下指令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n<p>Hexo 会进行初始化，在目标文件夹建立博客所需要的文件，随后我们安装依赖包：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<p>就已经安装好了，我们可以通过 hexo help (或者 hexo h )来查看 hexo 支持的命令</p>\n<p>以下为常用命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo help # 帮助</span><br><span class=\"line\">hexo new &quot;文章名称&quot; # 新建文章</span><br><span class=\"line\">hexo new page &quot;页面名称&quot; # 新建页面</span><br><span class=\"line\">hexo g # 完整命令为 hexo generate，用于生成静态文件</span><br><span class=\"line\">hexo d # 完整命令为 hexo deploy，用于将本地文件发布到 github 上</span><br><span class=\"line\">hexo s # 完整命令为 hexo server，用于启动服务器，主要用来本地预览</span><br><span class=\"line\">hexo n # 完整命令为 hexo new，用于新建一篇文章</span><br><span class=\"line\">hexo clean # 清楚缓存文件等</span><br></pre></td></tr></table></figure>\n<p>通常我们只要执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<p>然后用浏览器访问 <a href=\"http://localhost:4000\">http://localhost:4000</a> 就可以在本地预览到博客内容了，hexo3.0使用的默认主题是landscape。</p>\n<p>如果页面无法加载可能是端口被占用了，可以先在刚才命令窗口<code>Ctrl+C</code> 关闭服务器，使用 <code>hexo server -p 端口号</code> ，如<code>hexo server -p 5000 </code> 指定运行端口为 5000， 然后通过  http://localhost:5000进行访问</p>\n<p>Hexo 博客目录文件结构如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml       # 网站配置信息</span><br><span class=\"line\">├── db.json           # 数据</span><br><span class=\"line\">├── node_modules      # node下载的依赖模块（npm install生成的）</span><br><span class=\"line\">├── package-lock.json # 锁定 node 安装模块的版本号</span><br><span class=\"line\">├── package.json      # node 依赖模块信息</span><br><span class=\"line\">├── public            # 网站文件</span><br><span class=\"line\">├── scaffolds         # 模板文件</span><br><span class=\"line\">├── source            # 用户资源（存放markdown文档）</span><br><span class=\"line\">└── themes            # 主题</span><br></pre></td></tr></table></figure>\n<h2 id=\"部署github\"><a class=\"markdownIt-Anchor\" href=\"#部署github\"></a> 部署github</h2>\n<p>编辑刚才创建的hexo目录下的 <code>_config.yml</code> 文件，在 <code>_config.yml</code> 最下方，添加如下配置(命令中的第一个biuhe为Github的用户名，第二个biuhe为之前New的Repository的名字，记得改成自己的。另外记得一点，hexo的配置文件中任何冒号后面都是带一个空格的，否则会出现异常：ERROR Deployer not found : github）</p>\n<p>详细可参考：<a href=\"https://hexo.io/docs/one-command-deployment\">https://hexo.io/docs/one-command-deployment</a></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span></span><br><span class=\"line\">      <span class=\"attr\">github:</span> <span class=\"string\">git@github.com:biuhe/biuhe.github.io.git,master</span></span><br></pre></td></tr></table></figure>\n<p>配置 <code>_config.yml </code>并保存，执行以下命令部署到Github上。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p>如果执行hexo d命令报下名错：<code>ERROR Deployer not found: git</code></p>\n<p>就需要安装一下 <code>hexo-deployer-git</code> 这个模块：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>安装好了继续执行<code>hexo d</code>部署命令，输入 github 的账号密码，就可以访问了。我的是： <a href=\"http://biuhe.github.io\">biuhe.github.io</a></p>\n<h2 id=\"发表一篇文章\"><a class=\"markdownIt-Anchor\" href=\"#发表一篇文章\"></a> 发表一篇文章</h2>\n<p>1.在Git Bash执行命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new &quot;my new post&quot;</span><br></pre></td></tr></table></figure>\n<p>2.在创建的hexo目录下<code>source/_posts</code> 文件中打开 <a href=\"http://my-new-post.md\">my-new-post.md</a></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: my new post #可以改成中文的，如“新文章”</span><br><span class=\"line\">date: 2016-02-21 16:04:09 #发表日期，一般不改动</span><br><span class=\"line\">categories: blog #文章文类</span><br><span class=\"line\"><span class=\"section\">tags: [文章] #文章标签，多于一项时用这种格式，只有一项时使用tags: blog</span></span><br><span class=\"line\"><span class=\"section\">---</span></span><br><span class=\"line\"><span class=\"section\">#这里是正文，用markdown写，你可以选择写一段显示在首页的简介后，加上</span></span><br><span class=\"line\">&lt;!--more--&gt;，在&lt;!--more--&gt;之前的内容会显示在首页，之后的内容会被隐藏，当游客点击Read more才能看到。</span><br></pre></td></tr></table></figure>\n<p>写完文章后，你可以使用</p>\n<ol>\n<li><code>hexo g</code> 生成静态文件。</li>\n<li><code>hexo s</code> 在本地预览效果</li>\n<li><code>hexo d</code> 同步到 github，然后使用<a href=\"http://xn--github-8h6jw94g4v9a.github.io\">http://github用户名.github.io</a> 进行访问</li>\n</ol>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\"></a> 总结</h2>\n<p>到这里，就算初步搭好了一个属于自己的独立博客，后续就是本地写文章然后部署最后发布就行。当然这只是最基本的流程，hexo提供了许多好看的主题，后续会进行讲解。</p>\n<h2 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h2>\n<blockquote>\n<p>本文摘自：<a href=\"http://tengj.top/\">嘟嘟独立</a></p>\n<p>官方中文文档：<a href=\"https://hexo.io/zh-cn/docs/\">https://hexo.io/zh-cn/docs/</a></p>\n</blockquote>\n","categories":[{"name":"写作","path":"api/categories/写作.json"},{"name":"博客","path":"api/categories/博客.json"},{"name":"Hexo","path":"api/categories/Hexo.json"}],"tags":[{"name":"博客","path":"api/tags/博客.json"},{"name":"Blog","path":"api/tags/Blog.json"},{"name":"Hexo","path":"api/tags/Hexo.json"}]}